{"version":3,"sources":["Assets/logo.jpg","Components/Signup/index.js","Components/Login/index.js","Components/ProfileToT/index.js","Components/Profile/index.js","Components/ToTSubmit/index.js","Components/Header/index.js","Components/Question/options.js","Components/Question/imageAndTextOption.js","Components/Question/imageAndText.js","Components/Question/index.js","Components/Creator/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signup","state","userName","email","password","confirmPassword","usernameCheck","usernameError","open1","errorMessage","change","e","setState","target","name","value","handleClose","openIndex","console","log","open2","onSubmit","preventDefault","alphanumeric","lowercasePassword","toLowerCase","alertString","length","test","localeCompare","axios","post","headers","Cookie","then","response","className","Card","raised","CardHeader","title","TextField","label","this","onChange","error","InputProps","endAdornment","InputAdornment","position","Tooltip","IconButton","aria-label","component","type","Button","variant","color","onClick","Typography","gutterBottom","to","Dialog","open","onClose","bind","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Component","Login","validated","data","status","props","changeIsLoggedIn","facebookLogin","userID","fbLogin","window","location","href","Grid","container","direction","alignItems","fullWidth","startIcon","appId","autLoad","fields","callback","render","renderProps","justify","BorderLinearProgress","withStyles","root","height","backgroundColor","lighten","bar","borderRadius","LinearProgress","useStyles","makeStyles","theme","flexGrow","margin","spacing","CustomizedProgressBars","percent","classes","ProfileToT","questionState","questionId","image1","image2","text1","text2","url1","url2","option1Votes","option2Votes","totalVotes","updateQuestionState","retrievedQuestionState","getQuestionState","getQuestionDetails","get","questionText","option1","text","option2","parseFloat","numberOfVotes","imageURL","catch","percentage1","percentage2","toFixed","alt","src","CardContent","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","palette","background","paper","width","Profile","useTheme","useState","setValue","setProfileToTs","setSavedToTs","profile","setProfile","url","setURL","setName","handleChange","event","newValue","useEffect","getToTs","a","async","fetchSavedToTs","result","fetchProfileToTs","Avatar","AppBar","Tabs","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","display","URL","profileName","Question","avatar","grow","menuButton","marginRight","breakpoints","up","sectionDesktop","sectionMobile","Header","fullNavBar","isLoggedIn","React","anchorEl","setAnchorEl","Boolean","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Fragment","aria-controls","aria-haspopup","currentTarget","MenuItem","Toolbar","disableGutters","logo","Options","saved","save","parent","userId","unsave","share","facebookShare","FB","ui","method","quote","hashtag","selectedValue","setOpen","getSavedQuestions","config","Accept","withCredentials","resp","includes","item","ImageAndTextQuestionOption","string","image","handleClick","option","cardContainerClass","charAt","toUpperCase","slice","ImageAndTextQuestion","incrementChoice1","selectedOption","incrementChoice2","seconds","group","updateStateFromAPICall","setQuestionState","Cookies","myInterval","setInterval","clearInterval","CircularProgress","size","unsplashUrl1","unsplashUrl2","isSponsored","searchString","results","image1Url","image2Url","urlOption1","urlOption2","urlOption3","urlOption4","submit","image1Name","document","getElementById","image2Name","fd","FormData","append","option1Object","option2Object","res","alert","handleClickOpen","search","fetchString","fetch","processResponse","json","urls","small","searchTextFieldKeyPressed","keyCode","selectUnsplashUrl1","urlToSet","selectUnsplashUrl2","image1SelectedHandler","files","createObjectURL","image2SelectedHandler","accept","htmlFor","onKeyDown","GridList","GridListTile","createMuiTheme","primary","main","light","dark","secondary","App","saveToLocalStorage","localStorage","set","JSON","stringify","loadFromLocalStorage","isLoggedInCopy","parse","questionStateCopy","getIsLoggedIn","UNSAFE_componentWillMount","UNSAFE_componentWillUnmount","UNSAFE_componentWillUpdate","StylesProvider","injectFirst","path","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,kC,qiBCmBtBC,G,kNACnBC,MAAQ,CACNC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,cAAc,GACdC,eAAc,EACdC,OAAO,EACPC,aAAc,I,EAGhBC,OAAS,SAAAC,GACP,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EA8B9BC,YAAc,SAACC,GACbC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKjBC,SAAW,SAAAV,GACTA,EAAEW,iBACF,IAAIC,EAAe,iBAEfC,EAAmB,EAAKvB,MAAMG,SAASqB,cACvCC,EAAY,GACW,KAAvB,EAAKzB,MAAMC,UAAsC,KAApB,EAAKD,MAAME,OAAsC,KAAvB,EAAKF,MAAMG,UAAgD,KAA9B,EAAKH,MAAMI,gBACjGqB,GAAa,gCAGV,EAAKzB,MAAMC,SAASyB,OAAS,IAC9BD,GAAa,mDAE8B,IAAzCH,EAAaK,KAAK,EAAK3B,MAAMC,YAAgE,IAAzCqB,EAAaK,KAAK,EAAK3B,MAAMG,YACnFsB,GAAa,6EAEZ,EAAKzB,MAAMG,SAASuB,OAAS,IAC9BD,GAAa,oDAEX,EAAKzB,MAAMG,WAAc,EAAKH,MAAMI,kBACtCqB,GAAa,6BAE2C,IAAvDF,EAAkBK,cAAc,EAAK5B,MAAMG,YAC5CsB,GAAa,oDAEuB,IAtB5B,KAsBAE,KAAK,EAAK3B,MAAMG,YACxBsB,GAAa,sCAGA,KAAdA,IAAgD,IAA3B,EAAKzB,MAAMM,cAC/BuB,IAAMC,KAAK,yDAA0D,CACnEjB,KAAM,EAAKb,MAAMC,SACjBC,MAAO,EAAKF,MAAME,MAClBC,SAAU,EAAKH,MAAMG,UACpB,CACD4B,QAAS,CACPC,OAAQ,sDAGXC,MAAK,SAAAC,GAELjB,QAAQC,IAAI,eAGf,EAAKP,SAAS,CAACH,aAAaiB,IAC5B,EAAKd,SAAS,CAACJ,OAAM,M,wEAIf,IAAD,OAEP,OACE,6BACE,yBAAK4B,UAAU,cACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,aAAaE,QAAM,GACjC,0BAAMF,UAAU,UACd,kBAACG,EAAA,EAAD,CACEC,MAAM,WAER,6BACA,kBAACC,EAAA,EAAD,CACE3B,KAAK,WACL4B,MAAM,YACNN,UAAU,gBACVrB,MAAO4B,KAAK1C,MAAMC,SAClB0C,SAAU,SAAAjC,GAAC,OAAI,EAAKD,OAAOC,IAC3BkC,MAAOF,KAAK1C,MAAMM,cAClBuC,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,0CACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAOxB,6BACA,kBAACZ,EAAA,EAAD,CACE3B,KAAK,QACL4B,MAAM,QACN3B,MAAO4B,KAAK1C,MAAME,MAClByC,SAAU,SAAAjC,GAAC,OAAI,EAAKD,OAAOC,IAC3B2C,KAAK,QACLR,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,iCACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAMtB,6BACF,kBAACZ,EAAA,EAAD,CACE3B,KAAK,WACL4B,MAAM,WACN3B,MAAO4B,KAAK1C,MAAMG,SAClBwC,SAAU,SAAAjC,GAAC,OAAI,EAAKD,OAAOC,IAC3B2C,KAAK,WACLR,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,uFAEX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAMtB,6BACF,kBAACZ,EAAA,EAAD,CACE3B,KAAK,kBACL4B,MAAM,mBACN3B,MAAO4B,KAAK1C,MAAMI,gBAClBuC,SAAU,SAAAjC,GAAC,OAAI,EAAKD,OAAOC,IAC3B2C,KAAK,WACLlB,UAAU,eACVU,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,+DACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAOxB,6BACA,6BACA,kBAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,SAAA/C,GAAC,OAAI,EAAKU,SAASV,KAAxE,UAGA,6BACA,kBAACgD,EAAA,EAAD,CAAYH,QAAQ,WAAWpB,UAAU,GAAGqB,MAAM,gBAAgBG,cAAY,GAA9E,gCAGA,kBAAC,IAAD,CAAMC,GAAG,UAAT,aAIN,kBAACC,EAAA,EAAD,CACEC,KAAMpB,KAAK1C,MAAMO,MACjBwD,QAASrB,KAAK3B,YAAYiD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEnB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,IACtC,kBAACC,EAAA,EAAD,KACG3B,KAAK1C,MAAMQ,cAEd,kBAAC8D,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK3B,YAAYiD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,gB,GAzNwBe,c,4CCDfC,G,kNACnBxE,MAAQ,CACNE,MAAO,GACPC,SAAU,GACVsE,UAAW,EACXlE,OAAO,EACPC,aAAc,I,EAGhBO,YAAc,SAACC,GACbC,QAAQC,IAAIF,GACM,IAAdA,EACF,EAAKL,SAAS,CACZJ,OAAO,IAGT,EAAKI,SAAS,CACZQ,OAAO,K,EAKbV,OAAS,SAACC,GACR,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BM,SAAW,SAACV,GACVA,EAAEW,iBACF,IAAII,EAAc,GACO,KAArB,EAAKzB,MAAME,OAAwC,KAAxB,EAAKF,MAAMG,UACxCsB,GAAe,+BACf,EAAKd,SAAS,CAAEH,aAAciB,IAC9B,EAAKd,SAAS,CAAEJ,OAAO,KAEvBsB,IACGC,KAAK,wDAAyD,CAC7D5B,MAAO,EAAKF,MAAME,MAClBC,SAAU,EAAKH,MAAMG,WAEtB8B,MAAK,SAACC,GACLjB,QAAQC,IAAIgB,GACZ,EAAKvB,SAAS,CAAE8D,UAAWvC,EAASwC,OACZ,MAApBxC,EAASyC,OACX,EAAKC,MAAMC,kBAAiB,IAE5BpD,GAAe,sBACf,EAAKd,SAAS,CAAEH,aAAciB,IAC9B,EAAKd,SAAS,CAAEJ,OAAO,IACvB,EAAKI,SAAS,CAAER,SAAU,U,EAQpC2E,cAAgB,SAAC5C,GACXA,EAAS6C,QACX,EAAKH,MAAMC,kBAAiB,GAC5B5D,QAAQC,IAAI,mCAEZD,QAAQC,IAAI,oC,EAIhB8D,QAAU,WACRC,OAAOC,SAASC,KACd,qG,wEAGM,IAAD,OACP,OACE,6BACE,yBAAKhD,UAAU,WACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,QAAM,GAChC,0BAAMF,UAAU,SACd,kBAACG,EAAA,EAAD,CAAYC,MAAM,UAClB,kBAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAAC/C,EAAA,EAAD,CACE3B,KAAK,QACL4B,MAAM,QACNc,QAAQ,WACRpB,UAAU,iBACVrB,MAAO4B,KAAK1C,MAAME,MAClBsF,WAAW,EACX7C,SAAU,SAACjC,GAAD,OAAO,EAAKD,OAAOC,MAE/B,kBAAC8B,EAAA,EAAD,CACE3B,KAAK,WACL4B,MAAM,WACNc,QAAQ,WACRzC,MAAO4B,KAAK1C,MAAMG,SAClBqF,WAAW,EACX7C,SAAU,SAACjC,GAAD,OAAO,EAAKD,OAAOC,IAC7B2C,KAAK,cAGT,kBAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACjC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNrB,UAAU,qBACVsB,QAAS,SAAC/C,GAAD,OAAO,EAAKU,SAASV,KAJhC,SAQA,kBAAC4C,EAAA,EAAD,CACEnB,UAAU,sBACVgD,KAAK,oHAELM,UAAW,kBAAC,IAAD,OAJb,wBAQA,kBAAC,IAAD,CACEC,MAAM,kBACNC,SAAO,EACPC,OAAO,qBACPC,SAAUnD,KAAKoC,cACfgB,OAAQ,SAACC,GAAD,OACN,kBAACzC,EAAA,EAAD,CACEG,QAASsC,EAAYtC,QACrBtB,UAAU,sBACVsD,UAAW,kBAAC,IAAD,OAHb,2BASJ,kBAACL,EAAA,EAAD,CACEC,WAAS,EACTE,WAAW,SACXS,QAAQ,SACR7D,UAAU,iBAEV,kBAACuB,EAAA,EAAD,CAAYF,MAAM,gBAAgBrB,UAAU,cAA5C,0BAGA,kBAAC,IAAD,CAAMyB,GAAG,WAAT,iBAOZ,kBAACC,EAAA,EAAD,CACEC,KAAMpB,KAAK1C,MAAMO,MACjBwD,QAASrB,KAAK3B,YAAYiD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,IACtC,kBAACC,EAAA,EAAD,KAAgB3B,KAAK1C,MAAMQ,cAC3B,kBAAC8D,EAAA,EAAD,KACE,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK3B,YAAYiD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,gB,GA7JuBe,c,0KCN7B0B,GAAuBC,aAAW,CACtCC,KAAM,CACJC,OAAQ,GACRC,gBAAiBC,aAAQ,UAAW,KAEtCC,IAAK,CACHC,aAAc,GACdH,gBAAiB,YAPQH,CAS1BO,MAEGC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCT,KAAM,CACJU,SAAU,GAEZC,OAAQ,CACNA,OAAQF,EAAMG,QAAQ,QAI1B,SAASC,GAAT,GAA8C,IAAZC,EAAW,EAAXA,QAC1BC,EAAUR,KAEhB,OACE,yBAAKvE,UAAW+E,EAAQf,MACtB,kBAACF,GAAD,CACE9D,UAAW+E,EAAQJ,OACnBvD,QAAQ,cACRC,MAAM,YACN1C,MAAOmG,K,IAMME,G,2MACnBnH,MAAQ,CACNoH,cAAe,CACbC,WAAY,IAEd9E,MAAO,GACP+E,OAAQ,KACRC,OAAQ,KACRC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,KAAM,GAENC,aAAc,EACdC,aAAc,EACdC,WAAY,I,EAOdC,oBAAsB,WACpB,IAAIC,EAAyB,EAAKpD,MAAMqD,mBACxChH,QAAQC,IAAI,8BACZD,QAAQC,IAAI8G,GACZ/G,QAAQC,IAAI,8BACZ,EAAKP,SACH,CACEyG,cAAeY,IAEjB,WACE/G,QAAQC,IAAI,EAAKlB,MAAMoH,eACvB,EAAKc,mBAAmB,EAAKlI,MAAMoH,cAAcC,gB,mFAdrD3E,KAAKqF,wB,yCAmBYV,GAAa,IAAD,OAC7BxF,IACGsG,IAAI,sDAAwDd,GAC5DpF,MAAK,SAACC,GACL,EAAKvB,SAAS,CACZ4B,MAAOL,EAASwC,KAAK0D,aACrBZ,MAAOtF,EAASwC,KAAK2D,QAAQC,KAC7Bb,MAAOvF,EAASwC,KAAK6D,QAAQD,KAC7BV,aAAcY,WAAWtG,EAASwC,KAAK2D,QAAQI,eAC/CZ,aAAcW,WAAWtG,EAASwC,KAAK6D,QAAQE,eAC/CX,WAAYU,WACVtG,EAASwC,KAAK2D,QAAQI,cACpBvG,EAASwC,KAAK6D,QAAQE,iBAGxBvG,EAASwC,KAAK2D,QAAQK,UACxB,EAAK/H,SAAS,CACZ+G,KAAMxF,EAASwC,KAAK2D,QAAQK,WAG5BxG,EAASwC,KAAK6D,QAAQG,UACxB,EAAK/H,SAAS,CACZgH,KAAMzF,EAASwC,KAAK6D,QAAQG,WAGhCzH,QAAQC,IAAI,qBACZD,QAAQC,IAAIgB,EAASwC,SAEtBiE,OAAM,SAAS/F,GACd3B,QAAQC,IAAI,eAAiB0B,Q,+BAOjC,IAAIgG,EAAc,EACdC,EAAc,EAYlB,OAX8B,IAA1BnG,KAAK1C,MAAM8H,aACbc,GAEGlG,KAAK1C,MAAM4H,aAAelF,KAAK1C,MAAM8H,WADtC,KAEAgB,QAAQ,GACVD,GACE,KACC,EAAInG,KAAK1C,MAAM4H,aAAelF,KAAK1C,MAAM8H,aAC1CgB,QAAQ,IAIV,yBAAK3G,UAAU,UACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,eAAeE,QAAM,GACnC,6BACE,kBAACC,EAAA,EAAD,CAAYC,MAAOG,KAAK1C,MAAMuC,QAC9B,6BACA,6BACA,yBAAKJ,UAAU,SACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QAAQ4G,IAAI,GAAGC,IAAKtG,KAAK1C,MAAM0H,OAC9C,kBAACuB,GAAA,EAAD,KACE,kBAACvF,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,KAAKH,UAAU,MAC7CV,KAAK1C,MAAMwH,QAGhB,kBAACR,GAAD,CAAwBC,QAAS2B,IACjC,kBAAClF,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,aAC9BqF,EAAc,MAGnB,yBAAKzG,UAAU,SACb,yBAAKA,UAAU,QAAQ4G,IAAI,GAAGC,IAAKtG,KAAK1C,MAAM2H,OAC9C,kBAACsB,GAAA,EAAD,KACE,kBAACvF,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,KAAKH,UAAU,MAC7CV,KAAK1C,MAAMyH,QAGhB,kBAACT,GAAD,CAAwBC,QAAS4B,IACjC,kBAACnF,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,aAC9BsF,EAAc,OAIrB,kBAACnF,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,aAC9Bb,KAAK1C,MAAM8H,WAAa,oBAE3B,6BACA,6BACA,kBAACxE,EAAA,EAAD,CACEG,QAAS,WACPwB,OAAOC,SAASC,KAAO,aAEzB5B,QAAQ,YACRC,MAAM,WALR,mB,GA7H4Be,a,iBCvBxC,SAAS2E,GAAStE,GAAQ,IACduE,EAAqCvE,EAArCuE,SAAUrI,EAA2B8D,EAA3B9D,MAAOsI,EAAoBxE,EAApBwE,MAAUC,EADd,YACwBzE,EADxB,8BAGrB,OACE,kBAAClB,EAAA,EAAD,eACEN,UAAU,MACVkG,KAAK,WACLC,OAAQzI,IAAUsI,EAClBhF,GAAE,8BAAyBgF,GAC3BnF,kBAAA,yBAAmCmF,IAC/BC,GAEHvI,IAAUsI,GAAS,kBAACI,GAAA,EAAD,CAAKC,EAAG,GAAIN,IAWxC,SAASO,GAAUN,GACf,MAAO,CACHhF,GAAG,kBAAD,OAAoBgF,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAM1C,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCT,KAAM,CACFE,gBAAiBO,EAAM+C,QAAQC,WAAWC,MAC1CC,MAAO,SAIA,SAASC,GAAQnF,GAC5B,IAAMsC,EAAUR,KACVE,EAAQoD,cAFqB,EAGTC,mBAAS,GAHA,mBAG5BnJ,EAH4B,KAGrBoJ,EAHqB,OAIED,mBAAS,IAJX,mBAIfE,GAJe,aAKFF,mBAAS,IALP,mBAKjBG,GALiB,aAMTH,mBAAS,GANA,mBAM5BlF,EAN4B,aAONkF,oBAAS,IAPH,mBAO5BI,EAP4B,KAOnBC,EAPmB,OAQdL,mBAAS,IARK,mBAQ5BM,EAR4B,KAQvBC,EARuB,OASZP,mBAAS,IATG,mBAS5BpJ,EAT4B,KAStB4J,EATsB,KAW7BC,EAAe,SAACC,EAAOC,GACzBV,EAASU,IAObC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAU,0BAAAC,EAAAC,OAAA,gDAmBNC,EAAiB,0BAAAF,EAAAC,OAAA,kEAAAD,EAAA,MACElJ,IAAMC,KACzB,oDAAqD,CACjDiD,OAAO,CAACA,WACT,CACDhD,QAAS,CACPC,OAAQ,uDANK,OACbkJ,EADa,OAUnBd,EAAac,EAAOxG,MAVD,sCAZE,0BAAAqG,EAAAC,OAAA,kEAAAD,EAAA,MACAlJ,IAAMC,KACzB,4DAA6D,CAC3DiD,OAAO,CAACA,WACP,CACDhD,QAAS,CACPC,OAAQ,uDANO,OACfkJ,EADe,OAUrBf,EAAee,EAAOxG,MAVD,qCAwBzByG,GACAF,IAhCY,sCAwDhB,OACI,yBAAK9I,UAAU,eACX,kBAACmB,EAAA,EAAD,CAAQnB,UAAU,cAAcsB,QAAS,SAAA/C,GAAC,OAtB9C4J,GAAW,QACXrJ,QAAQC,IAAI,CAACmJ,cAsBL,kBAACe,GAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC1H,EAAA,EAAD,iBAIJ,6BACA,yBAAKvB,UAAW+E,EAAQf,MACpB,kBAACkF,EAAA,EAAD,CAAQrI,SAAS,SAASQ,MAAM,WAC5B,kBAAC8H,EAAA,EAAD,CACAxK,MAAOA,EACP6B,SAAU+H,EACVa,eAAe,UACfC,UAAU,UACVjI,QAAQ,YACRJ,aAAW,2BAEX,kBAACsI,GAAA,EAAD,eAAKhJ,MAAM,aAAgBiH,GAAU,KACrC,kBAAC+B,GAAA,EAAD,eAAKhJ,MAAM,SAAYiH,GAAU,OAGrC,kBAAC,IAAD,CACIgC,KAA0B,QAApB9E,EAAMtB,UAAsB,YAAc,IAChD8D,MAAOtI,EACP6K,cA5FU,SAAAvC,GACtBc,EAASd,KA6FG,kBAACF,GAAD,CAAUpI,MAAOA,EAAOsI,MAAO,EAAGwC,IAAKhF,EAAMtB,WACzC,wBAAInD,UAAU,gBASV,kBAAC,GAAD,CAAY8F,iBAAkBrD,EAAMqD,qBAG5C,kBAACiB,GAAD,CAAUpI,MAAOA,EAAOsI,MAAO,EAAGwC,IAAKhF,EAAMtB,WACzC,wBAAInD,UAAU,mBASV,kBAAC,GAAD,CAAY8F,iBAAkBrD,EAAMqD,uBAKpD,kBAACpE,EAAA,EAAD,CACIC,KAAMuG,EACNtG,QAAS2G,EACTzG,kBAAgB,qBAChBC,mBAAiB,4BAErB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,kBACtC,kBAACC,EAAA,EAAD,KACI,kBAACX,EAAA,EAAD,CAAYH,QAAQ,KAAKsI,QAAQ,QAAQlI,cAAY,GAArD,mBAGA,6BACA,kBAACnB,EAAA,EAAD,CACI3B,KAAK,MACL4B,MAAM,YACNc,QAAQ,WACRpB,UAAU,GACVrB,MAAOyJ,EACP/E,WAAW,EACX7C,SAAU,SAACjC,GAAD,OArFd,SAACA,GACT8J,EAAO9J,EAAEE,OAAOE,OAoFagL,CAAIpL,MAExB,yBAAKyB,UAAU,eAAe6G,IAAKuB,EAAKxB,IAAI,YAC5C,6BAAK,6BACL,kBAACrF,EAAA,EAAD,CAAYH,QAAQ,KAAKsI,QAAQ,QAAQlI,cAAY,GAArD,gBAGA,6BACA,kBAACnB,EAAA,EAAD,CACG3B,KAAK,OACL4B,MAAM,cACNc,QAAQ,WACRpB,UAAU,GACVrB,MAAOD,EACP2E,WAAW,EACX7C,SAAU,SAACjC,GAAD,OAhGP,SAACA,GAChB+J,EAAQ/J,EAAEE,OAAOE,OA+FYiL,CAAYrL,OAKrC,kBAAC4D,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAAS,SAAA/C,GAjHzB4J,GAAW,IAiH8B9G,MAAM,WAAvC,UAGA,kBAACF,EAAA,EAAD,CAAQG,QAAS,SAAA/C,GAhHzB4J,GAAW,IAgH4B9G,MAAM,WAArC,W,gCC3OKwI,G,iLAGb,OACI,yBAAK7J,UAAU,UACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,SAASE,QAAM,GAC3B,kBAACC,EAAA,EAAD,CACI2J,OAAQ,kBAAC,KAAD,MACR1J,MAAM,kBAEV,kBAAC0G,GAAA,EAAD,kE,GAVkB1E,a,iFCQhCmC,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsF,KAAM,CACJrF,SAAU,GAEZsF,WAAY,CACVC,YAAaxF,EAAMG,QAAQ,IAE7BxE,MAAM,aACJsJ,QAAS,SACRjF,EAAMyF,YAAYC,GAAG,MAAQ,CAC5BT,QAAS,UAGbU,eAAe,aACbV,QAAS,QACRjF,EAAMyF,YAAYC,GAAG,MAAQ,CAC5BT,QAAS,SAGbW,cAAc,aACZX,QAAS,QACRjF,EAAMyF,YAAYC,GAAG,MAAQ,CAC5BT,QAAS,cAKA,SAASY,GAAT,GAAmD,IAuC5DC,EAvC2BC,EAAgC,EAAhCA,WAAY9H,EAAoB,EAApBA,iBACrCqC,EAAUR,KAD+C,EAEvCkG,IAAM3C,UAAS,GAFwB,gCAG/B2C,IAAM3C,SAAS,OAHgB,mBAGxD4C,EAHwD,KAG9CC,EAH8C,KAIzDhJ,EAAOiJ,QAAQF,GAMf9L,EAAc,WAClB+L,EAAY,OAXiD,EAcXF,IAAM3C,SAAS,MAdJ,mBAcxD+C,EAdwD,KAcpCC,EAdoC,KAgBzDC,EAAmBH,QAAQC,GAW3BG,EACJ,kBAACC,GAAA,EAAD,CACEP,SAAUG,EACVK,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CnJ,GALiB,qCAMjBoJ,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDzJ,KAAMoJ,EACNnJ,QAjB0B,WAC5BkJ,EAAsB,SAsGxB,OAhFmB,IAAfN,IACFD,EACE,kBAAC,IAAMgB,SAAP,KACE,yBAAKvL,UAAU,wCACb,kBAACmB,EAAA,EAAD,CACEnB,UAAU,gCACVsB,QAAS,WACPwB,OAAOC,SAASC,KAAO,UAH3B,QAQA,kBAAC7B,EAAA,EAAD,CACEnB,UAAU,eACVsB,QAAS,WACPwB,OAAOC,SAASC,KAAO,aAH3B,WASF,yBAAKhD,UAAW+E,EAAQgF,OACxB,yBAAK/J,UAAW+E,EAAQqF,gBACtB,kBAACrJ,EAAA,EAAD,CACEM,MAAM,UACNL,aAAW,0BACXwK,gBAAc,8BACdC,gBAAc,OACdnK,QA/DS,SAACkH,GAClBmC,EAAYnC,EAAMkD,iBAgEV,kBAAC,IAAD,QAGJ,yBAAK1L,UAAW+E,EAAQsF,eACtB,kBAACtJ,EAAA,EAAD,CACEC,aAAW,YACXwK,gBAnDW,qCAoDXC,gBAAc,OACdnK,QAzDmB,SAACkH,GAC5BsC,EAAsBtC,EAAMkD,gBAyDpBrK,MAAM,WAEN,kBAAC,KAAD,OAEF,kBAAC4J,GAAA,EAAD,CACEhJ,GAAG,cACHyI,SAAUA,EACVQ,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdzJ,KAAMA,EACNC,QAAShD,GAET,kBAAC+M,GAAA,EAAD,CACErK,QAAS,WACP1C,IACAkE,OAAOC,SAASC,KAAO,aAH3B,cAQA,kBAAC2I,GAAA,EAAD,CACErK,QAAS,WACP1C,IACA8D,GAAiB,KAHrB,eAeR,yBAAK1C,UAAW+E,EAAQgF,MACtB,kBAACb,EAAA,EAAD,CAAQlJ,UAAU,SAASa,SAAS,UAClC,kBAAC+K,GAAA,EAAD,CAASC,gBAAgB,EAAMzK,QAAQ,SACrC,kBAACD,EAAA,EAAD,CACEnB,UAAU,2BACVsB,QAAS,WACPwB,OAAOC,SAASC,KAAO,UAGzB,yBAAK4D,IAAI,oBAAoB5G,UAAU,aAAa6G,IAAKiF,OAN3D,gBASCvB,IAGJS,G,gICjKce,I,kBAKnB,WAAYtJ,GAAQ,IAAD,8BACjB,4CAAMA,KALR5E,MAAQ,CACNmO,OAAO,GAGU,EAWnBC,KAAO,SAAC1N,GACNmB,IACGC,KACC,uDACE,EAAK8C,MAAMyJ,OAAOhH,WAClB,IACA,EAAKzC,MAAMyJ,OAAOC,OAClB,QACA,CACEvM,QAAS,CACPC,OAAQ,sDAIfC,MAAK,SAACC,GACLjB,QAAQC,IAAI,iBAGhB,EAAKP,SAAS,CACZwN,OAAO,IAETlN,QAAQC,IAAI,SAhCK,EAmCnBqN,OAAS,SAAC7N,GACRmB,IACGC,KACC,uDACE,EAAK8C,MAAMyJ,OAAOhH,WAClB,IACA,EAAKzC,MAAMyJ,OAAOC,OAClB,QACF,IAEDrM,MAAK,SAACC,GACLjB,QAAQC,IAAI,mBAGhB,EAAKP,SAAS,CACZwN,OAAO,IAETlN,QAAQC,IAAI,WApDK,EAuDnBsN,MAAQ,SAAC9N,GACP,EAAKC,SAAS,CACZmD,MAAM,IAER7C,QAAQC,IAAI,UA3DK,EA8DnBuN,cAAgB,SAAC/N,GACfuE,OAAOyJ,GAAGC,GACR,CACEC,OAAQ,QACRC,MAAO,kCACPC,QAAS,cACT3J,KAAM,8CAER,SAASjD,QApEX,EAAKlC,MAAQ,CACX+O,cAAe,KACfjL,MAAM,EACNkL,SAAS,GAEX,EAAKR,MAAQ,EAAKA,MAAMxK,KAAX,iBACb,EAAKjD,YAAc,EAAKA,YAAYiD,KAAjB,iBARF,E,2EA2EjBtB,KAAK/B,SAAS,CACZmD,MAAM,M,0CAMRpB,KAAKuM,sB,0CAIL,IACI/M,EAAW,KAEf,IACE,IAAMgN,EAAS,CACbnN,QAAS,CACPoN,OAAQ,mBACR,eAAgB,oBAElB5E,IACE,mDACA7H,KAAKkC,MAAMyJ,OAAOC,OAClB,SACFM,OAAQ,MACRlK,KAAM,GACN0K,iBAAiB,GAGnBlN,EAAWL,IAAMqN,GACdjN,MAAK,SAACoN,GAAD,OAAUA,KACf1G,OAAM,SAAC/F,GAAD,OAAWA,KACpB,MAAOA,GACPV,EAAWU,EAGb3B,QAAQC,IAAI,gBAAkBgB,GAE9BjB,QAAQC,IAAI,iBA3BS,GAsCFoO,SAAS5M,KAAKkC,MAAMyJ,OAAOhH,YAC5C3E,KAAK/B,SAAS,CACZwN,OAAO,IAGTzL,KAAK/B,SAAS,CACZwN,OAAO,M,+BAKH,IAAD,OACP,OACE,yBAAKhM,UAAU,WACb,kBAACiD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMmK,MAAI,GACP,KACqB,IAArB7M,KAAK1C,MAAMmO,MACV,kBAACjL,EAAA,EAAD,CACEf,UAAU,aACVsB,QAAS,SAAC/C,GAAD,OAAO,EAAK6N,OAAO7N,KAE5B,kBAAC,KAAD,OAGF,kBAACwC,EAAA,EAAD,CAAYf,UAAU,aAAasB,QAAS,SAAC/C,GAAD,OAAO,EAAK0N,KAAK1N,KAC3D,kBAAC,KAAD,OAED,KACG,IACR,kBAAC0E,EAAA,EAAD,CAAMmK,MAAI,GACP,KACqB,IAArB7M,KAAK1C,MAAMmO,MACV,kBAACzK,EAAA,EAAD,iBAEA,kBAACA,EAAA,EAAD,eACC,KACG,KACF,IACR,kBAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMmK,MAAI,GACR,kBAACrM,EAAA,EAAD,CACEf,UAAU,aACVsB,QAAS,SAAC/C,GAAD,OAAQuE,OAAOC,SAASC,KAAO,UAExC,kBAAC,KAAD,CAAc1B,QAASxC,QAAQC,IAAI,UAAY,KACnC,KACR,IACR,kBAACkE,EAAA,EAAD,CAAMmK,MAAI,GACR,kBAAC7L,EAAA,EAAD,eAAgC,KAC1B,KACF,IACR,kBAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMmK,MAAI,GACR,kBAACrM,EAAA,EAAD,CAAYf,UAAU,aAAasB,QAAS,SAAC/C,GAAD,OAAO,EAAK8N,MAAM9N,KAC5D,kBAAC,KAAD,OACY,IACd,kBAACmD,EAAA,EAAD,CAAQC,KAAMpB,KAAK1C,MAAM8D,KAAMC,QAASrB,KAAK3B,aAC3C,kBAACoD,EAAA,EAAD,SAAe,qBAAf,KAAoD,IACpD,kBAACE,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,CAAYf,UAAU,sBACpB,kBAAC,IAAD,CAAcsB,QAAS,SAAC/C,GAAD,OAAO,EAAK+N,cAAc/N,MAAO,KAC5C,KACC,KACT,KACJ,IACR,kBAAC0E,EAAA,EAAD,CAAMmK,MAAI,GACR,kBAAC7L,EAAA,EAAD,gBAAiC,KAC3B,KACF,S,GAtMqBa,cCXhBiL,G,iLACT,IASYC,EATb,EAOH/M,KAAKkC,MALP8K,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OACAnN,EALK,EAKLA,MACAoN,EANK,EAMLA,mBAOF,OACE,yBAAK1N,UAAU,WACb,kBAACiD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMmK,MAAI,EAACpN,UAAW0N,GACpB,yBAAK1N,UAAU,QAAQ6G,IAAK0G,EAAOjM,QAASkM,EAAa5G,IAAI,KAAM,IACnE,kBAAC3D,EAAA,EAAD,CAAMjD,UAAU,4BACd,kBAACiD,EAAA,EAAD,CAAMjD,UAAU,8BACd,kBAACuB,EAAA,EAAD,CAAYvB,UAAU,qBACnB,IACAyN,EAAQ,KACG,KACR,IACR,kBAAClM,EAAA,EAAD,CAAYvB,UAAU,mBACnB,IAhBW,kBADJsN,EAkBIhN,GAjBiB,GAChCgN,EAAOK,OAAO,GAAGC,cAAgBN,EAAOO,MAAM,GAgBvB,KACR,KACR,KACF,KACF,S,GAhCwCzL,aCKnC0L,G,2MACnBC,iBAAmB,SAACxP,GAClBmB,IACGC,KACC,uDACE,EAAK8C,MAAMyJ,OAAOhH,WAClB,IACA,EAAKzC,MAAMyJ,OAAOC,OACpB,CACE6B,eAAgB,IAGnBlO,MAAK,SAACC,GACL+C,OAAOC,SAASC,KAAO,kB,EAI7BiL,iBAAmB,SAAC1P,GAClBmB,IACGC,KACC,uDACE,EAAK8C,MAAMyJ,OAAOhH,WAClB,IACA,EAAKzC,MAAMyJ,OAAOC,OACpB,CACE6B,eAAgB,IAGnBlO,MAAK,SAACC,GACL+C,OAAOC,SAASC,KAAO,kB,wEAInB,IAAD,OACP,OACE,yBAAKhD,UAAU,YACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,yBACd,kBAACG,EAAA,EAAD,CAAYC,MAAOG,KAAKkC,MAAMyJ,OAAO9L,QACrC,yBAAKJ,UAAU,OAAf,KAFF,IAE+B,6BAC7B,yBAAKA,UAAU,WACb,kBAAC,GAAD,CACE0N,mBAAmB,0BACnBH,MAAOhN,KAAKkC,MAAMyJ,OAAO3G,KACzBiI,YAAa,SAACjP,GAAD,OAAO,EAAKwP,iBAAiBxP,IAC1CkP,OAAO,IACPnN,MAAOC,KAAKkC,MAAMyJ,OAAO7G,QAE3B,kBAAC,GAAD,CACEqI,mBAAmB,sBACnBH,MAAOhN,KAAKkC,MAAMyJ,OAAO1G,KACzBgI,YAAajN,KAAK0N,iBAClBR,OAAO,IACPnN,MAAOC,KAAKkC,MAAMyJ,OAAO5G,SAEtB,IACP,kBAACrC,EAAA,EAAD,CAAMjD,UAAU,oBACd,kBAACuB,EAAA,EAAD,CAAYH,QAAQ,WACjB,IACAb,KAAKkC,MAAMyJ,OAAO5F,cAFrB,SAE0C,KAC5B,MAEV,S,GA7DkClE,aCC7ByH,G,2MACnBhM,MAAQ,CACNsO,OAAQ,MACRjH,WAAY,GACZ9E,MAAO,MACPiF,MAAO,MACPC,MAAO,MACPC,KAAM,GACNC,KAAM,GACNc,cAAe,EACf4H,QAAS,IACTC,OAAO,G,EA+CTC,uBAAyB,WACvB,EAAK5P,SACH,CACE2N,OAAQ,EAAK1J,MAAM0J,SAErB,WACEzM,IACGsG,IACC,mDACE,EAAKnI,MAAMsO,OACX,QAAS,CACPvM,QAAS,CACPC,OAAQ,sDAIfC,MAAK,SAACC,GACLjB,QAAQC,IAAI,yBACZD,QAAQC,IAAIgB,EAASwC,MACrBzD,QAAQC,IAAIgB,EAASwC,KAAKN,IAC1BnD,QAAQC,IAAI,6BACZ,EAAKP,SACH,CACE0G,WAAYnF,EAASwC,KAAKN,GAC1B7B,MAAOL,EAASwC,KAAK0D,aACrBZ,MAAOtF,EAASwC,KAAK2D,QAAQC,KAC7Bb,MAAOvF,EAASwC,KAAK6D,QAAQD,KAC7BG,cACEvG,EAASwC,KAAK2D,QAAQI,cACtBvG,EAASwC,KAAK6D,QAAQE,gBAE1B,WACE/F,KAAKkC,MAAM4L,iBAAiB9N,KAAK1C,UAGjCkC,EAASwC,KAAK2D,QAAQK,UACxB,EAAK/H,SAAS,CACZ+G,KAAMxF,EAASwC,KAAK2D,QAAQK,WAG5BxG,EAASwC,KAAK6D,QAAQG,UACxB,EAAK/H,SAAS,CACZgH,KAAMzF,EAASwC,KAAK6D,QAAQG,WAIhCzH,QAAQC,IAAI,wBAEbyH,OAAM,SAAS/F,GACd3B,QAAQC,IAAI,eAAiB0B,U,oFA7FjB,IAAD,OAEN6N,KAAQtI,IAAI,WAEzBtG,IACGsG,IAAI,+CAAgD,CACnDpG,QAAS,CACPC,OAAQ,oDAEVoN,iBAAiB,IAElBnN,MAAK,SAACC,GACL,EAAK0C,MAAMC,kBAAiB,MAI7B8D,OAAM,SAAS/F,GAGd3B,QAAQC,IAAI,sBAAwB0B,Q,0CAIrB,IAAD,OAClBF,KAAKgO,WAAaC,aAAY,WAAO,IAC3BN,EAAY,EAAKrQ,MAAjBqQ,QACJA,EAAU,GACZ,EAAK1P,UAAS,kBAAkB,CAC9B0P,QADY,EAAGA,QACI,MAGP,IAAZA,IACFO,cAAc,EAAKF,YACnBzL,OAAOC,SAASC,KAAO,iBAExB,KAEHzC,KAAK6N,2B,6CAILK,cAAclO,KAAKgO,c,+BA2DnB,OAAyB,IAArBhO,KAAK1C,MAAMsQ,MAEX,yBAAKnO,UAAU,YACb,kBAAC,GAAD,MACA,6BAFF,IAES,6BACP,yBAAKA,UAAU,SACb,kBAACuB,EAAA,EAAD,KAAahB,KAAK1C,MAAMqQ,SAAsB,KACzC,IACP,6BACA,kBAAC,GAAD,OAKF,6BACE,yBAAKlO,UAAU,YACb,kBAAC,GAAD,CAAsBkM,OAAQ3L,KAAK1C,QADrC,IAC+C,6BAD/C,IACsD,6BACpD,kBAACoF,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,WAAW,SACXS,QAAQ,SACR7D,UAAU,SAEV,kBAACiD,EAAA,EAAD,CAAMmK,MAAI,GACR,kBAAC7L,EAAA,EAAD,KAAahB,KAAK1C,MAAMqQ,SAAsB,KAEhD,kBAACjL,EAAA,EAAD,CAAMmK,MAAI,EAACpN,UAAU,2BACnB,kBAAC0O,GAAA,EAAD,CAAkBC,KAAM,GAAI3O,UAAU,uBAElC,IACR,6BACA,kBAAC,GAAD,CAASkM,OAAQ3L,KAAK1C,SACjB,S,GAnJqBuE,a,4DCSjByH,I,kNAEjBhM,MAAQ,CACJuC,MAAO,GACPiF,MAAO,GACPC,MAAO,GACPsJ,aAAc,GACdC,aAAc,GACdC,aAAa,EACb3J,OAAQ,KACRC,OAAQ,KAER2J,aAAc,GACdC,QAAS,GACTC,UAAW,GACXC,UAAW,GACXC,WAAY,sIACZC,WAAY,wIACZC,WAAY,wIACZC,WAAY,2GAEZlR,OAAO,EACPY,OAAO,G,EAGXwB,SAAW,SAAAjC,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlC4Q,OAAS,SAAAhR,GACLO,QAAQC,IAAI,gBACZD,QAAQC,IAAI,EAAKlB,MAAM2R,YACnB,EAAK3R,MAAMwH,QAAU,EAAKxH,MAAM2R,aAChCC,SAASC,eAAe,kBAAkB/Q,MAAQ,IAClD,EAAKd,MAAMyH,QAAU,EAAKzH,MAAM8R,aAChCF,SAASC,eAAe,kBAAkB/Q,MAAQ,IAEtD,IAAMiR,EAAK,IAAIC,SACfD,EAAGE,OAAO,QAAS,EAAKjS,MAAMuC,OAC9BwP,EAAGE,OAAO,QAAS,EAAKjS,MAAMwH,OAC9BuK,EAAGE,OAAO,QAAS,EAAKjS,MAAMyH,OACJ,OAAtB,EAAKzH,MAAMsH,OACXyK,EAAGE,OAAO,SAAU,EAAKjS,MAAMsH,OAAQ,EAAKtH,MAAMsH,OAAOzG,MAEzB,KAA5B,EAAKb,MAAM+Q,cACXgB,EAAGE,OAAO,eAAgB,EAAKjS,MAAM+Q,cAInB,OAAtB,EAAK/Q,MAAMuH,OACXwK,EAAGE,OAAO,SAAU,EAAKjS,MAAMuH,OAAQ,EAAKvH,MAAMuH,OAAO1G,MAEzB,KAA5B,EAAKb,MAAMgR,cACXe,EAAGE,OAAO,eAAgB,EAAKjS,MAAMgR,cAI7C,IAAIkB,EAAgB,CAChB5J,KAAM,EAAKtI,MAAMwH,OAEU,KAA5B,EAAKxH,MAAM+Q,eACVmB,EAAcxJ,SAAW,EAAK1I,MAAM+Q,cAExC,IAAIoB,EAAgB,CAChB7J,KAAM,EAAKtI,MAAMyH,OAEU,KAA5B,EAAKzH,MAAMgR,eACVmB,EAAczJ,SAAW,EAAK1I,MAAMgR,cAGxC,IACInP,IAAMC,KAAK,sDAAuD,CAC9DsG,aAAc,EAAKpI,MAAMuC,MACzB8F,QAAS6J,EACT3J,QAAS4J,EACTpN,OAAQ,EAAKH,MAAM0J,OACnB2C,YAAa,EAAKjR,MAAMiR,aACzB,CACClP,QAAS,CACPC,OAAQ,sDAGbC,MAAK,SAAAmQ,GACFnR,QAAQC,IAAIkR,GACZnR,QAAQC,IAAI,eACZ+D,OAAOC,SAASC,KAAO,gBAE7B,MAAOzE,GACL2R,MAAM,yBACNpN,OAAOC,SAASC,KAAO,e,EAI/BmN,gBAAkB,SAACtR,GACfC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKnBJ,YAAc,SAACC,GACXC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKnBoR,OAAS,WACLtR,QAAQC,IAAI,qBAAuB,EAAKlB,MAAMkR,aAAe,KAC7D,IAAIsB,EAAc,uDAAyD,EAAKxS,MAAMkR,aACtFjQ,QAAQC,IAAI,SAAWsR,EAAc,KAGrCC,MAAMD,EAAa,CACf5D,OAAQ,MACR7M,QAAS,CACL,OAAU,oCACV,eAAgB,mBAChB,cAAiB,6EAGpBE,MAAK,SAACmQ,GAAD,OAAS,EAAKM,gBAAgBN,O,EAG5CM,gBAAkB,SAACxQ,GACS,MAApBA,EAASyC,QACTzC,EAASyQ,OAAO1Q,MAAK,SAAAyC,GACjB,EAAK/D,SAAS,CACVwQ,QAASzM,EAAKyM,QACdG,WAAY5M,EAAKyM,QAAQ,GAAGyB,KAAKC,MACjCtB,WAAY7M,EAAKyM,QAAQ,GAAGyB,KAAKC,MACjCrB,WAAY9M,EAAKyM,QAAQ,GAAGyB,KAAKC,MACjCpB,WAAY/M,EAAKyM,QAAQ,GAAGyB,KAAKC,Y,EAMjDC,0BAA4B,SAACpS,GACP,KAAdA,EAAEqS,SACF,EAAKR,U,EAIbS,mBAAqB,SAACC,GAClBhS,QAAQC,IAAI,cAAgB+R,EAAW,KAEvC,EAAKtS,SAAS,CACVoQ,aAAckC,EACd7B,UAAW6B,EACX3L,OAAQ,OACT,WACCrG,QAAQC,IAAI,kBAAoBwB,KAAK1C,MAAM+Q,aAAe,KAC1D9P,QAAQC,IAAIwB,KAAK1C,MAAMsR,YACvBrQ,QAAQC,IAAIwB,KAAK1C,MAAMuR,YACvBtQ,QAAQC,IAAIwB,KAAK1C,MAAMwR,YACvBvQ,QAAQC,IAAIwB,KAAK1C,MAAMyR,YACvB/O,KAAK3B,YAAY,O,EAIzBmS,mBAAqB,SAACD,GAClBhS,QAAQC,IAAI,cAAgB+R,EAAW,KAEvC,EAAKtS,SAAS,CACVqQ,aAAciC,EACd5B,UAAW4B,EACX1L,OAAQ,OACT,WACCtG,QAAQC,IAAI,kBAAoBwB,KAAK1C,MAAMgR,aAAe,KAC1D/P,QAAQC,IAAIwB,KAAK1C,MAAMsR,YACvBrQ,QAAQC,IAAIwB,KAAK1C,MAAMuR,YACvBtQ,QAAQC,IAAIwB,KAAK1C,MAAMwR,YACvBvQ,QAAQC,IAAIwB,KAAK1C,MAAMyR,YACvB/O,KAAK3B,YAAY,O,EAIzBoS,sBAAwB,SAAAzS,GACpBO,QAAQC,IAAI,WAAaR,EAAEE,OAAOwS,MAAM,IACxC,EAAKzS,SAAS,CACVyQ,UAAWtF,IAAIuH,gBAAgB3S,EAAEE,OAAOwS,MAAM,IAC9C9L,OAAQ5G,EAAEE,OAAOwS,MAAM,GACvBrC,aAAc,M,EAItBuC,sBAAwB,SAAA5S,GACpBO,QAAQC,IAAI,UAAYR,EAAEE,OAAOwS,MAAM,IACvC,EAAKzS,SAAS,CACV0Q,UAAWvF,IAAIuH,gBAAgB3S,EAAEE,OAAOwS,MAAM,IAC9C7L,OAAQ7G,EAAEE,OAAOwS,MAAM,GACvBpC,aAAc,M,wEAIZ,IAAD,OACL,OACI,yBAAK7O,UAAU,WACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,QAAM,GAC9B,6BACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAClB,6BACA,kBAACC,EAAA,EAAD,CACIL,UAAU,gBACVM,MAAM,eACNc,QAAQ,WACR1C,KAAK,QACLC,MAAO4B,KAAK1C,MAAMuC,MAClBI,SAAU,SAAAjC,GAAC,OAAI,EAAKiC,SAASjC,MAEjC,6BACA,kBAAC8B,EAAA,EAAD,CACIL,UAAU,UACVM,MAAM,WACNc,QAAQ,WACR1C,KAAK,QACLC,MAAO4B,KAAK1C,MAAMwH,MAClB7E,SAAU,SAAAjC,GAAC,OAAI,EAAKiC,SAASjC,IAC7BmC,WAAY,CACRC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,2BAAOnC,KAAK,SAAS8B,SAAUD,KAAKyQ,sBAAuBI,OAAO,UAAUpR,UAAU,YAAYiC,GAAG,iBAAiBf,KAAK,SAC3H,2BAAOmQ,QAAQ,kBACX,kBAACvQ,EAAA,EAAD,CAASV,MAAM,gBACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,KAAD,SAIZ,kBAACH,EAAA,EAAD,CAASV,MAAM,8BACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,6BAA6BC,UAAU,OAAOK,QAASf,KAAK4P,gBAAgBtO,KAAKtB,KAAM,IAC1G,kBAAC,KAAD,QAGR,kBAACmB,EAAA,EAAD,CACIC,KAAMpB,KAAK1C,MAAMO,MACjBwD,QAASrB,KAAK3B,YAAYiD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,yCACtC,kBAACC,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CACI3B,KAAK,eACLC,MAAO4B,KAAK1C,MAAMkR,aAClBvO,SAAU,SAAAjC,GAAC,OAAI,EAAKiC,SAASjC,IAC7B0D,GAAG,iBAAiB3B,MAAM,YAC1BgR,UAAW/Q,KAAKoQ,4BACpB,kBAACxP,EAAA,EAAD,CAAQG,QAASf,KAAK6P,OAAQ/O,MAAM,WAApC,UACA,6BAAM,6BACN,kBAACkQ,GAAA,EAAD,CAAUtP,GAAG,aACT,kBAACuP,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKsQ,mBAAmBhP,KAAKtB,KAAMA,KAAK1C,MAAMsR,YAAatI,IAAKtG,KAAK1C,MAAMsR,WAAYvI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKsQ,mBAAmBhP,KAAKtB,KAAMA,KAAK1C,MAAMuR,YAAavI,IAAKtG,KAAK1C,MAAMuR,WAAYxI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKsQ,mBAAmBhP,KAAKtB,KAAMA,KAAK1C,MAAMwR,YAAaxI,IAAKtG,KAAK1C,MAAMwR,WAAYzI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKsQ,mBAAmBhP,KAAKtB,KAAMA,KAAK1C,MAAMyR,YAAazI,IAAKtG,KAAK1C,MAAMyR,WAAY1I,IAAI,oBAIrH,kBAACzE,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK3B,YAAYiD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,eASxB,6BACA,yBAAKrB,UAAU,QAAQ6G,IAAKtG,KAAK1C,MAAMoR,UAAWrI,IAAI,cACtD,6BACA,kBAACrF,EAAA,EAAD,CAAYH,QAAQ,WAApB,MAGA,6BACA,6BACA,kBAACf,EAAA,EAAD,CACIL,UAAU,UACVM,MAAM,WACNc,QAAQ,WACR1C,KAAK,QACLC,MAAO4B,KAAK1C,MAAMyH,MAClB9E,SAAU,SAAAjC,GAAC,OAAI,EAAKiC,SAASjC,IAC7BmC,WAAY,CACRC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,2BAAOnC,KAAK,SAAS8B,SAAUD,KAAK4Q,sBAAuBC,OAAO,UAAUpR,UAAU,YAAYiC,GAAG,iBAAiBf,KAAK,SAC3H,2BAAOmQ,QAAQ,kBACX,kBAACvQ,EAAA,EAAD,CAASV,MAAM,gBACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,KAAD,SAIZ,kBAACH,EAAA,EAAD,CAASV,MAAM,8BACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,6BAA6BC,UAAU,OAAOK,QAASf,KAAK4P,gBAAgBtO,KAAKtB,KAAM,IAC1G,kBAAC,KAAD,QAGR,kBAACmB,EAAA,EAAD,CACIC,KAAMpB,KAAK1C,MAAMmB,MACjB4C,QAASrB,KAAK3B,YACdkD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,yCACtC,kBAACC,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CACI3B,KAAK,eACLC,MAAO4B,KAAK1C,MAAMkR,aAClBvO,SAAU,SAAAjC,GAAC,OAAI,EAAKiC,SAASjC,IAC7B0D,GAAG,iBAAiB3B,MAAM,YAC1BgR,UAAW/Q,KAAKoQ,4BACpB,kBAACxP,EAAA,EAAD,CAAQG,QAASf,KAAK6P,OAAQ/O,MAAM,WAApC,UACA,6BAAM,6BACN,kBAACkQ,GAAA,EAAD,CAAUtP,GAAG,aACT,kBAACuP,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKwQ,mBAAmBlP,KAAKtB,KAAMA,KAAK1C,MAAMsR,YAAatI,IAAKtG,KAAK1C,MAAMsR,WAAYvI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKwQ,mBAAmBlP,KAAKtB,KAAMA,KAAK1C,MAAMuR,YAAavI,IAAKtG,KAAK1C,MAAMuR,WAAYxI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKwQ,mBAAmBlP,KAAKtB,KAAMA,KAAK1C,MAAMwR,YAAaxI,IAAKtG,KAAK1C,MAAMwR,WAAYzI,IAAI,kBAE7G,kBAAC4K,GAAA,EAAD,KACI,yBAAKlQ,QAASf,KAAKwQ,mBAAmBlP,KAAKtB,KAAMA,KAAK1C,MAAMyR,YAAazI,IAAKtG,KAAK1C,MAAMyR,WAAY1I,IAAI,oBAIrH,kBAACzE,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK3B,YAAYiD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,eASxB,6BACA,yBAAKrB,UAAU,QAAQ6G,IAAKtG,KAAK1C,MAAMqR,UAAWtI,IAAI,cACtD,6BAAM,6BACN,kBAACzF,EAAA,EAAD,CAAQG,QAASf,KAAKgP,OAAQ5Q,MAAM,SAASyC,QAAQ,YAAYC,MAAM,WAAvE,iB,GA7Wce,cCEhCqC,GAAQgN,YAAe,CAC3BjK,QAAS,CACPkK,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAuOGE,G,2MAjOblU,MAAQ,CACN2M,YAAY,EACZ2B,OAAQ,2BACRlH,cAAe,CACbkH,OAAQ,MACRjH,WAAY,GACZ9E,MAAO,MACPiF,MAAO,MACPC,MAAO,MACPC,KAAM,GACNC,KAAM,GACNc,cAAe,EACf4H,QAAS,GACTC,OAAO,I,EAIX6D,mBAAqB,WACnB,IACEC,IAAaC,IAAI,aAAcC,KAAKC,UAAU,EAAKvU,MAAM2M,aACzDyH,IAAaC,IACX,gBACAC,KAAKC,UAAU,EAAKvU,MAAMoH,gBAE5B,MAAO1G,M,EAGX8T,qBAAuB,WACrB,IACE,IAAIC,EAAiBH,KAAKI,MAAMN,IAAajM,IAAI,eACjD,EAAKxH,SAAS,CACZgM,WAAY8H,IAEd,IAAIE,EAAoBL,KAAKI,MAAMN,IAAajM,IAAI,kBACpD,EAAKxH,SAAS,CACZyG,cAAeuN,IAEjB,MAAOjU,M,EAGXmE,iBAAmB,SAAC+F,GAClB,EAAKjK,SACH,CACEgM,WAAY/B,IAEd,WACElI,KAAKyR,qBACLlT,QAAQC,IAAI,oBAAsBwB,KAAK1C,MAAM2M,gB,EAKnDiI,cAAgB,WACd,OAAO,EAAK5U,MAAM2M,Y,EAGpB6D,iBAAmB,SAAC5F,GAClB,EAAKjK,SACH,CACEyG,cAAewD,IAEjB,WACE3J,QAAQC,IAAI,8BACZD,QAAQC,IAAI,EAAKlB,MAAMoH,eACvB,EAAK+M,yB,EAKXlM,iBAAmB,WAIjB,OAHAhH,QAAQC,IAAI,mCACZD,QAAQC,IAAI,EAAKlB,MAAMoH,eACvBnG,QAAQC,IAAI,mCACL,EAAKlB,MAAMoH,e,EAGpByN,0BAA4B,WAC1B,EAAKL,wB,EAGPM,4BAA8B,WAC5B,EAAKX,sB,EAGPY,2BAA6B,WAC3B,EAAKZ,sB,wEAGG,IAAD,OACP,OACE,kBAAC,IAAD,CAAkBvN,MAAOA,IACvB,kBAACoO,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,IAAD,KACE,6BACE,kBAACxI,GAAD,CACEE,WAAYjK,KAAK1C,MAAM2M,WACvB9H,iBAAkBnC,KAAKmC,mBACtB,IACH,yBAAK1C,UAAU,UACb,yBAAKA,UAAU,cACZ,IACD,kBAAC,KAAD,KACE,kBAAC,KAAD,CACE+S,KAAK,SACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,KAAD,CAAU/I,GAAG,UAEb,kBAAC,EAAD,CAAOiB,iBAAkB,EAAKA,sBAGjC,IACH,kBAAC,KAAD,CACEqQ,KAAK,UACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,KAAD,CAAU/I,GAAG,UAEb,kBAAC,EAAD,SAGH,IACH,kBAAC,KAAD,CACEsR,KAAK,QACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,CACEiI,cAAe,EAAKA,cACpB/P,iBAAkB,EAAKA,iBACvByJ,OAAQ,EAAKtO,MAAMsO,OACnBkC,iBAAkB,EAAKA,sBAW5B,IACH,kBAAC,KAAD,CACE0E,KAAK,WACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,CAAS2B,OAAQ,EAAKtO,MAAMsO,SAE5B,kBAAC,KAAD,CAAU1K,GAAG,cAGhB,IACH,kBAAC,KAAD,CACEsR,KAAK,WACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC5C,GAAD,CAAS9B,iBAAkB,EAAKA,mBAEhC,kBAAC,KAAD,CAAUrE,GAAG,cAGhB,IACH,kBAAC,KAAD,CACEsR,KAAK,YACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,CACEiI,cAAe,EAAKA,cACpB/P,iBAAkB,EAAKA,iBACvByJ,OAAQ,EAAKtO,MAAMsO,OACnBkC,iBAAkB,EAAKA,mBAGzB,kBAAC,KAAD,CAAU5M,GAAG,cAGhB,IACH,kBAAC,KAAD,CACEsR,KAAK,aACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU/I,GAAG,cAGhB,IACH,kBAAC,KAAD,CACEsR,KAAK,cACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,CACE1E,iBAAkB,EAAKA,mBAGzB,kBAAC,KAAD,CAAUrE,GAAG,cAGhB,IACH,kBAAC,KAAD,CACEsR,KAAK,IACLpP,OAAQ,SAAClB,GAAD,OACN,EAAK5E,MAAM2M,WACT,kBAAC,GAAD,CACEiI,cAAe,EAAKA,cACpB/P,iBAAkB,EAAKA,iBACvByJ,OAAQ,EAAKtO,MAAMsO,OACnBkC,iBAAkB,EAAKA,mBAGzB,kBAAC,KAAD,CAAU5M,GAAG,cAGhB,KACK,KACL,KACF,KACF,KACC,KACM,S,GA5NRW,aC1BEwI,QACW,cAA7B9H,OAAOC,SAASiQ,UAEe,UAA7BlQ,OAAOC,SAASiQ,UAEhBlQ,OAAOC,SAASiQ,SAASC,MACvB,2DCZNC,IAASvP,OAAO,kBAAC,GAAD,MAAS8L,SAASC,eAAe,SD2H3C,kBAAmByD,WACrBA,UAAUC,cAAcC,MAAMvT,MAAK,SAAAwT,GACjCA,EAAaC,iB","file":"static/js/main.16531477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c9a309ec.jpg\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport './styles.css';\r\n\r\n\r\nexport default class Signup extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    usernameCheck:[],\r\n    usernameError:false,\r\n    open1: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // changeUser = e => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value\r\n  //   });\r\n  //   if(e.target.value.length===0){\r\n  //     this.setState({usernameError:false});\r\n  //   }\r\n  //   else if(e.target.value.length>0 && e.target.value.length<5){\r\n  //     this.setState({usernameError:true});\r\n  //   }\r\n  //   else{\r\n  //     axios.post('https://thisorthat-260419.appspot.com/api/me', {\r\n  //         username: e.target.value\r\n  //     })\r\n  //     .then(response => {\r\n  //         this.setState({usernameCheck:response.data});\r\n  //         if(this.state.usernameCheck.length===1){\r\n  //           this.setState({usernameError:true});\r\n  //         }else{\r\n  //           this.setState({usernameError:false});\r\n  //         }\r\n  //     })\r\n  //   }\r\n    \r\n  // };\r\n\r\n  handleClose = (openIndex) => {\r\n    console.log(openIndex);\r\n    if (openIndex === 1) {\r\n        this.setState({\r\n            open1: false\r\n        })\r\n    } else {\r\n        this.setState({\r\n            open2: false\r\n        })\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    var alphanumeric = /^[0-9a-zA-Z]+$/;\r\n    var number= /\\d/;\r\n    var lowercasePassword= this.state.password.toLowerCase();\r\n    var alertString=\"\";\r\n    if( this.state.userName=== \"\" || this.state.email=== \"\" || this.state.password=== \"\" || this.state.confirmPassword=== \"\"){\r\n      alertString+=\"You must complete all fields\";\r\n    }\r\n    else{\r\n      if(this.state.userName.length < 5){\r\n        alertString+=\"Username must be at least five(5) characters\\n\";\r\n      }\r\n      if((alphanumeric.test(this.state.userName)===false) || (alphanumeric.test(this.state.password)===false)){\r\n        alertString+=\"Username and password fields can only contain alphanumeric characters !\\n\";\r\n      }\r\n      if(this.state.password.length < 7){\r\n        alertString+=\"Password must be at least seven(7) characters!\\n\";\r\n      }\r\n      if (this.state.password !==  this.state.confirmPassword ){\r\n        alertString+=\"Passwords do not match!\\n\";\r\n      }\r\n      if(lowercasePassword.localeCompare(this.state.password)===0){\r\n        alertString+=\"Password must contain an Uppercase character!\\n\";\r\n      }\r\n      if(number.test(this.state.password)===false){\r\n        alertString+=\"Password must contain a number!\\n\";\r\n      }\r\n    }\r\n    if(alertString===\"\" && (this.state.usernameError===false)){\r\n        axios.post('https://thisorthat-260419.appspot.com/api/signup/email', {\r\n          name: this.state.userName,\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        }, {\r\n          headers: {\r\n            Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n          }\r\n        })\r\n        .then(response => {\r\n         // this.props.history.push(\"/feed\"); \r\n         console.log(\"success\");\r\n        })\r\n    }else{\r\n      this.setState({errorMessage:alertString});\r\n      this.setState({open1:true});\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"signupPage\" >\r\n          <Card className=\"signupCard\" raised>\r\n            <form className=\"signup\">\r\n              <CardHeader \r\n                title=\"Signup\"\r\n              />\r\n              <br/>\r\n              <TextField\r\n                name=\"userName\"\r\n                label=\"Full-Name\"\r\n                className=\"usernamefield\"\r\n                value={this.state.userName}\r\n                onChange={e => this.change(e)}\r\n                error={this.state.usernameError}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Fullname: Must consist of only letters\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <br />\r\n              <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={this.state.email}\r\n                onChange={e => this.change(e)}\r\n                type=\"email\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Must me a valid email address\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={this.state.password}\r\n                onChange={e => this.change(e)}\r\n                type=\"password\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Password: At least 7 alphanumeric characters, an\r\n                Uppercase character and a Number\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                value={this.state.confirmPassword}\r\n                onChange={e => this.change(e)}\r\n                type=\"password\"\r\n                className=\"requirements\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Password entered must match the previously entered password\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <br/>\r\n              <br/>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={e => this.onSubmit(e)} >\r\n                Submit\r\n              </Button>  \r\n              <br/>\r\n              <Typography variant=\"overline\" className=\"\" color=\"textSecondary\" gutterBottom>\r\n                  Already have an Account?&nbsp;\r\n              </Typography>\r\n              <Link to=\"/login\">Log In</Link>\r\n            </form>\r\n          </Card>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open1}\r\n          onClose={this.handleClose.bind(this, 1)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"\"}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.errorMessage}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    validated: 0,\r\n    open1: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleClose = (openIndex) => {\r\n    console.log(openIndex);\r\n    if (openIndex === 1) {\r\n      this.setState({\r\n        open1: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open2: false\r\n      });\r\n    }\r\n  };\r\n\r\n  change = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    var alertString = \"\";\r\n    if (this.state.email === \"\" || this.state.password === \"\") {\r\n      alertString += \"You must complete all fields\";\r\n      this.setState({ errorMessage: alertString });\r\n      this.setState({ open1: true });\r\n    } else {\r\n      axios\r\n        .post(\"https://thisorthat-260419.appspot.com/api/login/email\", {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.setState({ validated: response.data });\r\n          if (response.status === 201) {\r\n            this.props.changeIsLoggedIn(true);\r\n          } else {\r\n            alertString += \"Invalid Credentials\";\r\n            this.setState({ errorMessage: alertString });\r\n            this.setState({ open1: true });\r\n            this.setState({ password: \"\" });\r\n          }\r\n        });\r\n\r\n      //this.props.changeIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  facebookLogin = (response) => {\r\n    if (response.userID) {\r\n      this.props.changeIsLoggedIn(true);\r\n      console.log(\"Facebook login was successful!\");\r\n    } else {\r\n      console.log(\"Facebook login was unsucessful!\");\r\n    }\r\n  };\r\n\r\n  fbLogin = () => {\r\n    window.location.href =\r\n      \"https://thisorthat-260419.appspot.com/api/login/facebook/init?redirect=http://localhost:3000/feed\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          <Card className=\"loginCard\" raised>\r\n            <form className=\"login\">\r\n              <CardHeader title=\"Login\" />\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  className=\"loginTextField\"\r\n                  value={this.state.email}\r\n                  fullWidth={true}\r\n                  onChange={(e) => this.change(e)}\r\n                />\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  value={this.state.password}\r\n                  fullWidth={true}\r\n                  onChange={(e) => this.change(e)}\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"loginButtonWrapper\"\r\n                    onClick={(e) => this.onSubmit(e)}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  <Button\r\n                    className=\"facebookLoginButton\"\r\n                    href=\"https://thisorthat-260419.appspot.com/api/login/facebook/init?redirect=https://thisorthat-260419.appspot.com/feed\"\r\n                    // onClick={(e) => this.fbLogin(e)}\r\n                    startIcon={<FacebookIcon />}\r\n                  >\r\n                    Log in with Facebook\r\n                  </Button>\r\n                  <FacebookLogin\r\n                    appId=\"542050589716105\"\r\n                    autLoad\r\n                    fields=\"name,email,picture\"\r\n                    callback={this.facebookLogin}\r\n                    render={(renderProps) => (\r\n                      <Button\r\n                        onClick={renderProps.onClick}\r\n                        className=\"facebookLoginButton\"\r\n                        startIcon={<FacebookIcon />}\r\n                      >\r\n                        Log in with Facebook\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                  <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    className=\"signupMessage\"\r\n                  >\r\n                    <Typography color=\"textSecondary\" className=\"signupText\">\r\n                      Don't have an account?\r\n                    </Typography>\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open1}\r\n          onClose={this.handleClose.bind(this, 1)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"\"}</DialogTitle>\r\n          <DialogContent>{this.state.errorMessage}</DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport \"./profileToT.css\";\r\n\r\nimport { lighten, makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten(\"#a6a6a6\", 0.5)\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: \"#22ba00\"\r\n  }\r\n})(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction CustomizedProgressBars({ percent }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant=\"determinate\"\r\n        color=\"secondary\"\r\n        value={percent}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class ProfileToT extends Component {\r\n  state = {\r\n    questionState: {\r\n      questionId: \"\"\r\n    },\r\n    title: \"\",\r\n    image1: null,\r\n    image2: null,\r\n    text1: \"\",\r\n    text2: \"\",\r\n    url1: \"\",\r\n    url2: \"\",\r\n\r\n    option1Votes: 8,\r\n    option2Votes: 5,\r\n    totalVotes: 13\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateQuestionState();\r\n  }\r\n\r\n  updateQuestionState = () => {\r\n    var retrievedQuestionState = this.props.getQuestionState();\r\n    console.log(\"Question state comes here:\");\r\n    console.log(retrievedQuestionState);\r\n    console.log(\"Question state comes here:\");\r\n    this.setState(\r\n      {\r\n        questionState: retrievedQuestionState\r\n      },\r\n      () => {\r\n        console.log(this.state.questionState);\r\n        this.getQuestionDetails(this.state.questionState.questionId);\r\n      }\r\n    );\r\n  };\r\n\r\n  getQuestionDetails(questionId) {\r\n    axios\r\n      .get(\"http://thisorthat-260419.appspot.com/api/questions/\" + questionId)\r\n      .then((response) => {\r\n        this.setState({\r\n          title: response.data.questionText,\r\n          text1: response.data.option1.text,\r\n          text2: response.data.option2.text,\r\n          option1Votes: parseFloat(response.data.option1.numberOfVotes),\r\n          option2Votes: parseFloat(response.data.option2.numberOfVotes),\r\n          totalVotes: parseFloat(\r\n            response.data.option1.numberOfVotes +\r\n              response.data.option2.numberOfVotes\r\n          )\r\n        });\r\n        if (response.data.option1.imageURL) {\r\n          this.setState({\r\n            url1: response.data.option1.imageURL\r\n          });\r\n        }\r\n        if (response.data.option2.imageURL) {\r\n          this.setState({\r\n            url2: response.data.option2.imageURL\r\n          });\r\n        }\r\n        console.log(\"question details:\");\r\n        console.log(response.data);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"No reponse: \" + error);\r\n      });\r\n  }\r\n\r\n  comp;\r\n\r\n  render() {\r\n    var percentage1 = 0;\r\n    var percentage2 = 0;\r\n    if (this.state.totalVotes !== 0) {\r\n      percentage1 = (\r\n        100 *\r\n        (this.state.option1Votes / this.state.totalVotes)\r\n      ).toFixed(2);\r\n      percentage2 = (\r\n        100 *\r\n        (1 - this.state.option1Votes / this.state.totalVotes)\r\n      ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n      <div className=\"holder\">\r\n        <Card className=\"totInProfile\" raised>\r\n          <div>\r\n            <CardHeader title={this.state.title} />\r\n            <br />\r\n            <br />\r\n            <div className=\"parts\">\r\n              <div className=\"part1\">\r\n                <img className=\"image\" alt=\"\" src={this.state.url1} />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {this.state.text1}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CustomizedProgressBars percent={percentage1} />\r\n                <Typography gutterBottom variant=\"subtitle2\">\r\n                  {percentage1 + \"%\"}\r\n                </Typography>\r\n              </div>\r\n              <div className=\"part2\">\r\n                <img className=\"image\" alt=\"\" src={this.state.url2} />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {this.state.text2}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CustomizedProgressBars percent={percentage2} />\r\n                <Typography gutterBottom variant=\"subtitle2\">\r\n                  {percentage2 + \"%\"}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <Typography gutterBottom variant=\"subtitle2\">\r\n              {this.state.totalVotes + \" votes in total.\"}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              onClick={function() {\r\n                window.location.href = \"/question\";\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Next ToT\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ProfileToT from '../ProfileToT';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport './profile.css';\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={2}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\nexport default function Profile(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [profileToTs, setProfileToTs]= useState([]);\r\n    const [savedToTs, setSavedToTs]= useState([]);\r\n    const [userID, setUserID]=useState(0);\r\n    const [profile, setProfile]= useState(false);\r\n    const [url, setURL]= useState(\"\");\r\n    const [name, setName]= useState(\"\");\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToTs();\r\n    }, []);\r\n\r\n    const getToTs = async () => {\r\n        //might need checks for empty responses\r\n        // const user= async () => {\r\n        //     const result = await axios.get('https://thisorthat-260419.appspot.com/api/users/me');\r\n        //     console.log(result);\r\n        //     setUserID(result.data);\r\n        // };\r\n        const fetchProfileToTs = async () => {\r\n            const result = await axios.post(\r\n              'https://thisorthat-260419.appspot.com/api/users/ /created', {\r\n                userID:{userID}\r\n              }, {\r\n                headers: {\r\n                  Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n                }\r\n              }\r\n            );\r\n            setProfileToTs(result.data);\r\n        };\r\n        const fetchSavedToTs = async () => {\r\n            const result = await axios.post(\r\n              'https://thisorthat-260419.appspot.com/api/ /saved', {\r\n                  userID:{userID}\r\n              }, {\r\n                headers: {\r\n                  Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n                }\r\n              }\r\n            );\r\n            setSavedToTs(result.data);\r\n        };\r\n        fetchProfileToTs();\r\n        fetchSavedToTs();\r\n    };\r\n\r\n    const onClick= (e) =>  {\r\n        setProfile(true);\r\n        console.log({profile})\r\n    };\r\n\r\n    const cancel= (e) =>  {\r\n        setProfile(false);\r\n    };\r\n\r\n    const save= (e) =>  {\r\n        setProfile(false);\r\n    };\r\n\r\n    const  URL= (e) =>  {\r\n        setURL(e.target.value);\r\n    };\r\n\r\n    const profileName= (e) =>  {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"profilePage\">\r\n            <Button className=\"profileCard\" onClick={e => onClick(e)}> \r\n                <Avatar>  \r\n                    <AccountCircleIcon/> \r\n                </Avatar>\r\n                <Typography>\r\n                    Profile\r\n                </Typography>\r\n            </Button>\r\n            <br/>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                    >\r\n                    <Tab label=\"Your ToTs\" {...a11yProps(0)} />\r\n                    <Tab label=\"Saved\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                >\r\n                    <TabPanel value={value} index={0} dir={theme.direction}>\r\n                        <ul className=\"listOfMyToTs\">\r\n                            {/* {profileToTs.map(info => (\r\n                                <Card className=\"myToTs\" raised>\r\n                                    <ProfileToT\r\n                                        title={info.Title}\r\n                                        votes={info.Votes}\r\n                                    />\r\n                                </Card>\r\n                            ))} */}\r\n                            <ProfileToT getQuestionState={props.getQuestionState} />\r\n                        </ul>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction}>\r\n                        <ul className=\"listOfSavedToTs\">\r\n                            {/* {savedToTs.map(info => (\r\n                                <Card className=\"savedToTs\" raised>\r\n                                    <ProfileToT\r\n                                        title={info.Title}\r\n                                        votes={info.Votes}\r\n                                    />\r\n                                </Card>\r\n                            ))} */}\r\n                            <ProfileToT getQuestionState={props.getQuestionState} />\r\n                        </ul>\r\n                    </TabPanel>\r\n                </SwipeableViews>\r\n            </div>\r\n            <Dialog\r\n                open={profile}\r\n                onClose={handleChange}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Update Profile\"}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography variant=\"h5\" display=\"block\" gutterBottom >\r\n                    Profile Picture\r\n                </Typography>\r\n                <br/>\r\n                <TextField\r\n                    name=\"url\"\r\n                    label=\"Image URL\"\r\n                    variant=\"outlined\"\r\n                    className=\"\"\r\n                    value={url}\r\n                    fullWidth={true}\r\n                    onChange={(e) => URL(e)}\r\n                />\r\n                 <img className=\"profileImage\" src={url} alt=\"Preview\" />\r\n                 <br/><br/>\r\n                 <Typography variant=\"h5\" display=\"block\" gutterBottom >\r\n                    Profile Name\r\n                 </Typography>\r\n                 <br/>\r\n                 <TextField\r\n                    name=\"name\"\r\n                    label=\"Profle Name\"\r\n                    variant=\"outlined\"\r\n                    className=\"\"\r\n                    value={name}\r\n                    fullWidth={true}\r\n                    onChange={(e) => profileName(e)}\r\n                />\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={e => cancel(e)} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={e => save(e)} color=\"primary\">\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport './ToTSubmit.css';\r\nimport { CardContent } from '@material-ui/core';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nexport default class Question extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='holder'>\r\n                <Card className=\"submit\" raised>\r\n                    <CardHeader \r\n                        avatar={<CheckCircleOutlineRoundedIcon />}\r\n                        title=\"ToT Submitted\" \r\n                    /> \r\n                    <CardContent>\r\n                        After a short review, we'll post your ToT publicly.\r\n                    </CardContent>\r\n                </Card> \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport logo from \"../../Assets/logo.jpg\";\r\nimport \"./header.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function Header({ isLoggedIn, changeIsLoggedIn }) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    ></Menu>\r\n  );\r\n\r\n  let fullNavBar;\r\n\r\n  if (isLoggedIn === true) {\r\n    fullNavBar = (\r\n      <React.Fragment>\r\n        <div className=\"headerButtonContainer headerVertLine\">\r\n          <Button\r\n            className=\"headerButton leftHeaderButton\"\r\n            onClick={function() {\r\n              window.location.href = \"/feed\";\r\n            }}\r\n          >\r\n            Feed\r\n          </Button>\r\n          <Button\r\n            className=\"headerButton\"\r\n            onClick={function() {\r\n              window.location.href = \"/creator\";\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div className={classes.grow} />\r\n        <div className={classes.sectionDesktop}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"primary-search-account-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.sectionMobile}>\r\n          <IconButton\r\n            aria-label=\"show more\"\r\n            aria-controls={mobileMenuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMobileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <MoreIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem\r\n              onClick={function() {\r\n                handleClose();\r\n                window.location.href = \"/profile\";\r\n              }}\r\n            >\r\n              My profile\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={function() {\r\n                handleClose();\r\n                changeIsLoggedIn(false);\r\n              }}\r\n            >\r\n              Log out\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar className=\"AppBar\" position=\"static\">\r\n        <Toolbar disableGutters={true} variant=\"dense\">\r\n          <Button\r\n            className=\"headerButton headerTitle\"\r\n            onClick={function() {\r\n              window.location.href = \"/feed\";\r\n            }}\r\n          >\r\n            <img alt=\"this or that logo\" className=\"headerLogo\" src={logo} />\r\n            This or That\r\n          </Button>\r\n          {fullNavBar}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\r\nimport ShareSharpIconButton from \"@material-ui/icons/ShareSharp\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Options extends Component {\r\n  state = {\r\n    saved: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedValue: null,\r\n      open: false,\r\n      setOpen: false\r\n    };\r\n    this.share = this.share.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  save = (e) => {\r\n    axios\r\n      .post(\r\n        \"https://thisorthat-260419.appspot.com/api/questions/\" +\r\n          this.props.parent.questionId +\r\n          \"/\" +\r\n          this.props.parent.userId +\r\n          \"/save\",\r\n          {\r\n            headers: {\r\n              Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n            }\r\n          }\r\n      )\r\n      .then((response) => {\r\n        console.log(\"ToT saved.\");\r\n      });\r\n\r\n    this.setState({\r\n      saved: true\r\n    });\r\n    console.log(\"Save\");\r\n  };\r\n\r\n  unsave = (e) => {\r\n    axios\r\n      .post(\r\n        \"https://thisorthat-260419.appspot.com/api/questions/\" +\r\n          this.props.parent.questionId +\r\n          \"/\" +\r\n          this.props.parent.userId +\r\n          \"/save\",\r\n        {}\r\n      )\r\n      .then((response) => {\r\n        console.log(\"ToT unsaved.\");\r\n      });\r\n\r\n    this.setState({\r\n      saved: false\r\n    });\r\n    console.log(\"Unsave\");\r\n  };\r\n\r\n  share = (e) => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n    console.log(\"Share\");\r\n  };\r\n\r\n  facebookShare = (e) => {\r\n    window.FB.ui(\r\n      {\r\n        method: \"share\",\r\n        quote: \"The most fun way make decisions\",\r\n        hashtag: \"#thisorthat\",\r\n        href: \"https://hip-graph-263913.appspot.com/api/\"\r\n      },\r\n      function(response) {}\r\n    );\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n    // this.setState({ setSelectedValue: value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSavedQuestions();\r\n  }\r\n\r\n  getSavedQuestions() {\r\n    var savedQuestions = [];\r\n    let response = null;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        url:\r\n          \"https://thisorthat-260419.appspot.com/api/users/\" +\r\n          this.props.parent.userId +\r\n          \"/saved\",\r\n        method: \"get\",\r\n        data: {},\r\n        withCredentials: true\r\n      };\r\n\r\n      response = axios(config)\r\n        .then((resp) => resp)\r\n        .catch((error) => error);\r\n    } catch (error) {\r\n      response = error;\r\n    }\r\n\r\n    console.log(\"response is: \" + response);\r\n    // return response;\r\n    console.log(\"i think I ran\");\r\n    // axios.get('https://thisorthat-260419.appspot.com/api/users/' + this.props.parent.userId + '/saved').then((response) => {\r\n    //     console.log(this.props.parent.userId);\r\n    //     console.log(\"saved:\");\r\n    //     console.log(response.data);\r\n\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(\"something went wrong: \" + error);\r\n    //   });\r\n\r\n    if (savedQuestions.includes(this.props.parent.questionId)) {\r\n      this.setState({\r\n        saved: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        saved: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"options\">\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            {\" \"}\r\n            {this.state.saved === true ? (\r\n              <IconButton\r\n                className=\"iconButton\"\r\n                onClick={(e) => this.unsave(e)}\r\n              >\r\n                <TurnedInIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <IconButton className=\"iconButton\" onClick={(e) => this.save(e)}>\r\n                <TurnedInNotIcon />\r\n              </IconButton>\r\n            )}{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            {\" \"}\r\n            {this.state.saved === true ? (\r\n              <Typography> Unsave </Typography>\r\n            ) : (\r\n              <Typography> Save </Typography>\r\n            )}{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <IconButton\r\n              className=\"iconButton\"\r\n              onClick={(e) => (window.location.href = \"/feed\")}\r\n            >\r\n              <SkipNextIcon onClick={console.log(\"skip\")} />{\" \"}\r\n            </IconButton>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            <Typography> Skip </Typography>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <IconButton className=\"iconButton\" onClick={(e) => this.share(e)}>\r\n              <ShareSharpIconButton />\r\n            </IconButton>{\" \"}\r\n            <Dialog open={this.state.open} onClose={this.handleClose}>\r\n              <DialogTitle> {\"Share This or That\"} </DialogTitle>{\" \"}\r\n              <DialogContent>\r\n                <IconButton className=\"facebookIconButton\">\r\n                  <FacebookIcon onClick={(e) => this.facebookShare(e)} />{\" \"}\r\n                </IconButton>{\" \"}\r\n              </DialogContent>{\" \"}\r\n            </Dialog>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            <Typography> Share </Typography>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class ImageAndTextQuestionOption extends Component {\r\n  render() {\r\n    const {\r\n      image,\r\n      handleClick,\r\n      option,\r\n      label,\r\n      cardContainerClass\r\n    } = this.props;\r\n\r\n    const capitalise = (string) => {\r\n      if (typeof string !== \"string\") return \"\";\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    };\r\n    return (\r\n      <div className=\"options\">\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item className={cardContainerClass}>\r\n            <img className=\"image\" src={image} onClick={handleClick} alt=\"\" />{\" \"}\r\n            <Grid className=\"cardCaptionTextContainer\">\r\n              <Grid className=\"cardCaptionOptionContainer\">\r\n                <Typography className=\"cardCaptionOption\">\r\n                  {\" \"}\r\n                  {option}{\" \"}\r\n                </Typography>{\" \"}\r\n              </Grid>{\" \"}\r\n              <Typography className=\"cardCaptionText\">\r\n                {\" \"}\r\n                {capitalise(label)}{\" \"}\r\n              </Typography>{\" \"}\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport ImageAndTextQuestionOption from \"./imageAndTextOption\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class ImageAndTextQuestion extends Component {\r\n  incrementChoice1 = (e) => {\r\n    axios\r\n      .post(\r\n        \"https://thisorthat-260419.appspot.com/api/questions/\" +\r\n          this.props.parent.questionId +\r\n          \"/\" +\r\n          this.props.parent.userId,\r\n        {\r\n          selectedOption: 1\r\n        }\r\n      )\r\n      .then((response) => {\r\n        window.location.href = \"/profiletot\";\r\n      });\r\n  };\r\n\r\n  incrementChoice2 = (e) => {\r\n    axios\r\n      .post(\r\n        \"https://thisorthat-260419.appspot.com/api/questions/\" +\r\n          this.props.parent.questionId +\r\n          \"/\" +\r\n          this.props.parent.userId,\r\n        {\r\n          selectedOption: 2\r\n        }\r\n      )\r\n      .then((response) => {\r\n        window.location.href = \"/profiletot\";\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"question\">\r\n        <Card className=\"card imageAndTextCard\">\r\n          <CardHeader title={this.props.parent.title} />\r\n          <div className=\"row\"> </div> <br />\r\n          <div className=\"options\">\r\n            <ImageAndTextQuestionOption\r\n              cardContainerClass=\"cardContainerButtonLeft\"\r\n              image={this.props.parent.url1}\r\n              handleClick={(e) => this.incrementChoice1(e)}\r\n              option=\"A\"\r\n              label={this.props.parent.text1}\r\n            />\r\n            <ImageAndTextQuestionOption\r\n              cardContainerClass=\"cardContainerButton\"\r\n              image={this.props.parent.url2}\r\n              handleClick={this.incrementChoice2}\r\n              option=\"B\"\r\n              label={this.props.parent.text2}\r\n            />\r\n          </div>{\" \"}\r\n          <Grid className=\"cardCaptionVotes\">\r\n            <Typography variant=\"caption\">\r\n              {\" \"}\r\n              {this.props.parent.numberOfVotes} votes{\" \"}\r\n            </Typography>{\" \"}\r\n          </Grid>\r\n        </Card>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Options from \"./options\";\r\nimport ImageAndTextQuestion from \"./imageAndText\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Question extends Component {\r\n  state = {\r\n    userId: \"...\",\r\n    questionId: \"\",\r\n    title: \"...\",\r\n    text1: \"...\",\r\n    text2: \"...\",\r\n    url1: \"\",\r\n    url2: \"\",\r\n    numberOfVotes: 0,\r\n    seconds: 1000,\r\n    group: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    // alert(\"hei we are here\");\r\n    var cookie = Cookies.get(\"session\");\r\n    // alert(\"cookie: \" + cookie);\r\n    axios\r\n      .get(\"https://thisorthat-260419.appspot.com/api/me\", {\r\n        headers: {\r\n          Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n        }, \r\n        withCredentials: true\r\n      })\r\n      .then((response) => {\r\n        this.props.changeIsLoggedIn(true);\r\n        // alert(this.props.getIsLoggedIn);\r\n        // alert(\"ME WAS SUCCESSFUL\");\r\n      })\r\n      .catch(function(error) {\r\n        // window.location.href = \"/login\";\r\n        // alert(\"ME WAS NOT SUCCESSFUL: \" + error);\r\n        console.log(\"And the error was: \" + error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n      const { seconds } = this.state;\r\n      if (seconds > 0) {\r\n        this.setState(({ seconds }) => ({\r\n          seconds: seconds - 1\r\n        }));\r\n      }\r\n      if (seconds === 0) {\r\n        clearInterval(this.myInterval);\r\n        window.location.href = \"/profiletot\";\r\n      }\r\n    }, 1000);\r\n\r\n    this.updateStateFromAPICall();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.myInterval);\r\n  }\r\n\r\n  updateStateFromAPICall = () => {\r\n    this.setState(\r\n      {\r\n        userId: this.props.userId\r\n      },\r\n      () => {\r\n        axios\r\n          .get(\r\n            \"https://thisorthat-260419.appspot.com/api/users/\" +\r\n              this.state.userId +\r\n              \"/feed\", {\r\n                headers: {\r\n                  Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n                }\r\n              }\r\n          )\r\n          .then((response) => {\r\n            console.log(\"response on next line\");\r\n            console.log(response.data);\r\n            console.log(response.data.id);\r\n            console.log(\"response on previous line\");\r\n            this.setState(\r\n              {\r\n                questionId: response.data.id,\r\n                title: response.data.questionText,\r\n                text1: response.data.option1.text,\r\n                text2: response.data.option2.text,\r\n                numberOfVotes:\r\n                  response.data.option1.numberOfVotes +\r\n                  response.data.option2.numberOfVotes\r\n              },\r\n              function() {\r\n                this.props.setQuestionState(this.state);\r\n              }\r\n            );\r\n            if (response.data.option1.imageURL) {\r\n              this.setState({\r\n                url1: response.data.option1.imageURL\r\n              });\r\n            }\r\n            if (response.data.option2.imageURL) {\r\n              this.setState({\r\n                url2: response.data.option2.imageURL\r\n              });\r\n            }\r\n\r\n            console.log(\"at least we tried\");\r\n          })\r\n          .catch(function(error) {\r\n            console.log(\"No reponse: \" + error);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.group === false) {\r\n      return (\r\n        <div className=\"question\">\r\n          <ImageAndTextQuestion />\r\n          <br /> <br />\r\n          <div className=\"timer\">\r\n            <Typography>{this.state.seconds}</Typography>{\" \"}\r\n          </div>{\" \"}\r\n          <br />\r\n          <Options />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"question\">\r\n            <ImageAndTextQuestion parent={this.state} /> <br /> <br />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              className=\"timer\"\r\n            >\r\n              <Grid item>\r\n                <Typography>{this.state.seconds}</Typography>{\" \"}\r\n              </Grid>\r\n              <Grid item className=\"circularProgressWrapper\">\r\n                <CircularProgress size={36} className=\"circularProgress\" />\r\n              </Grid>\r\n            </Grid>{\" \"}\r\n            <br />\r\n            <Options parent={this.state} />\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport './creator.css';\r\n\r\nexport default class Question extends Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        text1: \"\",\r\n        text2: \"\",\r\n        unsplashUrl1: \"\",\r\n        unsplashUrl2: \"\",\r\n        isSponsored: false,\r\n        image1: null,\r\n        image2: null,\r\n\r\n        searchString: \"\",\r\n        results: [],\r\n        image1Url: \"\",\r\n        image2Url: \"\",\r\n        urlOption1: \"https://images.unsplash.com/photo-1560363199-a1264d4ea5fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1534&q=80\",\r\n        urlOption2: \"https://images.unsplash.com/photo-1570871303513-6faf999850fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=375&q=80\",\r\n        urlOption3: \"https://images.unsplash.com/photo-1572324755260-ec8c3e7fae29?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=237&q=80\",\r\n        urlOption4: \"https://images.unsplash.com/photo-1518823526-0df532eb95a8?ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80\",\r\n\r\n        open1: false,\r\n        open2: false\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    submit = e => {\r\n        console.log(\"right before\");\r\n        console.log(this.state.image1Name);\r\n        if (this.state.text1 !== this.state.image1Name)\r\n            document.getElementById(\"image1Uploader\").value = \"\";\r\n        if (this.state.text2 !== this.state.image2Name)\r\n            document.getElementById(\"image2Uploader\").value = \"\";\r\n\r\n        const fd = new FormData();\r\n        fd.append('title', this.state.title);\r\n        fd.append('text1', this.state.text1);\r\n        fd.append('text2', this.state.text2);\r\n        if (this.state.image1 !== null) {\r\n            fd.append('image1', this.state.image1, this.state.image1.name);\r\n        } else {\r\n            if (this.state.unsplashUrl1 !== \"\") {\r\n                fd.append('unsplashUrl1', this.state.unsplashUrl1);\r\n            }\r\n        }\r\n\r\n        if (this.state.image2 !== null) {\r\n            fd.append('image2', this.state.image2, this.state.image2.name);\r\n        } else {\r\n            if (this.state.unsplashUrl2 !== \"\") {\r\n                fd.append('unsplashUrl2', this.state.unsplashUrl2);\r\n            }\r\n        }\r\n\r\n        var option1Object = {\r\n            text: this.state.text1\r\n        };\r\n        if(this.state.unsplashUrl1 !== \"\") {\r\n            option1Object.imageURL = this.state.unsplashUrl1;\r\n        }\r\n        var option2Object = {\r\n            text: this.state.text2\r\n        };\r\n        if(this.state.unsplashUrl2 !== \"\") {\r\n            option2Object.imageURL = this.state.unsplashUrl2;\r\n        }\r\n\r\n        try {\r\n            axios.post('https://thisorthat-260419.appspot.com/api/questions', {\r\n                questionText: this.state.title,\r\n                option1: option1Object,\r\n                option2: option2Object,\r\n                userID: this.props.userId,\r\n                isSponsored: this.state.isSponsored\r\n            }, {\r\n                headers: {\r\n                  Cookie: \"session=1fee3571c3e12eb77b845ef2fb8a271ae7bccf0e\"\r\n                }\r\n              })\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(\"ToT posted.\")\r\n                window.location.href = '/totsubmit';\r\n            });\r\n        } catch (e) {\r\n            alert(\"Something went wrong!\");\r\n            window.location.href = '/totsubmit';\r\n        }\r\n    }\r\n\r\n    handleClickOpen = (openIndex) => {\r\n        console.log(openIndex);\r\n        if (openIndex === 1) {\r\n            this.setState({\r\n                open1: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                open2: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose = (openIndex) => {\r\n        console.log(openIndex);\r\n        if (openIndex === 1) {\r\n            this.setState({\r\n                open1: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                open2: false\r\n            })\r\n        }\r\n    }\r\n\r\n    search = () => {\r\n        console.log(\"you searched for >\" + this.state.searchString + \"<\");\r\n        var fetchString = 'https://api.unsplash.com/search/photos?page=1&query=' + this.state.searchString;\r\n        console.log(\"url: >\" + fetchString + \"<\");\r\n\r\n\r\n        fetch(fetchString, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer 8b227e84043e03edfc04b0314134dd779c95415f5ca8a8564fb3a9f23174587c'\r\n            }\r\n        })\r\n            .then((res) => this.processResponse(res));\r\n    }\r\n\r\n    processResponse = (response) => {\r\n        if (response.status === 200) {\r\n            response.json().then(data => {\r\n                this.setState({\r\n                    results: data.results,\r\n                    urlOption1: data.results[0].urls.small,\r\n                    urlOption2: data.results[1].urls.small,\r\n                    urlOption3: data.results[2].urls.small,\r\n                    urlOption4: data.results[3].urls.small,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    searchTextFieldKeyPressed = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    selectUnsplashUrl1 = (urlToSet) => {\r\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\r\n\r\n        this.setState({\r\n            unsplashUrl1: urlToSet,\r\n            image1Url: urlToSet,\r\n            image1: null\r\n        }, function () {\r\n            console.log(\"unsplashUrl1: >\" + this.state.unsplashUrl1 + \"<\")\r\n            console.log(this.state.urlOption1);\r\n            console.log(this.state.urlOption2);\r\n            console.log(this.state.urlOption3);\r\n            console.log(this.state.urlOption4);\r\n            this.handleClose(1);\r\n        });\r\n    }\r\n\r\n    selectUnsplashUrl2 = (urlToSet) => {\r\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\r\n\r\n        this.setState({\r\n            unsplashUrl2: urlToSet,\r\n            image2Url: urlToSet,\r\n            image2: null\r\n        }, function () {\r\n            console.log(\"unsplashUrl2: >\" + this.state.unsplashUrl2 + \"<\")\r\n            console.log(this.state.urlOption1);\r\n            console.log(this.state.urlOption2);\r\n            console.log(this.state.urlOption3);\r\n            console.log(this.state.urlOption4);\r\n            this.handleClose(2);\r\n        });\r\n    }\r\n\r\n    image1SelectedHandler = e => {\r\n        console.log(\"image1: \" + e.target.files[0]);\r\n        this.setState({\r\n            image1Url: URL.createObjectURL(e.target.files[0]),\r\n            image1: e.target.files[0],\r\n            unsplashUrl1: \"\"\r\n        });\r\n    }\r\n\r\n    image2SelectedHandler = e => {\r\n        console.log(\"image2:\" + e.target.files[0]);\r\n        this.setState({\r\n            image2Url: URL.createObjectURL(e.target.files[0]),\r\n            image2: e.target.files[0],\r\n            unsplashUrl2: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <Card className=\"loginCard\" raised>\r\n                    <div>\r\n                        <CardHeader title=\"Create a ToT\" />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"questionTitle\"\r\n                            label=\"This or That\"\r\n                            variant=\"outlined\"\r\n                            name='title'\r\n                            value={this.state.title}\r\n                            onChange={e => this.onChange(e)}\r\n                        />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"option1\"\r\n                            label=\"Option 1\"\r\n                            variant=\"outlined\"\r\n                            name='text1'\r\n                            value={this.state.text1}\r\n                            onChange={e => this.onChange(e)}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position='end' >\r\n                                        <input name=\"image1\" onChange={this.image1SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image1Uploader\" type=\"file\" />\r\n                                        <label htmlFor=\"image1Uploader\">\r\n                                            <Tooltip title=\"Upload image\">\r\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                                    <ImageSearchIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                        <Tooltip title=\"Select image from Unsplash\">\r\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 1)}>\r\n                                                <PublicIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Dialog\r\n                                            open={this.state.open1}\r\n                                            onClose={this.handleClose.bind(this, 1)}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"This: Search for an image on Unsplash\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    name=\"searchString\"\r\n                                                    value={this.state.searchString}\r\n                                                    onChange={e => this.onChange(e)}\r\n                                                    id=\"standard-basic\" label=\"Type here\"\r\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\r\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\r\n                                                <br /><br />\r\n                                                <GridList id=\"gridList1\">\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\r\n                                                    </GridListTile>\r\n                                                </GridList>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n                                                    Close\r\n                                                </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <br />\r\n                        <img className=\"image\" src={this.state.image1Url} alt=\"Preview 1\" />\r\n                        <br />\r\n                        <Typography variant=\"caption\">\r\n                            or\r\n                        </Typography>\r\n                        <br />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"option2\"\r\n                            label=\"Option 2\"\r\n                            variant=\"outlined\"\r\n                            name='text2'\r\n                            value={this.state.text2}\r\n                            onChange={e => this.onChange(e)}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position='end' >\r\n                                        <input name=\"image2\" onChange={this.image2SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image2Uploader\" type=\"file\" />\r\n                                        <label htmlFor=\"image2Uploader\">\r\n                                            <Tooltip title=\"Upload image\">\r\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                                    <ImageSearchIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                        <Tooltip title=\"Select image from Unsplash\">\r\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 2)}>\r\n                                                <PublicIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Dialog\r\n                                            open={this.state.open2}\r\n                                            onClose={this.handleClose}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"That: Search for an image on Unsplash\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    name=\"searchString\"\r\n                                                    value={this.state.searchString}\r\n                                                    onChange={e => this.onChange(e)}\r\n                                                    id=\"standard-basic\" label=\"Type here\"\r\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\r\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\r\n                                                <br /><br />\r\n                                                <GridList id=\"gridList2\">\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\r\n                                                    </GridListTile>\r\n                                                </GridList>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose.bind(this, 2)} color=\"primary\">\r\n                                                    Close\r\n                                                </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <br />\r\n                        <img className=\"image\" src={this.state.image2Url} alt=\"Preview 2\" />\r\n                        <br /><br />\r\n                        <Button onClick={this.submit} value=\"Submit\" variant=\"contained\" color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\nimport localStorage from \"local-storage\";\r\n// import QuestionWrapper from \"./Components/Pages/QuestionWrapper\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Login from \"./Components/Login\";\r\nimport Profile from \"./Components/Profile\";\r\nimport ProfileToT from \"./Components/ProfileToT\";\r\nimport ToTSubmit from \"./Components/ToTSubmit\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Question from \"./Components/Question\";\r\nimport Creator from \"./Components/Creator\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1da1f2\",\r\n      light: \"#E8EEF8\",\r\n      dark: \"#0c90e1\"\r\n    },\r\n    secondary: {\r\n      main: \"#657786\",\r\n      light: \"#E8EEF8\",\r\n      dark: \"#2653A6\"\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    userId: \"5e0e5e2c865c4946ea9a2dcf\",\r\n    questionState: {\r\n      userId: \"...\",\r\n      questionId: \"\",\r\n      title: \"...\",\r\n      text1: \"...\",\r\n      text2: \"...\",\r\n      url1: \"\",\r\n      url2: \"\",\r\n      numberOfVotes: 0,\r\n      seconds: 10,\r\n      group: true\r\n    }\r\n  };\r\n\r\n  saveToLocalStorage = () => {\r\n    try {\r\n      localStorage.set(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\r\n      localStorage.set(\r\n        \"questionState\",\r\n        JSON.stringify(this.state.questionState)\r\n      );\r\n    } catch (e) {}\r\n  };\r\n\r\n  loadFromLocalStorage = () => {\r\n    try {\r\n      var isLoggedInCopy = JSON.parse(localStorage.get(\"isLoggedIn\"));\r\n      this.setState({\r\n        isLoggedIn: isLoggedInCopy\r\n      });\r\n      var questionStateCopy = JSON.parse(localStorage.get(\"questionState\"));\r\n      this.setState({\r\n        questionState: questionStateCopy\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  changeIsLoggedIn = (newValue) => {\r\n    this.setState(\r\n      {\r\n        isLoggedIn: newValue\r\n      },\r\n      function() {\r\n        this.saveToLocalStorage();\r\n        console.log(\"This got called: \" + this.state.isLoggedIn);\r\n      }\r\n    );\r\n  };\r\n\r\n  getIsLoggedIn = () => {\r\n    return this.state.isLoggedIn;\r\n  };\r\n\r\n  setQuestionState = (newValue) => {\r\n    this.setState(\r\n      {\r\n        questionState: newValue\r\n      },\r\n      () => {\r\n        console.log(\"questionState has been set\");\r\n        console.log(this.state.questionState);\r\n        this.saveToLocalStorage();\r\n      }\r\n    );\r\n  };\r\n\r\n  getQuestionState = () => {\r\n    console.log(\"question set has been retrieved\");\r\n    console.log(this.state.questionState);\r\n    console.log(\"question set has been retrieved\");\r\n    return this.state.questionState;\r\n  };\r\n\r\n  UNSAFE_componentWillMount = () => {\r\n    this.loadFromLocalStorage();\r\n  };\r\n\r\n  UNSAFE_componentWillUnmount = () => {\r\n    this.saveToLocalStorage();\r\n  };\r\n\r\n  UNSAFE_componentWillUpdate = () => {\r\n    this.saveToLocalStorage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <StylesProvider injectFirst>\r\n          <Router>\r\n            <div>\r\n              <Header\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                changeIsLoggedIn={this.changeIsLoggedIn}\r\n              />{\" \"}\r\n              <div className=\"screen\">\r\n                <div className=\"background\">\r\n                  {\" \"}\r\n                  <Switch>\r\n                    <Route\r\n                      path=\"/login\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Redirect to=\"/feed\" />\r\n                        ) : (\r\n                          <Login changeIsLoggedIn={this.changeIsLoggedIn} />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/signup\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Redirect to=\"/feed\" />\r\n                        ) : (\r\n                          <Signup />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/feed\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Question\r\n                            getIsLoggedIn={this.getIsLoggedIn}\r\n                            changeIsLoggedIn={this.changeIsLoggedIn}\r\n                            userId={this.state.userId}\r\n                            setQuestionState={this.setQuestionState}\r\n                          />\r\n                        ) : (\r\n                          <Question\r\n                            getIsLoggedIn={this.getIsLoggedIn}\r\n                            changeIsLoggedIn={this.changeIsLoggedIn}\r\n                            userId={this.state.userId}\r\n                            setQuestionState={this.setQuestionState}\r\n                          />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/creator\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Creator userId={this.state.userId} />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/profile\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Profile getQuestionState={this.getQuestionState} />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/question\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Question\r\n                            getIsLoggedIn={this.getIsLoggedIn}\r\n                            changeIsLoggedIn={this.changeIsLoggedIn}\r\n                            userId={this.state.userId}\r\n                            setQuestionState={this.setQuestionState}\r\n                          />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/totsubmit\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <ToTSubmit />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"/profiletot\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <ProfileToT\r\n                            getQuestionState={this.getQuestionState}\r\n                          />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    <Route\r\n                      path=\"*\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Question\r\n                            getIsLoggedIn={this.getIsLoggedIn}\r\n                            changeIsLoggedIn={this.changeIsLoggedIn}\r\n                            userId={this.state.userId}\r\n                            setQuestionState={this.setQuestionState}\r\n                          />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                  </Switch>{\" \"}\r\n                </div>{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </Router>{\" \"}\r\n        </StylesProvider>{\" \"}\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}