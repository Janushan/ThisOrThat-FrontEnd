{"version":3,"sources":["Components/Signup/index.js","Components/Login/index.js","Components/Join/index.js","Components/ProfileToT/index.js","Components/Profile/index.js","Components/ToTSubmit/index.js","Components/Header/index.js","Components/Question/options.js","Components/Question/imageAndText.js","Components/Question/index.js","Components/Creator/index.js","App.js","serviceWorker.js","index.js","Assets/pizza.jpg","Assets/ice-cream.jpg"],"names":["Signup","state","userName","email","password","confirmPassword","usernameCheck","usernameError","open1","errorMessage","change","e","setState","target","name","value","handleClose","openIndex","console","log","open2","onSubmit","preventDefault","alphanumeric","lowercasePassword","toLowerCase","alertString","length","test","localeCompare","axios","post","then","response","props","history","push","className","Card","raised","CardHeader","title","TextField","label","this","onChange","error","InputProps","endAdornment","InputAdornment","position","Tooltip","IconButton","aria-label","component","type","Button","variant","color","onClick","Typography","gutterBottom","to","Dialog","open","onClose","bind","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Component","Login","validated","data","changeIsLoggedIn","Grid","container","direction","alignItems","fullWidth","href","startIcon","justify","BorderLinearProgress","withStyles","root","height","backgroundColor","lighten","bar","borderRadius","LinearProgress","useStyles","makeStyles","theme","flexGrow","margin","spacing","CustomizedProgressBars","percent","classes","ProfileToT","text1","text2","image1","image2","option1Votes","option2Votes","totalVotes","percentage1","toFixed","percentage2","classname","src","Image1","CardContent","Image2","window","location","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","palette","background","paper","width","Profile","useTheme","useState","setValue","setProfileToTs","setSavedToTs","useEffect","getToTs","a","async","fetchSavedToTs","result","fetchProfileToTs","AppBar","Tabs","event","newValue","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","Question","avatar","grow","menuButton","marginRight","display","breakpoints","up","sectionDesktop","sectionMobile","Header","fullNavBar","isLoggedIn","React","anchorEl","setAnchorEl","Boolean","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Fragment","aria-controls","aria-haspopup","currentTarget","MenuItem","Toolbar","disableGutters","noWrap","Options","save","saved","unsave","share","selectedValue","setOpen","item","ImageAndTextQuestion","choice1","choice2","votes","seconds","incrementChoice1","incrementChoice2","myInterval","setInterval","clearInterval","alt","group","CircularProgress","size","unsplashUrl1","unsplashUrl2","searchString","results","image1Url","image2Url","urlOption1","urlOption2","urlOption3","urlOption4","submit","image1Name","document","getElementById","image2Name","fd","FormData","append","res","alert","handleClickOpen","search","fetchString","fetch","method","headers","processResponse","status","json","urls","small","searchTextFieldKeyPressed","keyCode","selectUnsplashUrl1","urlToSet","selectUnsplashUrl2","image1SelectedHandler","files","URL","createObjectURL","image2SelectedHandler","accept","htmlFor","onKeyDown","GridList","GridListTile","createMuiTheme","primary","main","light","dark","secondary","App","saveToLocalStorage","localStorage","set","JSON","stringify","loadFromLocalStorage","isLoggedInCopy","parse","get","UNSAFE_componentWillMount","UNSAFE_componentWillUnmount","UNSAFE_componentWillUpdate","StylesProvider","injectFirst","path","render","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"spBAmBqBA,G,kNACnBC,MAAQ,CACNC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,cAAc,GACdC,eAAc,EACdC,OAAO,EACPC,aAAc,I,EAGhBC,OAAS,SAAAC,GACP,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EA8B9BC,YAAc,SAACC,GACbC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKjBC,SAAW,SAAAV,GACTA,EAAEW,iBACF,IAAIC,EAAe,iBAEfC,EAAmB,EAAKvB,MAAMG,SAASqB,cACvCC,EAAY,GACW,KAAvB,EAAKzB,MAAMC,UAAsC,KAApB,EAAKD,MAAME,OAAsC,KAAvB,EAAKF,MAAMG,UAAgD,KAA9B,EAAKH,MAAMI,gBACjGqB,GAAa,gCAGV,EAAKzB,MAAMC,SAASyB,OAAS,IAC9BD,GAAa,mDAE8B,IAAzCH,EAAaK,KAAK,EAAK3B,MAAMC,YAAgE,IAAzCqB,EAAaK,KAAK,EAAK3B,MAAMG,YACnFsB,GAAa,6EAEZ,EAAKzB,MAAMG,SAASuB,OAAS,IAC9BD,GAAa,oDAEX,EAAKzB,MAAMG,WAAc,EAAKH,MAAMI,kBACtCqB,GAAa,6BAE2C,IAAvDF,EAAkBK,cAAc,EAAK5B,MAAMG,YAC5CsB,GAAa,oDAEuB,IAtB5B,KAsBAE,KAAK,EAAK3B,MAAMG,YACxBsB,GAAa,sCAGA,KAAdA,IAAgD,IAA3B,EAAKzB,MAAMM,cAC/BuB,IAAMC,KAAK,qDAAsD,CAC/D5B,MAAO,EAAKF,MAAME,MAClBC,SAAU,EAAKH,MAAMG,SACrBU,KAAM,EAAKb,MAAMC,WAElB8B,MAAK,SAAAC,GACJ,EAAKC,MAAMC,QAAQC,KAAK,aAG5B,EAAKxB,SAAS,CAACH,aAAaiB,IAC5B,EAAKd,SAAS,CAACJ,OAAM,M,wEAIf,IAAD,OAEP,OACE,6BACE,yBAAK6B,UAAU,cACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,aAAaE,QAAM,GACjC,0BAAMF,UAAU,UACd,kBAACG,EAAA,EAAD,CACEC,MAAM,WAER,6BACA,kBAACC,EAAA,EAAD,CACE5B,KAAK,WACL6B,MAAM,YACNN,UAAU,gBACVtB,MAAO6B,KAAK3C,MAAMC,SAClB2C,SAAU,SAAAlC,GAAC,OAAI,EAAKD,OAAOC,IAC3BmC,MAAOF,KAAK3C,MAAMM,cAClBwC,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,0CACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAOxB,6BACA,kBAACZ,EAAA,EAAD,CACE5B,KAAK,QACL6B,MAAM,QACN5B,MAAO6B,KAAK3C,MAAME,MAClB0C,SAAU,SAAAlC,GAAC,OAAI,EAAKD,OAAOC,IAC3B4C,KAAK,QACLR,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,iCACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAMtB,6BACF,kBAACZ,EAAA,EAAD,CACE5B,KAAK,WACL6B,MAAM,WACN5B,MAAO6B,KAAK3C,MAAMG,SAClByC,SAAU,SAAAlC,GAAC,OAAI,EAAKD,OAAOC,IAC3B4C,KAAK,WACLR,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,uFAEX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAMtB,6BACF,kBAACZ,EAAA,EAAD,CACE5B,KAAK,kBACL6B,MAAM,mBACN5B,MAAO6B,KAAK3C,MAAMI,gBAClBwC,SAAU,SAAAlC,GAAC,OAAI,EAAKD,OAAOC,IAC3B4C,KAAK,WACLlB,UAAU,eACVU,WAAY,CACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACjB,kBAACC,EAAA,EAAD,CAASV,MAAM,+DACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,IAAD,YAOxB,6BACA,6BACA,kBAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,SAAAhD,GAAC,OAAI,EAAKU,SAASV,KAAxE,UAGA,6BACA,kBAACiD,EAAA,EAAD,CAAYH,QAAQ,WAAWpB,UAAU,GAAGqB,MAAM,gBAAgBG,cAAY,GAA9E,gCAGA,kBAAC,IAAD,CAAMC,GAAG,UAAT,aAIN,kBAACC,EAAA,EAAD,CACEC,KAAMpB,KAAK3C,MAAMO,MACjByD,QAASrB,KAAK5B,YAAYkD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEnB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,IACtC,kBAACC,EAAA,EAAD,KACG3B,KAAK3C,MAAMQ,cAEd,kBAAC+D,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK5B,YAAYkD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,gB,GApNwBe,c,0BCFfC,G,kNACnBzE,MAAQ,CACNE,MAAO,GACPC,SAAU,GACVuE,UAAW,EACXnE,OAAO,EACPC,aAAc,I,EAGhBO,YAAc,SAACC,GACbC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKjBV,OAAS,SAACC,GACR,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BM,SAAW,SAACV,GACVA,EAAEW,iBACF,IAAII,EAAY,GACS,KAArB,EAAKzB,MAAME,OAAwC,KAAxB,EAAKF,MAAMG,UACxCsB,GAAa,+BACb,EAAKd,SAAS,CAACH,aAAaiB,IAC5B,EAAKd,SAAS,CAACJ,OAAM,MAErBsB,IAAMC,KAAK,oDAAqD,CAChE5B,MAAO,EAAKF,MAAME,MAClBC,SAAU,EAAKH,MAAMG,WAEpB4B,MAAK,SAAAC,GACJ,EAAKrB,SAAS,CAAE+D,UAAW1C,EAAS2C,OACV,IAAvB,EAAK3E,MAAM0E,YAGZjD,GAAa,sBACb,EAAKd,SAAS,CAACH,aAAaiB,IAC5B,EAAKd,SAAS,CAACJ,OAAM,IACrB,EAAKI,SAAS,CAAER,SAAU,SAI9B,EAAK8B,MAAM2C,kBAAiB,K,wEAItB,IAAD,OACP,OACE,6BACE,yBAAKxC,UAAU,WACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,QAAM,GAChC,0BAAMF,UAAU,SACd,kBAACG,EAAA,EAAD,CAAYC,MAAM,UAClB,kBAACqC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACvC,EAAA,EAAD,CACE5B,KAAK,QACL6B,MAAM,QACNc,QAAQ,WACRpB,UAAU,iBACVtB,MAAO6B,KAAK3C,MAAME,MAClB+E,WAAW,EACXrC,SAAU,SAAClC,GAAD,OAAO,EAAKD,OAAOC,MAE/B,kBAAC+B,EAAA,EAAD,CACE5B,KAAK,WACL6B,MAAM,WACNc,QAAQ,WACR1C,MAAO6B,KAAK3C,MAAMG,SAClB8E,WAAW,EACXrC,SAAU,SAAClC,GAAD,OAAO,EAAKD,OAAOC,IAC7B4C,KAAK,cAGT,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACzB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNrB,UAAU,qBACVsB,QAAS,SAAChD,GAAD,OAAO,EAAKU,SAASV,KAJhC,SAQA,kBAAC6C,EAAA,EAAD,CACEnB,UAAU,sBACV8C,KAAK,oGACLC,UAAW,kBAAC,IAAD,OAHb,wBAOA,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTE,WAAW,SACXI,QAAQ,SACRhD,UAAU,iBAEV,kBAACuB,EAAA,EAAD,CAAYF,MAAM,gBAAgBrB,UAAU,cAA5C,0BAGA,kBAAC,IAAD,CAAMyB,GAAG,WAAT,iBAOZ,kBAACC,EAAA,EAAD,CACEC,KAAMpB,KAAK3C,MAAMO,MACjByD,QAASrB,KAAK5B,YAAYkD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEnB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,IACtC,kBAACC,EAAA,EAAD,KACG3B,KAAK3C,MAAMQ,cAEd,kBAAC+D,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK5B,YAAYkD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,gB,GA/HuBe,c,UCVGA,Y,2LCShCa,GAAuBC,aAAW,CACtCC,KAAM,CACJC,OAAQ,GACRC,gBAAiBC,aAAQ,UAAW,KAEtCC,IAAK,CACHC,aAAc,GACdH,gBAAiB,YAPQH,CAS1BO,MAGGC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCT,KAAM,CACJU,SAAU,GAEZC,OAAQ,CACNA,OAAQF,EAAMG,QAAQ,QAI1B,SAASC,GAAT,GAA8C,IAAZC,EAAW,EAAXA,QAC1BC,EAAUR,KAEhB,OACE,yBAAK1D,UAAWkE,EAAQf,MACtB,kBAACF,GAAD,CACEjD,UAAWkE,EAAQJ,OACnB1C,QAAQ,cACRC,MAAM,YACN3C,MAAOuF,K,IAMME,G,2MACnBvG,MAAQ,CACNwC,MAAO,GACPgE,MAAO,QACPC,MAAO,YACPC,OAAQ,KACRC,OAAQ,KAERC,aAAc,EACdC,aAAc,EACdC,WAAY,I,wEAKZ,IAAIC,GAAsBpE,KAAK3C,MAAM4G,aAAejE,KAAK3C,MAAM8G,WAA5C,KAAyDE,QAAQ,GAChFC,GAAe,KAAO,EAAItE,KAAK3C,MAAM4G,aAAejE,KAAK3C,MAAM8G,aAAaE,QAAQ,GACxF,OACE,yBAAK5E,UAAU,UACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,eAAeE,QAAM,GACnC,6BACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,iCAClB,6BACA,6BACA,yBAAK0E,UAAU,SACb,yBAAK9E,UAAU,SACb,yBAAKA,UAAU,QAAQ+E,IAAKC,OAC5B,kBAACC,EAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,KAAKH,UAAU,MAC7CV,KAAK3C,MAAMwG,QAGhB,kBAACJ,GAAD,CAAwBC,QAASU,IACjC,kBAACpD,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,YAAYH,UAAU,aACpD0D,EAAc,MAGnB,yBAAK3E,UAAU,SACb,yBAAKA,UAAU,QAAQ+E,IAAKG,OAC5B,kBAACD,EAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,KAAKH,UAAU,MAC7CV,KAAK3C,MAAMyG,QAGhB,kBAACL,GAAD,CAAwBC,QAASY,IACjC,kBAACtD,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,YAAYH,UAAU,aACpD4D,EAAc,OAIrB,kBAACtD,EAAA,EAAD,CAAYC,cAAY,EAACJ,QAAQ,YAAYH,UAAU,aACpDV,KAAK3C,MAAM8G,WAAa,oBAE3B,6BAAM,6BACN,kBAACvD,EAAA,EAAD,CAAQG,QAAS,WAAa6D,OAAOC,SAAStC,KAAO,aAAc1B,QAAQ,YAAYC,MAAM,WAA7F,mB,GAtD4Be,a,OCpCxC,SAASiD,GAASxF,GAAQ,IACdyF,EAAqCzF,EAArCyF,SAAU5G,EAA2BmB,EAA3BnB,MAAO6G,EAAoB1F,EAApB0F,MAAUC,EADd,YACwB3F,EADxB,8BAGrB,OACE,kBAAC0B,EAAA,EAAD,eACEN,UAAU,MACVwE,KAAK,WACLC,OAAQhH,IAAU6G,EAClBtD,GAAE,8BAAyBsD,GAC3BzD,kBAAA,yBAAmCyD,IAC/BC,GAEH9G,IAAU6G,GAAS,kBAACI,EAAA,EAAD,CAAKC,EAAG,GAAIN,IAWxC,SAASO,GAAUN,GACf,MAAO,CACHtD,GAAG,kBAAD,OAAoBsD,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAM7B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCT,KAAM,CACFE,gBAAiBO,EAAMkC,QAAQC,WAAWC,MAC1CC,MAAO,SAIA,SAASC,KACpB,IAAMhC,EAAUR,KACVE,EAAQuC,cAFgB,EAGJC,mBAAS,GAHL,mBAGvB1H,EAHuB,KAGhB2H,EAHgB,OAIOD,mBAAS,IAJhB,mBAIVE,GAJU,aAKGF,mBAAS,IALZ,mBAKZG,GALY,WAe9BC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAU,0BAAAC,EAAAC,OAAA,gDAQNC,EAAiB,0BAAAF,EAAAC,OAAA,kEAAAD,EAAA,MACEjH,IAAMC,KACzB,GAAI,KAFa,OACbmH,EADa,OAInBN,EAAaM,EAAOtE,MAJD,sCANE,0BAAAmE,EAAAC,OAAA,kEAAAD,EAAA,MACAjH,IAAMC,KACzB,GAAI,KAFe,OACfmH,EADe,OAIrBP,EAAeO,EAAOtE,MAJD,qCAYzBuE,GACAF,IAfY,sCAkBhB,OACI,yBAAK5G,UAAU,eACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,eACZ,kBAACG,EAAA,EAAD,CAAYC,MAAM,aAEtB,6BACA,yBAAKJ,UAAWkE,EAAQf,MACpB,kBAAC4D,EAAA,EAAD,CAAQlG,SAAS,SAASQ,MAAM,WAC5B,kBAAC2F,EAAA,EAAD,CACAtI,MAAOA,EACP8B,SAxCK,SAACyG,EAAOC,GACzBb,EAASa,IAwCGC,eAAe,UACfC,UAAU,UACVhG,QAAQ,YACRJ,aAAW,2BAEX,kBAACqG,EAAA,EAAD,eAAK/G,MAAM,aAAgBuF,GAAU,KACrC,kBAACwB,EAAA,EAAD,eAAK/G,MAAM,SAAYuF,GAAU,OAGrC,kBAAC,IAAD,CACIyB,KAA0B,QAApB1D,EAAMjB,UAAsB,YAAc,IAChD4C,MAAO7G,EACP6I,cAjDU,SAAAhC,GACtBc,EAASd,KAkDG,kBAACF,GAAD,CAAU3G,MAAOA,EAAO6G,MAAO,EAAGiC,IAAK5D,EAAMjB,WACzC,wBAAI3C,UAAU,gBASV,kBAAC,GAAD,QAGR,kBAACqF,GAAD,CAAU3G,MAAOA,EAAO6G,MAAO,EAAGiC,IAAK5D,EAAMjB,WACzC,wBAAI3C,UAAU,mBASV,kBAAC,GAAD,W,gCCpIPyH,G,iLAGb,OACI,yBAAKzH,UAAU,UACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,SAASE,QAAM,GAC3B,kBAACC,EAAA,EAAD,CACIuH,OAAQ,kBAAC,KAAD,MACRtH,MAAM,kBAEV,kBAAC6E,EAAA,EAAD,kE,GAVkB7C,a,gFCOhCsB,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+D,KAAM,CACJ9D,SAAU,GAEZ+D,WAAY,CACVC,YAAajE,EAAMG,QAAQ,IAE7B3D,MAAM,aACJ0H,QAAS,SACRlE,EAAMmE,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,eAAe,aACbH,QAAS,QACRlE,EAAMmE,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbI,cAAc,aACZJ,QAAS,QACRlE,EAAMmE,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,cAKA,SAASK,GAAT,GAAmD,IA2C5DC,EA3C2BC,EAAgC,EAAhCA,WAAY7F,EAAoB,EAApBA,iBACrC0B,EAAUR,KAD+C,EAEvC4E,IAAMlC,UAAS,GAFwB,gCAG/BkC,IAAMlC,SAAS,OAHgB,mBAGxDmC,EAHwD,KAG9CC,EAH8C,KAIzD7G,EAAO8G,QAAQF,GAUf5J,EAAc,WAClB6J,EAAY,OAfiD,EAkBXF,IAAMlC,SAAS,MAlBJ,mBAkBxDsC,EAlBwD,KAkBpCC,EAlBoC,KAoBzDC,EAAmBH,QAAQC,GAW3BG,EACJ,kBAACC,GAAA,EAAD,CACEP,SAAUG,EACVK,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7ChH,GALiB,qCAMjBiH,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDtH,KAAMiH,EACNhH,QAjB0B,WAC5B+G,EAAsB,SA2FxB,OArEmB,IAAfN,IACFD,EACE,kBAAC,IAAMgB,SAAP,KACE,kBAACjI,EAAA,EAAD,CACEG,QAAS,WACP6D,OAAOC,SAAStC,KAAO,cAF3B,QAcA,kBAAC3B,EAAA,EAAD,CACEG,QAAS,WACP6D,OAAOC,SAAStC,KAAO,aAF3B,UAOA,yBAAK9C,UAAWkE,EAAQyD,OACxB,yBAAK3H,UAAWkE,EAAQ+D,gBACtB,kBAAClH,EAAA,EAAD,CACEM,MAAM,UACNL,aAAW,0BACXqI,gBAAc,8BACdC,gBAAc,OACdhI,QAlES,SAAA2F,GACjBuB,EAAYvB,EAAMsC,iBAmEV,kBAAC,KAAD,QAGJ,yBAAKvJ,UAAWkE,EAAQgE,eACtB,kBAACnH,EAAA,EAAD,CACEC,aAAW,YACXqI,gBAtDW,qCAuDXC,gBAAc,OACdhI,QA5DmB,SAAC2F,GAC5B0B,EAAsB1B,EAAMsC,gBA4DpBlI,MAAM,WAEN,kBAAC,KAAD,OAEF,kBAACyH,GAAA,EAAD,CACM7G,GAAG,cACHsG,SAAUA,EACVQ,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdtH,KAAMA,EACNC,QAASjD,GAET,kBAAC6K,GAAA,EAAD,CAAUlI,QAAS,WAAY3C,IAAewG,OAAOC,SAAStC,KAAO,aAArE,cACA,kBAAC0G,GAAA,EAAD,CAAUlI,QAAS,WAAY3C,IAAe6D,GAAiB,KAA/D,eAQZ,yBAAKxC,UAAWkE,EAAQyD,MACtB,kBAACZ,EAAA,EAAD,CAAQ/G,UAAU,SAASa,SAAS,UAClC,kBAAC4I,GAAA,EAAD,CAASC,gBAAgB,EAAMtI,QAAQ,SACrC,kBAACG,EAAA,EAAD,CAAYvB,UAAWkE,EAAQ9D,MAAOgB,QAAQ,KAAKuI,QAAM,GAAzD,gBAGCvB,IAGJS,G,sFClJce,I,kBACnB,WAAY/J,GAAQ,IAAD,8BACjB,4CAAMA,KAURgK,KAAO,SAACvL,GACN,EAAKC,SAAS,CAAEuL,OAAO,IACvBjL,QAAQC,IAAI,SAbK,EAgBnBiL,OAAS,SAACzL,GACR,EAAKC,SAAS,CAAEuL,OAAO,IACvBjL,QAAQC,IAAI,WAlBK,EAqBnBkL,MAAQ,SAAC1L,GACP,EAAKC,SAAS,CAAEoD,MAAM,IACtB9C,QAAQC,IAAI,UArBZ,EAAKlB,MAAQ,CACXqM,cAAe,KACftI,MAAM,EACNuI,SAAS,GAEX,EAAKF,MAAQ,EAAKA,MAAMnI,KAAX,iBACb,EAAKlD,YAAc,EAAKA,YAAYkD,KAAjB,iBARF,E,2EA2BjBtB,KAAKhC,SAAS,CAAEoD,MAAM,M,+BAId,IAAD,OACP,OACE,yBAAK3B,UAAU,WACb,kBAACyC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAM0H,MAAI,GACR,kBAACpJ,EAAA,EAAD,CAAYf,UAAU,cACnBO,KAAK3C,MAAMkM,MACV,kBAAC,KAAD,CAAcxI,QAAS,SAAChD,GAAD,OAAO,EAAKyL,OAAOzL,MAE1C,kBAAC,KAAD,CAAiBgD,QAAS,SAAChD,GAAD,OAAO,EAAKuL,KAAKvL,QAGzC,IACR,kBAACmE,EAAA,EAAD,CAAM0H,MAAI,GACR,kBAAC5I,EAAA,EAAD,cACM,KACF,IACR,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAM0H,MAAI,GACR,kBAACpJ,EAAA,EAAD,CAAYf,UAAU,aAAasB,QAAS,SAAChD,GAAD,OAAO,EAAK0L,MAAM1L,KAC5D,kBAAC,KAAD,OAEF,kBAACoD,EAAA,EAAD,CAAQC,KAAMpB,KAAK3C,MAAM+D,KAAMC,QAASrB,KAAK5B,aAC3C,kBAACqD,EAAA,EAAD,KAAc,sBACd,kBAACE,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,CAAYf,UAAU,sBACpB,kBAAC,IAAD,CAAcsB,QAAS,SAAChD,GAAD,OAAO,EAAK0L,MAAM1L,UAYzC,IACR,kBAACmE,EAAA,EAAD,CAAM0H,MAAI,GACR,kBAAC5I,EAAA,EAAD,eACM,KACF,S,GA1EqBa,cCPhBgI,G,2MACnBxM,MAAQ,CACNyM,QAAS,EACTC,QAAS,EACTC,MAAO,EACPC,QAAS,I,EAqBXC,iBAAmB,SAACnM,GAClB,EAAKC,SAAS,CACZ8L,QAAS,EAAKzM,MAAMyM,QAAU,EAC9BE,MAAO,EAAK3M,MAAM2M,MAAQ,IACzB,WACD1L,QAAQC,IAAI,UACZqG,OAAOC,SAAStC,KAAO,kB,EAI3B4H,iBAAmB,SAACpM,GAClB,EAAKC,SAAS,CACZ+L,QAAS,EAAK1M,MAAM0M,QAAU,EAC9BC,MAAO,EAAK3M,MAAM2M,MAAQ,IACzB,WACD1L,QAAQC,IAAI,UACZqG,OAAOC,SAAStC,KAAO,kB,EAI3B+G,KAAO,SAACvL,GACNO,QAAQC,IAAI,S,EAGdkL,MAAQ,SAAC1L,GACPO,QAAQC,IAAI,U,mFA3CO,IAAD,OAClByB,KAAKoK,WAAaC,aAAY,WAAO,IAC3BJ,EAAY,EAAK5M,MAAjB4M,QACJA,EAAU,GACZ,EAAKjM,UAAS,kBAAkB,CAC9BiM,QADY,EAAGA,QACI,MAGP,IAAZA,GACFK,cAAc,EAAKF,cAEpB,O,6CAIHE,cAActK,KAAKoK,c,+BA+BX,IAAD,OAEP,OACE,yBAAK3K,UAAU,YACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,yBACd,kBAACG,EAAA,EAAD,CAAYC,MAAM,kCAClB,yBAAKJ,UAAU,OAAf,KAFF,IAE+B,6BAC7B,yBAAKA,UAAU,WACb,kBAACyC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAM0H,MAAI,EAACnK,UAAU,qBACnB,yBACEA,UAAU,QACV+E,IAAKC,KACL1D,QAAS,SAAChD,GAAD,OAAO,EAAKmM,iBAAiBnM,IACtCwM,IAAI,WACH,IACH,kBAACvJ,EAAA,EAAD,CAAYvB,UAAU,mBAAtB,WAA6D,KACvD,KACF,IACR,kBAACyC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAC5C,kBAACH,EAAA,EAAD,CAAM0H,MAAI,EAACnK,UAAU,iBACnB,yBACEA,UAAU,QACV+E,IAAKG,KACL5D,QAAS,SAAChD,GAAD,OAAO,EAAKoM,iBAAiBpM,IACtCwM,IAAI,WACH,IACH,kBAACvJ,EAAA,EAAD,CAAYvB,UAAU,mBAAtB,eAAiE,KAC3D,KACF,KACH,IACP,kBAACuB,EAAA,EAAD,CAAYH,QAAQ,WAApB,kBAA0D,KACpD,S,GAtFkCgB,aCC7BqF,G,2MACnB7J,MAAQ,CACNyM,QAAS,EACTC,QAAS,EACTC,MAAO,EACPC,QAAS,GACTO,OAAO,G,mFAGY,IAAD,OAClBxK,KAAKoK,WAAaC,aAAY,WAAO,IAC3BJ,EAAY,EAAK5M,MAAjB4M,QACJA,EAAU,GACZ,EAAKjM,UAAS,kBAAkB,CAC9BiM,QADY,EAAGA,QACI,MAGP,IAAZA,GACFK,cAAc,EAAKF,cAEpB,O,6CAIHE,cAActK,KAAKoK,c,+BAKnB,OAAyB,IAArBpK,KAAK3C,MAAMmN,MAEX,yBAAK/K,UAAU,YACb,kBAAC,GAAD,MADF,IACqD,IADrD,IAE2B,6BAF3B,IAEkC,6BAChC,yBAAKA,UAAU,SACb,kBAACuB,EAAA,EAAD,KACGhB,KAAK3C,MAAM4M,QACe,KACf,KACT,IACP,6BACA,kBAAC,GAAD,OAKF,6BACE,yBAAKxK,UAAU,YACb,kBAAC,GAAD,MADF,IACqD,IADrD,IAE2B,6BAF3B,IAEkC,6BAChC,kBAACyC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,WAAW,SACXI,QAAQ,SACRhD,UAAU,SAEV,kBAACyC,EAAA,EAAD,CAAM0H,MAAI,GACR,kBAAC5I,EAAA,EAAD,KACGhB,KAAK3C,MAAM4M,QACe,KACf,KAEhB,kBAAC/H,EAAA,EAAD,CAAM0H,MAAI,EAACnK,UAAU,2BACnB,kBAACgL,GAAA,EAAD,CAAkBC,KAAM,GAAIjL,UAAU,uBAElC,IACR,6BACA,kBAAC,GAAD,OACK,S,GArEqBoC,a,4DCSjBqF,I,kNAEjB7J,MAAQ,CACJwC,MAAO,GACPgE,MAAO,GACPC,MAAO,GACP6G,aAAc,GACdC,aAAc,GACd7G,OAAQ,KACRC,OAAQ,KAER6G,aAAc,GACdC,QAAS,GACTC,UAAW,GACXC,UAAW,GACXC,WAAY,sIACZC,WAAY,wIACZC,WAAY,wIACZC,WAAY,2GAEZxN,OAAO,EACPY,OAAO,G,EAGXyB,SAAW,SAAAlC,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCkN,OAAS,SAAAtN,GACLO,QAAQC,IAAI,gBACZD,QAAQC,IAAI,EAAKlB,MAAMiO,YACnB,EAAKjO,MAAMwG,QAAU,EAAKxG,MAAMiO,aAChCC,SAASC,eAAe,kBAAkBrN,MAAQ,IAClD,EAAKd,MAAMyG,QAAU,EAAKzG,MAAMoO,aAChCF,SAASC,eAAe,kBAAkBrN,MAAQ,IAEtD,IAAMuN,EAAK,IAAIC,SACfD,EAAGE,OAAO,QAAS,EAAKvO,MAAMwC,OAC9B6L,EAAGE,OAAO,QAAS,EAAKvO,MAAMwG,OAC9B6H,EAAGE,OAAO,QAAS,EAAKvO,MAAMyG,OACJ,OAAtB,EAAKzG,MAAM0G,OACX2H,EAAGE,OAAO,SAAU,EAAKvO,MAAM0G,OAAQ,EAAK1G,MAAM0G,OAAO7F,MAEzB,KAA5B,EAAKb,MAAMsN,cACXe,EAAGE,OAAO,eAAgB,EAAKvO,MAAMsN,cAInB,OAAtB,EAAKtN,MAAM2G,OACX0H,EAAGE,OAAO,SAAU,EAAKvO,MAAM2G,OAAQ,EAAK3G,MAAM2G,OAAO9F,MAEzB,KAA5B,EAAKb,MAAMuN,cACXc,EAAGE,OAAO,eAAgB,EAAKvO,MAAMuN,cAI7C,IACI1L,IAAMC,KAAK,GAAIuM,GAAItM,MAAK,SAAAyM,GACpBvN,QAAQC,IAAIsN,GACZjH,OAAOC,SAAStC,KAAO,gBAE7B,MAAOxE,GACL+N,MAAM,yBACNlH,OAAOC,SAAStC,KAAO,e,EAI/BwJ,gBAAkB,SAAC1N,GACfC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKnBJ,YAAc,SAACC,GACXC,QAAQC,IAAIF,GACM,IAAdA,EACA,EAAKL,SAAS,CACVJ,OAAO,IAGX,EAAKI,SAAS,CACVQ,OAAO,K,EAKnBwN,OAAS,WACL1N,QAAQC,IAAI,qBAAuB,EAAKlB,MAAMwN,aAAe,KAC7D,IAAIoB,EAAc,uDAAyD,EAAK5O,MAAMwN,aACtFvM,QAAQC,IAAI,SAAW0N,EAAc,KAGrCC,MAAMD,EAAa,CACfE,OAAQ,MACRC,QAAS,CACL,OAAU,oCACV,eAAgB,mBAChB,cAAiB,6EAGpBhN,MAAK,SAACyM,GAAD,OAAS,EAAKQ,gBAAgBR,O,EAG5CQ,gBAAkB,SAAChN,GACS,MAApBA,EAASiN,QACTjN,EAASkN,OAAOnN,MAAK,SAAA4C,GACjB,EAAKhE,SAAS,CACV8M,QAAS9I,EAAK8I,QACdG,WAAYjJ,EAAK8I,QAAQ,GAAG0B,KAAKC,MACjCvB,WAAYlJ,EAAK8I,QAAQ,GAAG0B,KAAKC,MACjCtB,WAAYnJ,EAAK8I,QAAQ,GAAG0B,KAAKC,MACjCrB,WAAYpJ,EAAK8I,QAAQ,GAAG0B,KAAKC,Y,EAMjDC,0BAA4B,SAAC3O,GACP,KAAdA,EAAE4O,SACF,EAAKX,U,EAIbY,mBAAqB,SAACC,GAClBvO,QAAQC,IAAI,cAAgBsO,EAAW,KAEvC,EAAK7O,SAAS,CACV2M,aAAckC,EACd9B,UAAW8B,EACX9I,OAAQ,OACT,WACCzF,QAAQC,IAAI,kBAAoByB,KAAK3C,MAAMsN,aAAe,KAC1DrM,QAAQC,IAAIyB,KAAK3C,MAAM4N,YACvB3M,QAAQC,IAAIyB,KAAK3C,MAAM6N,YACvB5M,QAAQC,IAAIyB,KAAK3C,MAAM8N,YACvB7M,QAAQC,IAAIyB,KAAK3C,MAAM+N,YACvBpL,KAAK5B,YAAY,O,EAIzB0O,mBAAqB,SAACD,GAClBvO,QAAQC,IAAI,cAAgBsO,EAAW,KAEvC,EAAK7O,SAAS,CACV4M,aAAciC,EACd7B,UAAW6B,EACX7I,OAAQ,OACT,WACC1F,QAAQC,IAAI,kBAAoByB,KAAK3C,MAAMuN,aAAe,KAC1DtM,QAAQC,IAAIyB,KAAK3C,MAAM4N,YACvB3M,QAAQC,IAAIyB,KAAK3C,MAAM6N,YACvB5M,QAAQC,IAAIyB,KAAK3C,MAAM8N,YACvB7M,QAAQC,IAAIyB,KAAK3C,MAAM+N,YACvBpL,KAAK5B,YAAY,O,EAIzB2O,sBAAwB,SAAAhP,GACpBO,QAAQC,IAAI,WAAaR,EAAEE,OAAO+O,MAAM,IACxC,EAAKhP,SAAS,CACV+M,UAAWkC,IAAIC,gBAAgBnP,EAAEE,OAAO+O,MAAM,IAC9CjJ,OAAQhG,EAAEE,OAAO+O,MAAM,GACvBrC,aAAc,M,EAItBwC,sBAAwB,SAAApP,GACpBO,QAAQC,IAAI,UAAYR,EAAEE,OAAO+O,MAAM,IACvC,EAAKhP,SAAS,CACVgN,UAAWiC,IAAIC,gBAAgBnP,EAAEE,OAAO+O,MAAM,IAC9ChJ,OAAQjG,EAAEE,OAAO+O,MAAM,GACvBpC,aAAc,M,wEAIZ,IAAD,OACL,OACI,yBAAKnL,UAAU,UACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,UAAUE,QAAM,GAC5B,6BACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAClB,6BACA,kBAACC,EAAA,EAAD,CACIL,UAAU,gBACVM,MAAM,eACNc,QAAQ,WACR3C,KAAK,QACLC,MAAO6B,KAAK3C,MAAMwC,MAClBI,SAAU,SAAAlC,GAAC,OAAI,EAAKkC,SAASlC,MAEjC,6BACA,kBAAC+B,EAAA,EAAD,CACIL,UAAU,UACVM,MAAM,WACNc,QAAQ,WACR3C,KAAK,QACLC,MAAO6B,KAAK3C,MAAMwG,MAClB5D,SAAU,SAAAlC,GAAC,OAAI,EAAKkC,SAASlC,IAC7BoC,WAAY,CACRC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,2BAAOpC,KAAK,SAAS+B,SAAUD,KAAK+M,sBAAuBK,OAAO,UAAU3N,UAAU,YAAYiC,GAAG,iBAAiBf,KAAK,SAC3H,2BAAO0M,QAAQ,kBACX,kBAAC9M,EAAA,EAAD,CAASV,MAAM,gBACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,KAAD,SAIZ,kBAACH,EAAA,EAAD,CAASV,MAAM,8BACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,6BAA6BC,UAAU,OAAOK,QAASf,KAAK+L,gBAAgBzK,KAAKtB,KAAM,IAC1G,kBAAC,KAAD,QAGR,kBAACmB,EAAA,EAAD,CACIC,KAAMpB,KAAK3C,MAAMO,MACjByD,QAASrB,KAAK5B,YAAYkD,KAAKtB,KAAM,GACrCuB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,yCACtC,kBAACC,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CACI5B,KAAK,eACLC,MAAO6B,KAAK3C,MAAMwN,aAClB5K,SAAU,SAAAlC,GAAC,OAAI,EAAKkC,SAASlC,IAC7B2D,GAAG,iBAAiB3B,MAAM,YAC1BuN,UAAWtN,KAAK0M,4BACpB,kBAAC9L,EAAA,EAAD,CAAQG,QAASf,KAAKgM,OAAQlL,MAAM,WAApC,UACA,6BAAM,6BACN,kBAACyM,GAAA,EAAD,CAAU7L,GAAG,aACT,kBAAC8L,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK4M,mBAAmBtL,KAAKtB,KAAMA,KAAK3C,MAAM4N,YAAazG,IAAKxE,KAAK3C,MAAM4N,WAAYV,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK4M,mBAAmBtL,KAAKtB,KAAMA,KAAK3C,MAAM6N,YAAa1G,IAAKxE,KAAK3C,MAAM6N,WAAYX,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK4M,mBAAmBtL,KAAKtB,KAAMA,KAAK3C,MAAM8N,YAAa3G,IAAKxE,KAAK3C,MAAM8N,WAAYZ,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK4M,mBAAmBtL,KAAKtB,KAAMA,KAAK3C,MAAM+N,YAAa5G,IAAKxE,KAAK3C,MAAM+N,WAAYb,IAAI,oBAIrH,kBAAC3I,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK5B,YAAYkD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,eASxB,6BACA,yBAAKrB,UAAU,QAAQ+E,IAAKxE,KAAK3C,MAAM0N,UAAWR,IAAI,cACtD,6BACA,kBAACvJ,EAAA,EAAD,CAAYH,QAAQ,WAApB,MAGA,6BACA,6BACA,kBAACf,EAAA,EAAD,CACIL,UAAU,UACVM,MAAM,WACNc,QAAQ,WACR3C,KAAK,QACLC,MAAO6B,KAAK3C,MAAMyG,MAClB7D,SAAU,SAAAlC,GAAC,OAAI,EAAKkC,SAASlC,IAC7BoC,WAAY,CACRC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,2BAAOpC,KAAK,SAAS+B,SAAUD,KAAKmN,sBAAuBC,OAAO,UAAU3N,UAAU,YAAYiC,GAAG,iBAAiBf,KAAK,SAC3H,2BAAO0M,QAAQ,kBACX,kBAAC9M,EAAA,EAAD,CAASV,MAAM,gBACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,eAAeC,UAAU,QAC5C,kBAAC,KAAD,SAIZ,kBAACH,EAAA,EAAD,CAASV,MAAM,8BACX,kBAACW,EAAA,EAAD,CAAYC,aAAW,6BAA6BC,UAAU,OAAOK,QAASf,KAAK+L,gBAAgBzK,KAAKtB,KAAM,IAC1G,kBAAC,KAAD,QAGR,kBAACmB,EAAA,EAAD,CACIC,KAAMpB,KAAK3C,MAAMmB,MACjB6C,QAASrB,KAAK5B,YACdmD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,yCACtC,kBAACC,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CACI5B,KAAK,eACLC,MAAO6B,KAAK3C,MAAMwN,aAClB5K,SAAU,SAAAlC,GAAC,OAAI,EAAKkC,SAASlC,IAC7B2D,GAAG,iBAAiB3B,MAAM,YAC1BuN,UAAWtN,KAAK0M,4BACpB,kBAAC9L,EAAA,EAAD,CAAQG,QAASf,KAAKgM,OAAQlL,MAAM,WAApC,UACA,6BAAM,6BACN,kBAACyM,GAAA,EAAD,CAAU7L,GAAG,aACT,kBAAC8L,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK8M,mBAAmBxL,KAAKtB,KAAMA,KAAK3C,MAAM4N,YAAazG,IAAKxE,KAAK3C,MAAM4N,WAAYV,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK8M,mBAAmBxL,KAAKtB,KAAMA,KAAK3C,MAAM6N,YAAa1G,IAAKxE,KAAK3C,MAAM6N,WAAYX,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK8M,mBAAmBxL,KAAKtB,KAAMA,KAAK3C,MAAM8N,YAAa3G,IAAKxE,KAAK3C,MAAM8N,WAAYZ,IAAI,kBAE7G,kBAACiD,GAAA,EAAD,KACI,yBAAKzM,QAASf,KAAK8M,mBAAmBxL,KAAKtB,KAAMA,KAAK3C,MAAM+N,YAAa5G,IAAKxE,KAAK3C,MAAM+N,WAAYb,IAAI,oBAIrH,kBAAC3I,EAAA,EAAD,KACI,kBAAChB,EAAA,EAAD,CAAQG,QAASf,KAAK5B,YAAYkD,KAAKtB,KAAM,GAAIc,MAAM,WAAvD,eASxB,6BACA,yBAAKrB,UAAU,QAAQ+E,IAAKxE,KAAK3C,MAAM2N,UAAWT,IAAI,cACtD,6BAAM,6BACN,kBAAC3J,EAAA,EAAD,CAAQG,QAASf,KAAKqL,OAAQlN,MAAM,SAAS0C,QAAQ,YAAYC,MAAM,WAAvE,iB,GAnVce,cCGhCwB,GAAQoK,YAAe,CAC3BlI,QAAS,CACPmI,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cA4KGE,G,2MAtKb1Q,MAAQ,CACNyK,YAAY,G,EAGdkG,mBAAqB,WACnB,IACEC,IAAaC,IAAI,aAAcC,KAAKC,UAAU,EAAK/Q,MAAMyK,aACzD,MAAO/J,M,EAGXsQ,qBAAuB,WACrB,IACE,IAAIC,EAAiBH,KAAKI,MAAMN,IAAaO,IAAI,eACjD,EAAKxQ,SAAS,CAAE8J,WAAYwG,IAC5B,MAAOvQ,M,EAGXkE,iBAAmB,SAAC0E,GAClB,EAAK3I,SACH,CACE8J,WAAYnB,IAEd,WACE3G,KAAKgO,qBACL1P,QAAQC,IAAI,oBAAsByB,KAAK3C,MAAMyK,gB,EAKnD2G,0BAA4B,WAC1B,EAAKJ,wB,EAGPK,4BAA8B,WAC5B,EAAKV,sB,EAGPW,2BAA6B,WAC3B,EAAKX,sB,wEAGG,IAAD,OACP,OACE,kBAAC,IAAD,CAAkB3K,MAAOA,IACvB,kBAACuL,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,IAAD,KACE,6BACE,kBAACjH,GAAD,CACEE,WAAY9H,KAAK3C,MAAMyK,WACvB7F,iBAAkBjC,KAAKiC,mBAEzB,yBAAKxC,UAAU,UACb,yBAAKA,UAAU,cACZ,IACD,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEqP,KAAK,SACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,KAAD,CAAU5G,GAAG,UAEb,kBAAC,EAAD,CAAOe,iBAAkB,EAAKA,sBAIpC,kBAAC,KAAD,CACE6M,KAAK,UACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,KAAD,CAAU5G,GAAG,UAEb,kBAAC,EAAD,SAIN,kBAAC,KAAD,CACE4N,KAAK,QACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAACnC,GAAD,MAEA,kBAAC,KAAD,CAAUzE,GAAG,cAcnB,kBAAC,KAAD,CACE4N,KAAK,WACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU5G,GAAG,cAInB,kBAAC,KAAD,CACE4N,KAAK,WACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAACnC,GAAD,MAEA,kBAAC,KAAD,CAAUzE,GAAG,cAInB,kBAAC,KAAD,CACE4N,KAAK,YACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU5G,GAAG,cAInB,kBAAC,KAAD,CACE4N,KAAK,aACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU5G,GAAG,cAInB,kBAAC,KAAD,CACE4N,KAAK,cACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU5G,GAAG,cAInB,kBAAC,KAAD,CACE4N,KAAK,IACLC,OAAQ,SAACzP,GAAD,OACN,EAAKjC,MAAMyK,WACT,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAU5G,GAAG,gBAKhB,KACF,Y,GA9JHW,aC3BEqG,QACW,cAA7BtD,OAAOC,SAASmK,UAEe,UAA7BpK,OAAOC,SAASmK,UAEhBpK,OAAOC,SAASmK,SAASC,MACvB,2DCZNC,IAASH,OAAO,kBAAC,GAAD,MAASxD,SAASC,eAAe,SD2H3C,kBAAmB2D,WACrBA,UAAUC,cAAcC,MAAMjQ,MAAK,SAAAkQ,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.427b17d8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport './styles.css';\r\n\r\n\r\nexport default class Signup extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    usernameCheck:[],\r\n    usernameError:false,\r\n    open1: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // changeUser = e => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value\r\n  //   });\r\n  //   if(e.target.value.length===0){\r\n  //     this.setState({usernameError:false});\r\n  //   }\r\n  //   else if(e.target.value.length>0 && e.target.value.length<5){\r\n  //     this.setState({usernameError:true});\r\n  //   }\r\n  //   else{\r\n  //     axios.post('https://thisorthat-260419.appspot.com/me', {\r\n  //         username: e.target.value\r\n  //     })\r\n  //     .then(response => {\r\n  //         this.setState({usernameCheck:response.data});\r\n  //         if(this.state.usernameCheck.length===1){\r\n  //           this.setState({usernameError:true});\r\n  //         }else{\r\n  //           this.setState({usernameError:false});\r\n  //         }\r\n  //     })\r\n  //   }\r\n    \r\n  // };\r\n\r\n  handleClose = (openIndex) => {\r\n    console.log(openIndex);\r\n    if (openIndex === 1) {\r\n        this.setState({\r\n            open1: false\r\n        })\r\n    } else {\r\n        this.setState({\r\n            open2: false\r\n        })\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    var alphanumeric = /^[0-9a-zA-Z]+$/;\r\n    var number= /\\d/;\r\n    var lowercasePassword= this.state.password.toLowerCase();\r\n    var alertString=\"\";\r\n    if( this.state.userName=== \"\" || this.state.email=== \"\" || this.state.password=== \"\" || this.state.confirmPassword=== \"\"){\r\n      alertString+=\"You must complete all fields\";\r\n    }\r\n    else{\r\n      if(this.state.userName.length < 5){\r\n        alertString+=\"Username must be at least five(5) characters\\n\";\r\n      }\r\n      if((alphanumeric.test(this.state.userName)===false) || (alphanumeric.test(this.state.password)===false)){\r\n        alertString+=\"Username and password fields can only contain alphanumeric characters !\\n\";\r\n      }\r\n      if(this.state.password.length < 7){\r\n        alertString+=\"Password must be at least seven(7) characters!\\n\";\r\n      }\r\n      if (this.state.password !==  this.state.confirmPassword ){\r\n        alertString+=\"Passwords do not match!\\n\";\r\n      }\r\n      if(lowercasePassword.localeCompare(this.state.password)===0){\r\n        alertString+=\"Password must contain an Uppercase character!\\n\";\r\n      }\r\n      if(number.test(this.state.password)===false){\r\n        alertString+=\"Password must contain a number!\\n\";\r\n      }\r\n    }\r\n    if(alertString===\"\" && (this.state.usernameError===false)){\r\n        axios.post('https://thisorthat-260419.appspot.com/signup/email', {\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          name: this.state.userName\r\n        })\r\n        .then(response => {\r\n          this.props.history.push(\"/feed\"); \r\n        })\r\n    }else{\r\n      this.setState({errorMessage:alertString});\r\n      this.setState({open1:true});\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"signupPage\" >\r\n          <Card className=\"signupCard\" raised>\r\n            <form className=\"signup\">\r\n              <CardHeader \r\n                title=\"Signup\"\r\n              />\r\n              <br/>\r\n              <TextField\r\n                name=\"userName\"\r\n                label=\"Full-Name\"\r\n                className=\"usernamefield\"\r\n                value={this.state.userName}\r\n                onChange={e => this.change(e)}\r\n                error={this.state.usernameError}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Fullname: Must consist of only letters\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <br />\r\n              <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={this.state.email}\r\n                onChange={e => this.change(e)}\r\n                type=\"email\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Must me a valid email address\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={this.state.password}\r\n                onChange={e => this.change(e)}\r\n                type=\"password\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Password: At least 7 alphanumeric characters, an\r\n                Uppercase character and a Number\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              /><br />\r\n              <TextField\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                value={this.state.confirmPassword}\r\n                onChange={e => this.change(e)}\r\n                type=\"password\"\r\n                className=\"requirements\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                      <InputAdornment position='end' >\r\n                              <Tooltip title=\"Password entered must match the previously entered password\">\r\n                                  <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                      <HelpOutlineOutlinedIcon />\r\n                                  </IconButton>\r\n                              </Tooltip>\r\n                      </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <br/>\r\n              <br/>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={e => this.onSubmit(e)} >\r\n                Submit\r\n              </Button>  \r\n              <br/>\r\n              <Typography variant=\"overline\" className=\"\" color=\"textSecondary\" gutterBottom>\r\n                  Already have an Account?&nbsp;\r\n              </Typography>\r\n              <Link to=\"/login\">Log In</Link>\r\n            </form>\r\n          </Card>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open1}\r\n          onClose={this.handleClose.bind(this, 1)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"\"}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.errorMessage}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport \"./styles.css\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    validated: 0,\r\n    open1: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleClose = (openIndex) => {\r\n    console.log(openIndex);\r\n    if (openIndex === 1) {\r\n        this.setState({\r\n            open1: false\r\n        })\r\n    } else {\r\n        this.setState({\r\n            open2: false\r\n        })\r\n    }\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    var alertString=\"\";\r\n    if (this.state.email === \"\" || this.state.password === \"\") {\r\n      alertString+=\"You must complete all fields\";\r\n      this.setState({errorMessage:alertString});\r\n      this.setState({open1:true});\r\n    } else {\r\n      axios.post('https://thisorthat-260419.appspot.com/login/email', {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n      })\r\n      .then(response => {\r\n        this.setState({ validated: response.data})\r\n        if(this.state.validated===1){\r\n          // this.props.history.push(\"/<homepage>\"); add in path to home page here\r\n        }else{\r\n          alertString+=\"Invalid Credentials\";\r\n          this.setState({errorMessage:alertString});\r\n          this.setState({open1:true});\r\n          this.setState({ password: \"\"});\r\n        }\r\n      })\r\n\r\n      this.props.changeIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          <Card className=\"loginCard\" raised>\r\n            <form className=\"login\">\r\n              <CardHeader title=\"Login\" />\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  className=\"loginTextField\"\r\n                  value={this.state.email}\r\n                  fullWidth={true}\r\n                  onChange={(e) => this.change(e)}\r\n                />\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  value={this.state.password}\r\n                  fullWidth={true}\r\n                  onChange={(e) => this.change(e)}\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"loginButtonWrapper\"\r\n                    onClick={(e) => this.onSubmit(e)}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  <Button\r\n                    className=\"facebookLoginButton\"\r\n                    href=\"https://thisorthat-260419.appspot.com/login/facebook/init?redirect=http://localhost:3000/question\"\r\n                    startIcon={<FacebookIcon />}\r\n                  >\r\n                    Log in with Facebook\r\n                  </Button>\r\n                  <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    className=\"signupMessage\"\r\n                  >\r\n                    <Typography color=\"textSecondary\" className=\"signupText\">\r\n                      Don't have an account?\r\n                    </Typography>\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open1}\r\n          onClose={this.handleClose.bind(this, 1)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"\"}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.errorMessage}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './join.css';\r\n\r\nexport default class Question extends Component {\r\n\r\n    state={\r\n        tot:\"\"\r\n    }\r\n\r\n    onChange= e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    submit= e => {\r\n        window.location.href = \"/question\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='holder'>\r\n                <Card className=\"join\" raised>\r\n                    <CardHeader title=\"Join a ToT\" />\r\n                    <br/> \r\n                    <TextField \r\n                        className=\"totCode\" \r\n                        label=\"Enter Code\" \r\n                        variant=\"outlined\" \r\n                        name='tot'\r\n                        value={this.state.tot}\r\n                        onChange={e => this.onChange(e)}\r\n                    />\r\n                    <br/>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={e => this.submit(e)}>\r\n                        Submit\r\n                    </Button>\r\n                </Card> \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport \"./profileToT.css\";\r\n\r\nimport Image1 from \"../../Assets/pizza.jpg\";\r\nimport Image2 from \"../../Assets/ice-cream.jpg\";\r\n\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten('#a6a6a6', 0.5),\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: '#22ba00',\r\n  },\r\n})(LinearProgress);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction CustomizedProgressBars({ percent }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant=\"determinate\"\r\n        color=\"secondary\"\r\n        value={percent}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class ProfileToT extends Component {\r\n  state = {\r\n    title: \"\",\r\n    text1: \"Pizza\",\r\n    text2: \"Ice-Cream\",\r\n    image1: null,\r\n    image2: null,\r\n\r\n    option1Votes: 8,\r\n    option2Votes: 5,\r\n    totalVotes: 13\r\n  }\r\n\r\n\r\n  render() {\r\n    var percentage1 = (100 * (this.state.option1Votes / this.state.totalVotes)).toFixed(2);\r\n    var percentage2 = (100 * (1 - this.state.option1Votes / this.state.totalVotes)).toFixed(2);\r\n    return (\r\n      <div className='holder'>\r\n        <Card className=\"totInProfile\" raised>\r\n          <div>\r\n            <CardHeader title=\"What is Better for a Breakup\" />\r\n            <br />\r\n            <br />\r\n            <div classname=\"parts\">\r\n              <div className=\"part1\">\r\n                <img className=\"image\" src={Image1}/>\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {this.state.text1}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CustomizedProgressBars percent={percentage1} />\r\n                <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\r\n                  {percentage1 + \"%\"}\r\n                </Typography>\r\n              </div>\r\n              <div className=\"part2\">\r\n                <img className=\"image\" src={Image2} />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {this.state.text2}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CustomizedProgressBars percent={percentage2} />\r\n                <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\r\n                  {percentage2 + \"%\"}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\r\n              {this.state.totalVotes + \" votes in total.\"}\r\n            </Typography>\r\n            <br /><br />\r\n            <Button onClick={function () {window.location.href = \"/question\"}} variant=\"contained\" color=\"primary\" >\r\n              Next ToT\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ProfileToT from '../ProfileToT'\r\nimport './profile.css';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={2}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [profileToTs, setProfileToTs]= useState([]);\r\n    const [savedToTs, setSavedToTs]= useState([]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToTs();\r\n    }, []);\r\n\r\n    const getToTs = async () => {\r\n        //might need checks for empty responses\r\n        const fetchProfileToTs = async () => {\r\n            const result = await axios.post(\r\n              '', {}\r\n            );\r\n            setProfileToTs(result.data);\r\n        };\r\n        const fetchSavedToTs = async () => {\r\n            const result = await axios.post(\r\n              '', {}\r\n            );\r\n            setSavedToTs(result.data);\r\n        };\r\n        fetchProfileToTs();\r\n        fetchSavedToTs();\r\n    };\r\n\r\n    return (\r\n        <div className=\"profilePage\">\r\n            <Card className=\"profileCard\">\r\n                <CardHeader title=\"Profile\" /> \r\n            </Card>\r\n            <br/>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                    >\r\n                    <Tab label=\"Your ToTs\" {...a11yProps(0)} />\r\n                    <Tab label=\"Saved\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                >\r\n                    <TabPanel value={value} index={0} dir={theme.direction}>\r\n                        <ul className=\"listOfMyToTs\">\r\n                            {/* {profileToTs.map(info => (\r\n                                <Card className=\"myToTs\" raised>\r\n                                    <ProfileToT\r\n                                        title={info.Title}\r\n                                        votes={info.Votes}\r\n                                    />\r\n                                </Card>\r\n                            ))} */}\r\n                            <ProfileToT/>\r\n                        </ul>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction}>\r\n                        <ul className=\"listOfSavedToTs\">\r\n                            {/* {savedToTs.map(info => (\r\n                                <Card className=\"savedToTs\" raised>\r\n                                    <ProfileToT\r\n                                        title={info.Title}\r\n                                        votes={info.Votes}\r\n                                    />\r\n                                </Card>\r\n                            ))} */}\r\n                            <ProfileToT/>\r\n                        </ul>\r\n                    </TabPanel>\r\n                </SwipeableViews>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport './ToTSubmit.css';\r\nimport { CardContent } from '@material-ui/core';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nexport default class Question extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='holder'>\r\n                <Card className=\"submit\" raised>\r\n                    <CardHeader \r\n                        avatar={<CheckCircleOutlineRoundedIcon />}\r\n                        title=\"ToT Submitted\" \r\n                    /> \r\n                    <CardContent>\r\n                        After a short review, we'll post your ToT publicly.\r\n                    </CardContent>\r\n                </Card> \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport \"./header.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function Header({ isLoggedIn, changeIsLoggedIn }) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = event => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    ></Menu>\r\n  );\r\n\r\n  let fullNavBar;\r\n\r\n  if (isLoggedIn === true) {\r\n    fullNavBar = (\r\n      <React.Fragment>\r\n        <Button\r\n          onClick={function() {\r\n            window.location.href = \"/question\";\r\n          }}\r\n        >\r\n          Feed\r\n        </Button>\r\n        {/* <Button\r\n          onClick={function() {\r\n            window.location.href = \"/join\";\r\n          }}\r\n        >\r\n          Join\r\n        </Button> */}\r\n        <Button\r\n          onClick={function() {\r\n            window.location.href = \"/creator\";\r\n          }}\r\n        >\r\n          Create\r\n        </Button>\r\n        <div className={classes.grow} />\r\n        <div className={classes.sectionDesktop}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"primary-search-account-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.sectionMobile}>\r\n          <IconButton\r\n            aria-label=\"show more\"\r\n            aria-controls={mobileMenuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMobileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <MoreIcon />\r\n          </IconButton>\r\n          <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={function() {handleClose(); window.location.href = \"/profile\";}}>My profile</MenuItem>\r\n                <MenuItem onClick={function() {handleClose(); changeIsLoggedIn(false);}}>Log out</MenuItem>\r\n              </Menu>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar className=\"AppBar\" position=\"static\">\r\n        <Toolbar disableGutters={true} variant=\"dense\">\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            This or That\r\n          </Typography>\r\n          {fullNavBar}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\r\nimport ShareSharpIconButton from \"@material-ui/icons/ShareSharp\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedValue: null,\r\n      open: false,\r\n      setOpen: false\r\n    };\r\n    this.share = this.share.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  save = (e) => {\r\n    this.setState({ saved: true });\r\n    console.log(\"Save\");\r\n  };\r\n\r\n  unsave = (e) => {\r\n    this.setState({ saved: false });\r\n    console.log(\"Unsave\");\r\n  };\r\n\r\n  share = (e) => {\r\n    this.setState({ open: true });\r\n    console.log(\"Share\");\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    // this.setState({ setSelectedValue: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"options\">\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <IconButton className=\"iconButton\">\r\n              {this.state.saved ? (\r\n                <TurnedInIcon onClick={(e) => this.unsave(e)} />\r\n              ) : (\r\n                <TurnedInNotIcon onClick={(e) => this.save(e)} />\r\n              )}\r\n            </IconButton>\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            <Typography>Save</Typography>\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <IconButton className=\"iconButton\" onClick={(e) => this.share(e)} >\r\n              <ShareSharpIconButton />\r\n            </IconButton>\r\n            <Dialog open={this.state.open} onClose={this.handleClose}>\r\n              <DialogTitle>{\"Share This or That\"}</DialogTitle>\r\n              <DialogContent>\r\n                <IconButton className=\"facebookIconButton\">\r\n                  <FacebookIcon onClick={(e) => this.share(e)} />\r\n                </IconButton>\r\n              </DialogContent>\r\n              {/* <DialogActions>\r\n                <Button autoFocus onClick={this.handleClose} color=\"primary\">\r\n                  Disagree\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                  Agree\r\n                </Button>\r\n              </DialogActions> */}\r\n            </Dialog>\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            <Typography>Share</Typography>\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Image1 from \"../../Assets/pizza.jpg\";\r\nimport Image2 from \"../../Assets/ice-cream.jpg\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class ImageAndTextQuestion extends Component {\r\n  state = {\r\n    choice1: 0,\r\n    choice2: 0,\r\n    votes: 0,\r\n    seconds: 10\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n      const { seconds } = this.state;\r\n      if (seconds > 0) {\r\n        this.setState(({ seconds }) => ({\r\n          seconds: seconds - 1\r\n        }));\r\n      }\r\n      if (seconds === 0) {\r\n        clearInterval(this.myInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.myInterval);\r\n  }\r\n\r\n  incrementChoice1 = (e) => {\r\n    this.setState({\r\n      choice1: this.state.choice1 + 1,\r\n      votes: this.state.votes + 1\r\n    }, function() {\r\n      console.log(\"Click1\");\r\n      window.location.href = \"/profiletot\";\r\n    });\r\n  };\r\n\r\n  incrementChoice2 = (e) => {\r\n    this.setState({\r\n      choice2: this.state.choice2 + 1,\r\n      votes: this.state.votes + 1\r\n    }, function() {\r\n      console.log(\"Click2\");\r\n      window.location.href = \"/profiletot\";\r\n    });\r\n  };\r\n\r\n  save = (e) => {\r\n    console.log(\"Save\");\r\n  };\r\n\r\n  share = (e) => {\r\n    console.log(\"Share\");\r\n  };\r\n\r\n  render() {\r\n    //const { title, option1, option2} = this.props;\r\n    return (\r\n      <div className=\"question\">\r\n        <Card className=\"card imageAndTextCard\">\r\n          <CardHeader title=\"What is Better for a Breakup?\" />\r\n          <div className=\"row\"> </div> <br />\r\n          <div className=\"options\">\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n              <Grid item className=\"cardContainerLeft\">\r\n                <img\r\n                  className=\"image\"\r\n                  src={Image1}\r\n                  onClick={(e) => this.incrementChoice1(e)}\r\n                  alt=\"image1\"\r\n                />{\" \"}\r\n                <Typography className=\"cardCaptionText\"> Pizza </Typography>{\" \"}\r\n              </Grid>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n              <Grid item className=\"cardContainer\">\r\n                <img\r\n                  className=\"image\"\r\n                  src={Image2}\r\n                  onClick={(e) => this.incrementChoice2(e)}\r\n                  alt=\"image2\"\r\n                />{\" \"}\r\n                <Typography className=\"cardCaptionText\"> Ice Cream </Typography>{\" \"}\r\n              </Grid>{\" \"}\r\n            </Grid>{\" \"}\r\n          </div>{\" \"}\r\n          <Typography variant=\"caption\"> 12,000 votes </Typography>{\" \"}\r\n        </Card>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Options from \"./options\";\r\nimport ImageAndTextQuestion from \"./imageAndText\";\r\n// import ImageQuestion from \"./image\";\r\n// import TextQuestion from \"./text\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Question extends Component {\r\n  state = {\r\n    choice1: 0,\r\n    choice2: 0,\r\n    votes: 0,\r\n    seconds: 10,\r\n    group: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n      const { seconds } = this.state;\r\n      if (seconds > 0) {\r\n        this.setState(({ seconds }) => ({\r\n          seconds: seconds - 1\r\n        }));\r\n      }\r\n      if (seconds === 0) {\r\n        clearInterval(this.myInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.myInterval);\r\n  }\r\n\r\n  render() {\r\n    //const { title, option1, option2} = this.props;\r\n    if (this.state.group === false) {\r\n      return (\r\n        <div className=\"question\">\r\n          <ImageAndTextQuestion /> {/* <ImageQuestion /> */}{\" \"}\r\n          {/* <TextQuestion /> */} <br /> <br />\r\n          <div className=\"timer\">\r\n            <Typography>\r\n              {this.state.seconds}\r\n              {/* {this.state.votes} */}{\" \"}\r\n            </Typography>{\" \"}\r\n          </div>{\" \"}\r\n          <br />\r\n          <Options />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"question\">\r\n            <ImageAndTextQuestion /> {/* <ImageQuestion /> */}{\" \"}\r\n            {/* <TextQuestion /> */} <br /> <br />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              className=\"timer\"\r\n            >\r\n              <Grid item>\r\n                <Typography>\r\n                  {this.state.seconds}\r\n                  {/* {this.state.votes} */}{\" \"}\r\n                </Typography>{\" \"}\r\n              </Grid>\r\n              <Grid item className=\"circularProgressWrapper\">\r\n                <CircularProgress size={36} className=\"circularProgress\" />\r\n              </Grid>\r\n            </Grid>{\" \"}\r\n            <br />\r\n            <Options />\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport './creator.css';\r\n\r\nexport default class Question extends Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        text1: \"\",\r\n        text2: \"\",\r\n        unsplashUrl1: \"\",\r\n        unsplashUrl2: \"\",\r\n        image1: null,\r\n        image2: null,\r\n\r\n        searchString: \"\",\r\n        results: [],\r\n        image1Url: \"\",\r\n        image2Url: \"\",\r\n        urlOption1: \"https://images.unsplash.com/photo-1560363199-a1264d4ea5fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1534&q=80\",\r\n        urlOption2: \"https://images.unsplash.com/photo-1570871303513-6faf999850fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=375&q=80\",\r\n        urlOption3: \"https://images.unsplash.com/photo-1572324755260-ec8c3e7fae29?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=237&q=80\",\r\n        urlOption4: \"https://images.unsplash.com/photo-1518823526-0df532eb95a8?ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80\",\r\n\r\n        open1: false,\r\n        open2: false\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    submit = e => {\r\n        console.log(\"right before\");\r\n        console.log(this.state.image1Name);\r\n        if (this.state.text1 !== this.state.image1Name)\r\n            document.getElementById(\"image1Uploader\").value = \"\";\r\n        if (this.state.text2 !== this.state.image2Name)\r\n            document.getElementById(\"image2Uploader\").value = \"\";\r\n\r\n        const fd = new FormData();\r\n        fd.append('title', this.state.title);\r\n        fd.append('text1', this.state.text1);\r\n        fd.append('text2', this.state.text2);\r\n        if (this.state.image1 !== null) {\r\n            fd.append('image1', this.state.image1, this.state.image1.name);\r\n        } else {\r\n            if (this.state.unsplashUrl1 !== \"\") {\r\n                fd.append('unsplashUrl1', this.state.unsplashUrl1);\r\n            }\r\n        }\r\n\r\n        if (this.state.image2 !== null) {\r\n            fd.append('image2', this.state.image2, this.state.image2.name);\r\n        } else {\r\n            if (this.state.unsplashUrl2 !== \"\") {\r\n                fd.append('unsplashUrl2', this.state.unsplashUrl2);\r\n            }\r\n        }\r\n\r\n        try {\r\n            axios.post('', fd).then(res => {\r\n                console.log(res);\r\n                window.location.href = '/totsubmit';\r\n            });\r\n        } catch (e) {\r\n            alert(\"Something went wrong!\");\r\n            window.location.href = '/totsubmit';\r\n        }\r\n    }\r\n\r\n    handleClickOpen = (openIndex) => {\r\n        console.log(openIndex);\r\n        if (openIndex === 1) {\r\n            this.setState({\r\n                open1: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                open2: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose = (openIndex) => {\r\n        console.log(openIndex);\r\n        if (openIndex === 1) {\r\n            this.setState({\r\n                open1: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                open2: false\r\n            })\r\n        }\r\n    }\r\n\r\n    search = () => {\r\n        console.log(\"you searched for >\" + this.state.searchString + \"<\");\r\n        var fetchString = 'https://api.unsplash.com/search/photos?page=1&query=' + this.state.searchString;\r\n        console.log(\"url: >\" + fetchString + \"<\");\r\n\r\n\r\n        fetch(fetchString, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer 8b227e84043e03edfc04b0314134dd779c95415f5ca8a8564fb3a9f23174587c'\r\n            }\r\n        })\r\n            .then((res) => this.processResponse(res));\r\n    }\r\n\r\n    processResponse = (response) => {\r\n        if (response.status === 200) {\r\n            response.json().then(data => {\r\n                this.setState({\r\n                    results: data.results,\r\n                    urlOption1: data.results[0].urls.small,\r\n                    urlOption2: data.results[1].urls.small,\r\n                    urlOption3: data.results[2].urls.small,\r\n                    urlOption4: data.results[3].urls.small,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    searchTextFieldKeyPressed = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    selectUnsplashUrl1 = (urlToSet) => {\r\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\r\n\r\n        this.setState({\r\n            unsplashUrl1: urlToSet,\r\n            image1Url: urlToSet,\r\n            image1: null\r\n        }, function () {\r\n            console.log(\"unsplashUrl1: >\" + this.state.unsplashUrl1 + \"<\")\r\n            console.log(this.state.urlOption1);\r\n            console.log(this.state.urlOption2);\r\n            console.log(this.state.urlOption3);\r\n            console.log(this.state.urlOption4);\r\n            this.handleClose(1);\r\n        });\r\n    }\r\n\r\n    selectUnsplashUrl2 = (urlToSet) => {\r\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\r\n\r\n        this.setState({\r\n            unsplashUrl2: urlToSet,\r\n            image2Url: urlToSet,\r\n            image2: null\r\n        }, function () {\r\n            console.log(\"unsplashUrl2: >\" + this.state.unsplashUrl2 + \"<\")\r\n            console.log(this.state.urlOption1);\r\n            console.log(this.state.urlOption2);\r\n            console.log(this.state.urlOption3);\r\n            console.log(this.state.urlOption4);\r\n            this.handleClose(2);\r\n        });\r\n    }\r\n\r\n    image1SelectedHandler = e => {\r\n        console.log(\"image1: \" + e.target.files[0]);\r\n        this.setState({\r\n            image1Url: URL.createObjectURL(e.target.files[0]),\r\n            image1: e.target.files[0],\r\n            unsplashUrl1: \"\"\r\n        });\r\n    }\r\n\r\n    image2SelectedHandler = e => {\r\n        console.log(\"image2:\" + e.target.files[0]);\r\n        this.setState({\r\n            image2Url: URL.createObjectURL(e.target.files[0]),\r\n            image2: e.target.files[0],\r\n            unsplashUrl2: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='holder'>\r\n                <Card className=\"creator\" raised>\r\n                    <div>\r\n                        <CardHeader title=\"Create a ToT\" />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"questionTitle\"\r\n                            label=\"This or That\"\r\n                            variant=\"outlined\"\r\n                            name='title'\r\n                            value={this.state.title}\r\n                            onChange={e => this.onChange(e)}\r\n                        />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"option1\"\r\n                            label=\"Option 1\"\r\n                            variant=\"outlined\"\r\n                            name='text1'\r\n                            value={this.state.text1}\r\n                            onChange={e => this.onChange(e)}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position='end' >\r\n                                        <input name=\"image1\" onChange={this.image1SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image1Uploader\" type=\"file\" />\r\n                                        <label htmlFor=\"image1Uploader\">\r\n                                            <Tooltip title=\"Upload image\">\r\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                                    <ImageSearchIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                        <Tooltip title=\"Select image from Unsplash\">\r\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 1)}>\r\n                                                <PublicIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Dialog\r\n                                            open={this.state.open1}\r\n                                            onClose={this.handleClose.bind(this, 1)}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"This: Search for an image on Unsplash\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    name=\"searchString\"\r\n                                                    value={this.state.searchString}\r\n                                                    onChange={e => this.onChange(e)}\r\n                                                    id=\"standard-basic\" label=\"Type here\"\r\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\r\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\r\n                                                <br /><br />\r\n                                                <GridList id=\"gridList1\">\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\r\n                                                    </GridListTile>\r\n                                                </GridList>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\r\n                                                    Close\r\n                                                </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <br />\r\n                        <img className=\"image\" src={this.state.image1Url} alt=\"Preview 1\" />\r\n                        <br />\r\n                        <Typography variant=\"caption\">\r\n                            or\r\n                        </Typography>\r\n                        <br />\r\n                        <br />\r\n                        <TextField\r\n                            className=\"option2\"\r\n                            label=\"Option 2\"\r\n                            variant=\"outlined\"\r\n                            name='text2'\r\n                            value={this.state.text2}\r\n                            onChange={e => this.onChange(e)}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position='end' >\r\n                                        <input name=\"image2\" onChange={this.image2SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image2Uploader\" type=\"file\" />\r\n                                        <label htmlFor=\"image2Uploader\">\r\n                                            <Tooltip title=\"Upload image\">\r\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\r\n                                                    <ImageSearchIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                        <Tooltip title=\"Select image from Unsplash\">\r\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 2)}>\r\n                                                <PublicIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Dialog\r\n                                            open={this.state.open2}\r\n                                            onClose={this.handleClose}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"That: Search for an image on Unsplash\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    name=\"searchString\"\r\n                                                    value={this.state.searchString}\r\n                                                    onChange={e => this.onChange(e)}\r\n                                                    id=\"standard-basic\" label=\"Type here\"\r\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\r\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\r\n                                                <br /><br />\r\n                                                <GridList id=\"gridList2\">\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\r\n                                                    </GridListTile>\r\n                                                    <GridListTile>\r\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\r\n                                                    </GridListTile>\r\n                                                </GridList>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose.bind(this, 2)} color=\"primary\">\r\n                                                    Close\r\n                                                </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <br />\r\n                        <img className=\"image\" src={this.state.image2Url} alt=\"Preview 2\" />\r\n                        <br /><br />\r\n                        <Button onClick={this.submit} value=\"Submit\" variant=\"contained\" color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\nimport localStorage from \"local-storage\";\r\n// import QuestionWrapper from \"./Components/Pages/QuestionWrapper\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Login from \"./Components/Login\";\r\nimport Join from \"./Components/Join\";\r\nimport Profile from \"./Components/Profile\";\r\nimport ProfileToT from \"./Components/ProfileToT\";\r\nimport ToTSubmit from \"./Components/ToTSubmit\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Question from \"./Components/Question\";\r\nimport Creator from \"./Components/Creator\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1da1f2\",\r\n      light: \"#E8EEF8\",\r\n      dark: \"#0c90e1\"\r\n    },\r\n    secondary: {\r\n      main: \"#657786\",\r\n      light: \"#E8EEF8\",\r\n      dark: \"#2653A6\"\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoggedIn: false\r\n  };\r\n\r\n  saveToLocalStorage = () => {\r\n    try {\r\n      localStorage.set(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\r\n    } catch (e) {}\r\n  };\r\n\r\n  loadFromLocalStorage = () => {\r\n    try {\r\n      var isLoggedInCopy = JSON.parse(localStorage.get(\"isLoggedIn\"));\r\n      this.setState({ isLoggedIn: isLoggedInCopy });\r\n    } catch (e) {}\r\n  };\r\n\r\n  changeIsLoggedIn = (newValue) => {\r\n    this.setState(\r\n      {\r\n        isLoggedIn: newValue\r\n      },\r\n      function() {\r\n        this.saveToLocalStorage();\r\n        console.log(\"This got called: \" + this.state.isLoggedIn);\r\n      }\r\n    );\r\n  };\r\n\r\n  UNSAFE_componentWillMount = () => {\r\n    this.loadFromLocalStorage();\r\n  };\r\n\r\n  UNSAFE_componentWillUnmount = () => {\r\n    this.saveToLocalStorage();\r\n  };\r\n\r\n  UNSAFE_componentWillUpdate = () => {\r\n    this.saveToLocalStorage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <StylesProvider injectFirst>\r\n          <Router>\r\n            <div>\r\n              <Header\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                changeIsLoggedIn={this.changeIsLoggedIn}\r\n              />\r\n              <div className=\"screen\">\r\n                <div className=\"background\">\r\n                  {\" \"}\r\n                  <Switch>\r\n                    <Route\r\n                      path=\"/login\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Redirect to=\"/feed\" />\r\n                        ) : (\r\n                          <Login changeIsLoggedIn={this.changeIsLoggedIn} />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/signup\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Redirect to=\"/feed\" />\r\n                        ) : (\r\n                          <Signup />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/feed\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Profile />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    {/* <Route\r\n                      path=\"/join\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Join />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    /> */}\r\n                    <Route\r\n                      path=\"/creator\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Creator />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/profile\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Profile />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/question\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Question />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/totsubmit\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <ToTSubmit />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"/profiletot\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <ProfileToT />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                    <Route\r\n                      path=\"*\"\r\n                      render={(props) =>\r\n                        this.state.isLoggedIn ? (\r\n                          <Question />\r\n                        ) : (\r\n                          <Redirect to=\"/login\" />\r\n                        )\r\n                      }\r\n                    />\r\n                  </Switch>\r\n                </div>{\" \"}\r\n              </div>{\" \"}\r\n            </div>\r\n          </Router>\r\n        </StylesProvider>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pizza.002d5951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ice-cream.611601d3.jpg\";"],"sourceRoot":""}