{"version":3,"sources":["Assets/pizza.jpg","Assets/ice-cream.jpg","Components/Signup/index.js","Components/Login/index.js","Components/Join/index.js","Components/ProfileToT/index.js","Components/Profile/index.js","Components/ToTSubmit/index.js","Components/Header/index.js","Components/Question/options.js","Components/Question/imageAndText.js","Components/Question/index.js","Components/Creator/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signup","state","userName","email","password","confirmPassword","usernameCheck","usernameError","change","e","setState","target","name","value","changeUser","length","onSubmit","preventDefault","alphanumeric","lowercasePassword","toLowerCase","alertString","test","localeCompare","window","location","href","alert","className","Card","raised","CardHeader","title","TextField","label","this","onChange","error","type","Tooltip","interactive","Button","variant","color","onClick","Typography","gutterBottom","to","Component","Login","validated","props","changeIsLoggedIn","facebookLogin","response","userID","console","log","Grid","container","direction","alignItems","firstName","fullWidth","appId","autLoad","fields","callback","render","renderProps","startIcon","justify","BorderLinearProgress","withStyles","root","height","backgroundColor","lighten","bar","borderRadius","LinearProgress","useStyles","makeStyles","theme","flexGrow","margin","spacing","CustomizedProgressBars","percent","classes","ProfileToT","text1","text2","image1","image2","option1Votes","option2Votes","totalVotes","percentage1","toFixed","percentage2","CardContent","component","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","palette","background","paper","width","Profile","useTheme","useState","setValue","profileToTs","setProfileToTs","savedToTs","setSavedToTs","useEffect","getToTs","a","async","fetchSavedToTs","axios","post","result","data","fetchProfileToTs","avatar","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","axis","onChangeIndex","dir","map","info","Title","votes","Votes","Question","grow","menuButton","marginRight","display","breakpoints","up","sectionDesktop","sectionMobile","Header","fullNavBar","isLoggedIn","React","anchorEl","setAnchorEl","open","Boolean","handleClose","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","Fragment","IconButton","aria-controls","aria-haspopup","currentTarget","MenuItem","Toolbar","disableGutters","noWrap","Options","save","saved","unsave","share","facebookShare","FB","ui","method","selectedValue","setOpen","bind","item","Dialog","DialogTitle","DialogContent","ImageAndTextQuestion","choice1","choice2","seconds","incrementChoice1","incrementChoice2","myInterval","setInterval","clearInterval","src","Image1","alt","Image2","group","CircularProgress","size","unsplashUrl1","unsplashUrl2","searchString","results","image1Url","image2Url","urlOption1","urlOption2","urlOption3","urlOption4","open1","open2","submit","image1Name","document","getElementById","image2Name","fd","FormData","append","then","res","handleClickOpen","openIndex","search","fetchString","fetch","headers","processResponse","status","json","urls","small","searchTextFieldKeyPressed","keyCode","selectUnsplashUrl1","urlToSet","selectUnsplashUrl2","image1SelectedHandler","files","URL","createObjectURL","image2SelectedHandler","InputProps","endAdornment","InputAdornment","accept","htmlFor","aria-describedby","onKeyDown","GridList","GridListTile","DialogActions","createMuiTheme","primary","main","light","dark","secondary","App","saveToLocalStorage","localStorage","set","JSON","stringify","loadFromLocalStorage","isLoggedInCopy","parse","get","UNSAFE_componentWillMount","UNSAFE_componentWillUnmount","UNSAFE_componentWillUpdate","StylesProvider","injectFirst","path","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.602fdec5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.002d5951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ice-cream.611601d3.jpg\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './styles.css';\n\n\nexport default class Signup extends Component {\n  state = {\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    usernameCheck:[],\n    usernameError:false,\n  };\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  changeUser = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    if(e.target.value.length===0){\n      this.setState({usernameError:false});\n    }\n    else if(e.target.value.length>0 && e.target.value.length<5){\n      this.setState({usernameError:true});\n    }\n    else{\n      // axios.post('', {\n      //     username: e.target.value\n      // })\n      // .then(response => {\n      //     this.setState({usernameCheck:response.data});\n      //     if(this.state.usernameCheck.length===1){\n      //       this.setState({usernameError:true});\n      //     }else{\n      //       this.setState({usernameError:false});\n      //     }\n      // })\n    }\n    \n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    var alphanumeric = /^[0-9a-zA-Z]+$/;\n    var number= /\\d/;\n    var lowercasePassword= this.state.password.toLowerCase();\n    var alertString=\"\";\n    if( this.state.userName=== \"\" || this.state.email=== \"\" || this.state.password=== \"\" || this.state.confirmPassword=== \"\"){\n      alertString+=\"You must complete all fields\";\n    }\n    else{\n      if(this.state.userName.length < 5){\n        alertString+=\"Username must be at least five(5) characters\\n\";\n      }\n      if((alphanumeric.test(this.state.userName)===false) || (alphanumeric.test(this.state.password)===false)){\n        alertString+=\"Username and password fields can only contain alphanumeric characters !\\n\";\n      }\n      if(this.state.password.length < 7){\n        alertString+=\"Password must be at least seven(7) characters!\\n\";\n      }\n      if (this.state.password !==  this.state.confirmPassword ){\n        alertString+=\"Passwords do not match!\\n\";\n      }\n      if(lowercasePassword.localeCompare(this.state.password)===0){\n        alertString+=\"Password must contain an Uppercase character!\\n\";\n      }\n      if(number.test(this.state.password)===false){\n        alertString+=\"Password must contain a number!\\n\";\n      }\n    }\n    if(alertString===\"\" && (this.state.usernameError===false)){\n      //  axios.post('', {\n      //     username: this.state.userName,\n      //     email: this.state.email,\n      //     passwd: this.state.password\n      //   })\n      //   .then(response => {\n      //     localStorage.setItem('user', this.state.userName);\n      //     // this.props.history.push(\"/<homepage>\"); add in path to home page here\n      //   })\n    }else{\n      if(this.state.usernameError===true){\n        alertString+=\"Username is already taken!\"\n      }\n      else {\n        window.location.href = \"/login\";\n      }\n      \n      alert(alertString);\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"signupPage\" >\n          <Card className=\"signupCard\" raised>\n            <form className=\"signup\">\n              <CardHeader \n                title=\"Signup\"\n              />\n              <TextField\n                name=\"userName\"\n                label=\"Username\"\n                className=\"usernamefield\"\n                value={this.state.userName}\n                onChange={e => this.changeUser(e)}\n                error={this.state.usernameError}\n              />\n              <br />\n              <TextField\n                name=\"email\"\n                label=\"Email\"\n                value={this.state.email}\n                onChange={e => this.change(e)}\n                type=\"email\"\n              /><br />\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                onChange={e => this.change(e)}\n                type=\"password\"\n              /><br />\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                value={this.state.confirmPassword}\n                onChange={e => this.change(e)}\n                type=\"password\"\n                className=\"requirements\"\n              />\n              <br/>\n              <br/>\n              <Tooltip className=\"userTip\" \n                title=\"Usernames: Must be unique and a minimum of 5 alphanumeric characters Passwords: At least 7 alphanumeric characters, an\n                Uppercase character and a Number.\" \n                interactive \n              >\n                <Button className=\"requirements\" >Requirements</Button>\n              </Tooltip>\n              <Button variant=\"contained\" color=\"primary\" onClick={e => this.onSubmit(e)} >\n                Submit\n              </Button>  \n              <br/>\n              <Typography variant=\"overline\" className=\"\" color=\"textSecondary\" gutterBottom>\n                  Already have an Account?\n              </Typography>\n              <Link to=\"/login\">Log In</Link>\n            </form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\n\nimport \"./styles.css\";\n\nexport default class Login extends Component {\n  state = {\n    userName: \"\",\n    password: \"\",\n    validated: 0\n  };\n\n  change = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.userName === \"\" || this.state.password === \"\") {\n      alert(\"You must complete all fields\");\n    } else {\n      // axios.post('', {\n      // username: this.state.userName,\n      // passwd: this.state.password\n      // })\n      // .then(response => {\n      //   this.setState({ validated: response.data})\n      //   if(this.state.validated===1){\n      //     localStorage.setItem('user',this.state.userName);\n      //     // this.props.history.push(\"/<homepage>\"); add in path to home page here\n      //   }else{\n      //     alert(\"Wrong Credentials\");\n      //     this.setState({ password: \"\"});\n      //   }\n      // })\n\n      this.props.changeIsLoggedIn(true);\n    }\n  };\n\n  facebookLogin = (response) => {\n    if(response.userID) {\n      this.props.changeIsLoggedIn(true);\n      console.log(\"Facebook login was successful!\");\n    } else {\n      console.log(\"Facebook login was unsucessful!\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <Card className=\"loginCard\" raised>\n            <form className=\"login\">\n              <CardHeader title=\"Login\" />\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <TextField\n                  name=\"userName\"\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  className=\"loginTextField\"\n                  value={this.state.firstName}\n                  fullWidth={true}\n                  onChange={(e) => this.change(e)}\n                />\n                <TextField\n                  name=\"password\"\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  value={this.state.password}\n                  fullWidth={true}\n                  onChange={(e) => this.change(e)}\n                  type=\"password\"\n                />\n              </Grid>\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"loginButtonWrapper\"\n                    onClick={(e) => this.onSubmit(e)}\n                  >\n                    Login\n                  </Button>\n                  <FacebookLogin\n                      appId=\"542050589716105\"\n                      autLoad\n                      fields=\"name,email,picture\"\n                      callback={this.facebookLogin}\n                      render={renderProps => (\n                        <Button onClick={renderProps.onClick} className=\"facebookLoginButton\" startIcon={<FacebookIcon />}>Log in with Facebook</Button>\n                      )}\n                  />\n                  <Grid\n                    container\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    className=\"signupMessage\"\n                  >\n                    <Typography color=\"textSecondary\" className=\"signupText\">\n                      Don't have an account?\n                    </Typography>\n                    <Link to=\"/signup\">Sign Up</Link>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport './join.css';\n\nexport default class Question extends Component {\n\n    state={\n        tot:\"\"\n    }\n\n    onChange= e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    submit= e => {\n        window.location.href = \"/question\";\n    }\n\n    render() {\n        return (\n            <div className='holder'>\n                <Card className=\"join\" raised>\n                    <CardHeader title=\"Join a ToT\" />\n                    <br/> \n                    <TextField \n                        className=\"totCode\" \n                        label=\"Enter Code\" \n                        variant=\"outlined\" \n                        name='tot'\n                        value={this.state.tot}\n                        onChange={e => this.onChange(e)}\n                    />\n                    <br/>\n                    <Button variant=\"contained\" color=\"primary\" onClick={e => this.submit(e)}>\n                        Submit\n                    </Button>\n                </Card> \n            </div>\n            \n        )\n    }\n}","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { Typography } from \"@material-ui/core\";\nimport CardContent from '@material-ui/core/CardContent';\nimport \"./profileToT.css\";\n\n\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 10,\n    backgroundColor: lighten('#a6a6a6', 0.5),\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#22ba00',\n  },\n})(LinearProgress);\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction CustomizedProgressBars({ percent }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <BorderLinearProgress\n        className={classes.margin}\n        variant=\"determinate\"\n        color=\"secondary\"\n        value={percent}\n      />\n    </div>\n  );\n}\n\nexport default class ProfileToT extends Component {\n  state = {\n    title: \"\",\n    text1: \"Option 1\",\n    text2: \"Option 2\",\n    image1: null,\n    image2: null,\n\n    option1Votes: 8,\n    option2Votes: 5,\n    totalVotes: 13\n  }\n\n\n  render() {\n    var percentage1 = (100 * (this.state.option1Votes / this.state.totalVotes)).toFixed(2);\n    var percentage2 = (100 * (1 - this.state.option1Votes / this.state.totalVotes)).toFixed(2);\n    return (\n      <div className='holder'>\n        <Card className=\"creator\" raised>\n          <div>\n            <CardHeader title=\"Results\" />\n            <br />\n            <br />\n            <div>\n              <div className=\"horizontalDiv\">\n                <img className=\"image\" />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {this.state.text1}\n                  </Typography>\n                </CardContent>\n                <CustomizedProgressBars percent={percentage1} />\n                <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\n                  {percentage1 + \"%\"}\n                </Typography>\n              </div>\n              <div className=\"horizontalDiv\">\n                <img className=\"image\" />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {this.state.text2}\n                  </Typography>\n                </CardContent>\n                <CustomizedProgressBars percent={percentage2} />\n                <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\n                  {percentage2 + \"%\"}\n                </Typography>\n              </div>\n            </div>\n            <Typography gutterBottom variant=\"subtitle2\" component=\"subtitle2\">\n              {this.state.totalVotes + \" votes in total.\"}\n            </Typography>\n            <br /><br />\n            <Button onClick={function () {window.location.href = \"/question\"}} variant=\"contained\" color=\"primary\" >\n              Next ToT\n            </Button>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ProfileToT from '../ProfileToT'\nimport './profile.css';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={2}>{children}</Box>}\n      </Typography>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\nexport default function Profile() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = useState(0);\n    const [profileToTs, setProfileToTs]= useState([]);\n    const [savedToTs, setSavedToTs]= useState([]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n    useEffect(() => {\n        getToTs();\n    }, []);\n\n    const getToTs = async () => {\n        //might need checks for empty responses\n        const fetchProfileToTs = async () => {\n            const result = await axios.post(\n              '', {}\n            );\n            setProfileToTs(result.data);\n        };\n        const fetchSavedToTs = async () => {\n            const result = await axios.post(\n              '', {}\n            );\n            setSavedToTs(result.data);\n        };\n        fetchProfileToTs();\n        fetchSavedToTs();\n    };\n\n    return (\n        <div className=\"profilePage\">\n            <Card className=\"profileCard\">\n                <CardHeader \n                    avatar={<AccountCircleIcon/>}\n                    title=\"Profile\"\n                />\n            </Card>\n            <br/>\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                    >\n                    <Tab label=\"Your ToTs\" {...a11yProps(0)} />\n                    <Tab label=\"Saved\" {...a11yProps(1)} />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                >\n                    <TabPanel value={value} index={0} dir={theme.direction}>\n                        <ul className=\"listOfMyToTs\">\n                            {profileToTs.map(info => (\n                                <Card className=\"myToTs\" raised>\n                                    <ProfileToT\n                                        title={info.Title}\n                                        votes={info.Votes}\n                                    />\n                                </Card>\n                            ))}\n                        </ul>\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        <ul className=\"listOfSavedToTs\">\n                            {savedToTs.map(info => (\n                                <Card className=\"savedToTs\" raised>\n                                    <ProfileToT\n                                        title={info.Title}\n                                        votes={info.Votes}\n                                    />\n                                </Card>\n                            ))}\n                        </ul>\n                    </TabPanel>\n                </SwipeableViews>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport './ToTSubmit.css';\nimport { CardContent } from '@material-ui/core';\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\nexport default class Question extends Component {\n\n    render() {\n        return (\n            <div className='holder'>\n                <Card className=\"submit\" raised>\n                    <CardHeader \n                        avatar={<CheckCircleOutlineRoundedIcon />}\n                        title=\"ToT Submitted\" \n                    /> \n                    <CardContent>\n                        After a short review, we'll post your ToT publicly.\n                    </CardContent>\n                </Card> \n            </div>\n            \n        )\n    }\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"./header.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"block\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n\nexport default function Header({ isLoggedIn, changeIsLoggedIn }) {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    ></Menu>\n  );\n\n  let fullNavBar;\n\n  if (isLoggedIn === true) {\n    fullNavBar = (\n      <React.Fragment>\n        <div className=\"headerButtonContainer\">\n          <Button\n            className=\"headerButton\"\n            onClick={function() {\n              window.location.href = \"/question\";\n            }}\n          >\n            Feed\n          </Button>\n          <Button\n            className=\"headerButton\"\n            onClick={function() {\n              window.location.href = \"/creator\";\n            }}\n          >\n            Create\n          </Button>\n        </div>\n        <div className={classes.grow} />\n        <div className={classes.sectionDesktop}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n          >\n            <AccountCircle />\n          </IconButton>\n        </div>\n        <div className={classes.sectionMobile}>\n          <IconButton\n            aria-label=\"show more\"\n            aria-controls={mobileMenuId}\n            aria-haspopup=\"true\"\n            onClick={handleMobileMenuOpen}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\"\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\"\n            }}\n            open={open}\n            onClose={handleClose}\n          >\n            <MenuItem\n              onClick={function() {\n                handleClose();\n                window.location.href = \"/profile\";\n              }}\n            >\n              My profile\n            </MenuItem>\n            <MenuItem\n              onClick={function() {\n                handleClose();\n                changeIsLoggedIn(false);\n              }}\n            >\n              Log out\n            </MenuItem>\n          </Menu>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.grow}>\n      <AppBar className=\"AppBar\" position=\"static\">\n        <Toolbar disableGutters={true} variant=\"dense\">\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            This or That\n          </Typography>\n          {fullNavBar}\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\nimport ShareSharpIconButton from \"@material-ui/icons/ShareSharp\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./styles.css\";\n\nexport default class Options extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValue: null,\n      open: false,\n      setOpen: false\n    };\n    this.share = this.share.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  save = (e) => {\n    this.setState({ saved: true });\n    console.log(\"Save\");\n  };\n\n  unsave = (e) => {\n    this.setState({ saved: false });\n    console.log(\"Unsave\");\n  };\n\n  share = (e) => {\n    this.setState({ open: true });\n    console.log(\"Share\");\n  };\n\n  facebookShare = (e) => {\n    window.FB.ui(\n      {\n        method: \"share\",\n        href: \"https://developers.facebook.com/docs/\"\n      },\n      function(response) {}\n    );\n  };\n\n  handleClose() {\n    this.setState({ open: false });\n    // this.setState({ setSelectedValue: value });\n  }\n\n  render() {\n    return (\n      <div className=\"options\">\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <IconButton className=\"iconButton\">\n              {this.state.saved ? (\n                <TurnedInIcon onClick={(e) => this.unsave(e)} />\n              ) : (\n                <TurnedInNotIcon onClick={(e) => this.save(e)} />\n              )}\n            </IconButton>\n          </Grid>{\" \"}\n          <Grid item>\n            <Typography>Save</Typography>\n          </Grid>{\" \"}\n        </Grid>{\" \"}\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <IconButton className=\"iconButton\" onClick={(e) => this.share(e)}>\n              <ShareSharpIconButton />\n            </IconButton>\n            <Dialog open={this.state.open} onClose={this.handleClose}>\n              <DialogTitle>{\"Share This or That\"}</DialogTitle>\n              <DialogContent>\n                <IconButton className=\"facebookIconButton\">\n                  <FacebookIcon onClick={(e) => this.facebookShare(e)} />\n                </IconButton>\n              </DialogContent>\n              {/* <DialogActions>\n                <Button autoFocus onClick={this.handleClose} color=\"primary\">\n                  Disagree\n                </Button>\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                  Agree\n                </Button>\n              </DialogActions> */}\n            </Dialog>\n          </Grid>{\" \"}\n          <Grid item>\n            <Typography>Share</Typography>\n          </Grid>{\" \"}\n        </Grid>{\" \"}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\n\nimport Image1 from \"../../Assets/pizza.jpg\";\nimport Image2 from \"../../Assets/ice-cream.jpg\";\n\nimport \"./styles.css\";\n\nexport default class ImageAndTextQuestion extends Component {\n  state = {\n    choice1: 0,\n    choice2: 0,\n    votes: 0,\n    seconds: 10\n  };\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const { seconds } = this.state;\n      if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n          seconds: seconds - 1\n        }));\n      }\n      if (seconds === 0) {\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  incrementChoice1 = (e) => {\n    this.setState({\n      choice1: this.state.choice1 + 1,\n      votes: this.state.votes + 1\n    }, function() {\n      console.log(\"Click1\");\n      window.location.href = \"/profiletot\";\n    });\n  };\n\n  incrementChoice2 = (e) => {\n    this.setState({\n      choice2: this.state.choice2 + 1,\n      votes: this.state.votes + 1\n    }, function() {\n      console.log(\"Click2\");\n      window.location.href = \"/profiletot\";\n    });\n  };\n\n  save = (e) => {\n    console.log(\"Save\");\n  };\n\n  share = (e) => {\n    console.log(\"Share\");\n  };\n\n  render() {\n    //const { title, option1, option2} = this.props;\n    return (\n      <div className=\"question\">\n        <Card className=\"card imageAndTextCard\">\n          <CardHeader title=\"What is Better for a Breakup?\" />\n          <div className=\"row\"> </div> <br />\n          <div className=\"options\">\n            <Grid container direction=\"column\" alignItems=\"center\">\n              <Grid item className=\"cardContainerLeft\">\n                <img\n                  className=\"image\"\n                  src={Image1}\n                  onClick={(e) => this.incrementChoice1(e)}\n                  alt=\"image1\"\n                />{\" \"}\n                <Typography className=\"cardCaptionText\"> Pizza </Typography>{\" \"}\n              </Grid>{\" \"}\n            </Grid>{\" \"}\n            <Grid container direction=\"column\" alignItems=\"center\">\n              <Grid item className=\"cardContainer\">\n                <img\n                  className=\"image\"\n                  src={Image2}\n                  onClick={(e) => this.incrementChoice2(e)}\n                  alt=\"image2\"\n                />{\" \"}\n                <Typography className=\"cardCaptionText\"> Ice Cream </Typography>{\" \"}\n              </Grid>{\" \"}\n            </Grid>{\" \"}\n          </div>{\" \"}\n          <Typography variant=\"caption\"> 12,000 votes </Typography>{\" \"}\n        </Card>{\" \"}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Options from \"./options\";\nimport ImageAndTextQuestion from \"./imageAndText\";\n// import ImageQuestion from \"./image\";\n// import TextQuestion from \"./text\";\n\nimport \"./styles.css\";\n\nexport default class Question extends Component {\n  state = {\n    choice1: 0,\n    choice2: 0,\n    votes: 0,\n    seconds: 10,\n    group: true\n  };\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const { seconds } = this.state;\n      if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n          seconds: seconds - 1\n        }));\n      }\n      if (seconds === 0) {\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    //const { title, option1, option2} = this.props;\n    if (this.state.group === false) {\n      return (\n        <div className=\"question\">\n          <ImageAndTextQuestion /> {/* <ImageQuestion /> */}{\" \"}\n          {/* <TextQuestion /> */} <br /> <br />\n          <div className=\"timer\">\n            <Typography>\n              {this.state.seconds}\n              {/* {this.state.votes} */}{\" \"}\n            </Typography>{\" \"}\n          </div>{\" \"}\n          <br />\n          <Options />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"question\">\n            <ImageAndTextQuestion /> {/* <ImageQuestion /> */}{\" \"}\n            {/* <TextQuestion /> */} <br /> <br />\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justify=\"center\"\n              className=\"timer\"\n            >\n              <Grid item>\n                <Typography>\n                  {this.state.seconds}\n                  {/* {this.state.votes} */}{\" \"}\n                </Typography>{\" \"}\n              </Grid>\n              <Grid item className=\"circularProgressWrapper\">\n                <CircularProgress size={36} className=\"circularProgress\" />\n              </Grid>\n            </Grid>{\" \"}\n            <br />\n            <Options />\n          </div>{\" \"}\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport PublicIcon from '@material-ui/icons/Public';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport './creator.css';\n\nexport default class Question extends Component {\n\n    state = {\n        title: \"\",\n        text1: \"\",\n        text2: \"\",\n        unsplashUrl1: \"\",\n        unsplashUrl2: \"\",\n        image1: null,\n        image2: null,\n\n        searchString: \"\",\n        results: [],\n        image1Url: \"\",\n        image2Url: \"\",\n        urlOption1: \"https://images.unsplash.com/photo-1560363199-a1264d4ea5fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1534&q=80\",\n        urlOption2: \"https://images.unsplash.com/photo-1570871303513-6faf999850fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=375&q=80\",\n        urlOption3: \"https://images.unsplash.com/photo-1572324755260-ec8c3e7fae29?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=237&q=80\",\n        urlOption4: \"https://images.unsplash.com/photo-1518823526-0df532eb95a8?ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80\",\n\n        open1: false,\n        open2: false\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    submit = e => {\n        console.log(\"right before\");\n        console.log(this.state.image1Name);\n        if (this.state.text1 !== this.state.image1Name)\n            document.getElementById(\"image1Uploader\").value = \"\";\n        if (this.state.text2 !== this.state.image2Name)\n            document.getElementById(\"image2Uploader\").value = \"\";\n\n        const fd = new FormData();\n        fd.append('title', this.state.title);\n        fd.append('text1', this.state.text1);\n        fd.append('text2', this.state.text2);\n        if (this.state.image1 !== null) {\n            fd.append('image1', this.state.image1, this.state.image1.name);\n        } else {\n            if (this.state.unsplashUrl1 !== \"\") {\n                fd.append('unsplashUrl1', this.state.unsplashUrl1);\n            }\n        }\n\n        if (this.state.image2 !== null) {\n            fd.append('image2', this.state.image2, this.state.image2.name);\n        } else {\n            if (this.state.unsplashUrl2 !== \"\") {\n                fd.append('unsplashUrl2', this.state.unsplashUrl2);\n            }\n        }\n\n        try {\n            axios.post('', fd).then(res => {\n                console.log(res);\n                window.location.href = '/totsubmit';\n            });\n        } catch (e) {\n            alert(\"Something went wrong!\");\n            window.location.href = '/totsubmit';\n        }\n    }\n\n    handleClickOpen = (openIndex) => {\n        console.log(openIndex);\n        if (openIndex === 1) {\n            this.setState({\n                open1: true\n            })\n        } else {\n            this.setState({\n                open2: true\n            })\n        }\n    }\n\n    handleClose = (openIndex) => {\n        console.log(openIndex);\n        if (openIndex === 1) {\n            this.setState({\n                open1: false\n            })\n        } else {\n            this.setState({\n                open2: false\n            })\n        }\n    }\n\n    search = () => {\n        console.log(\"you searched for >\" + this.state.searchString + \"<\");\n        var fetchString = 'https://api.unsplash.com/search/photos?page=1&query=' + this.state.searchString;\n        console.log(\"url: >\" + fetchString + \"<\");\n\n\n        fetch(fetchString, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-type': 'application/json',\n                'Authorization': 'Bearer 8b227e84043e03edfc04b0314134dd779c95415f5ca8a8564fb3a9f23174587c'\n            }\n        })\n            .then((res) => this.processResponse(res));\n    }\n\n    processResponse = (response) => {\n        if (response.status === 200) {\n            response.json().then(data => {\n                this.setState({\n                    results: data.results,\n                    urlOption1: data.results[0].urls.small,\n                    urlOption2: data.results[1].urls.small,\n                    urlOption3: data.results[2].urls.small,\n                    urlOption4: data.results[3].urls.small,\n                });\n            });\n        }\n    }\n\n    searchTextFieldKeyPressed = (e) => {\n        if (e.keyCode === 13) {\n            this.search();\n        }\n    }\n\n    selectUnsplashUrl1 = (urlToSet) => {\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\n\n        this.setState({\n            unsplashUrl1: urlToSet,\n            image1Url: urlToSet,\n            image1: null\n        }, function () {\n            console.log(\"unsplashUrl1: >\" + this.state.unsplashUrl1 + \"<\")\n            console.log(this.state.urlOption1);\n            console.log(this.state.urlOption2);\n            console.log(this.state.urlOption3);\n            console.log(this.state.urlOption4);\n            this.handleClose(1);\n        });\n    }\n\n    selectUnsplashUrl2 = (urlToSet) => {\n        console.log(\"urlToSet: >\" + urlToSet + \"<\");\n\n        this.setState({\n            unsplashUrl2: urlToSet,\n            image2Url: urlToSet,\n            image2: null\n        }, function () {\n            console.log(\"unsplashUrl2: >\" + this.state.unsplashUrl2 + \"<\")\n            console.log(this.state.urlOption1);\n            console.log(this.state.urlOption2);\n            console.log(this.state.urlOption3);\n            console.log(this.state.urlOption4);\n            this.handleClose(2);\n        });\n    }\n\n    image1SelectedHandler = e => {\n        console.log(\"image1: \" + e.target.files[0]);\n        this.setState({\n            image1Url: URL.createObjectURL(e.target.files[0]),\n            image1: e.target.files[0],\n            unsplashUrl1: \"\"\n        });\n    }\n\n    image2SelectedHandler = e => {\n        console.log(\"image2:\" + e.target.files[0]);\n        this.setState({\n            image2Url: URL.createObjectURL(e.target.files[0]),\n            image2: e.target.files[0],\n            unsplashUrl2: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <div className='holder'>\n                <Card className=\"creator\" raised>\n                    <div>\n                        <CardHeader title=\"Create a ToT\" />\n                        <br />\n                        <TextField\n                            className=\"questionTitle\"\n                            label=\"This or That\"\n                            variant=\"outlined\"\n                            name='title'\n                            value={this.state.title}\n                            onChange={e => this.onChange(e)}\n                        />\n                        <br />\n                        <TextField\n                            className=\"option1\"\n                            label=\"Option 1\"\n                            variant=\"outlined\"\n                            name='text1'\n                            value={this.state.text1}\n                            onChange={e => this.onChange(e)}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position='end' >\n                                        <input name=\"image1\" onChange={this.image1SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image1Uploader\" type=\"file\" />\n                                        <label htmlFor=\"image1Uploader\">\n                                            <Tooltip title=\"Upload image\">\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\n                                                    <ImageSearchIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </label>\n                                        <Tooltip title=\"Select image from Unsplash\">\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 1)}>\n                                                <PublicIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Dialog\n                                            open={this.state.open1}\n                                            onClose={this.handleClose.bind(this, 1)}\n                                            aria-labelledby=\"alert-dialog-title\"\n                                            aria-describedby=\"alert-dialog-description\"\n                                        >\n                                            <DialogTitle id=\"alert-dialog-title\">{\"This: Search for an image on Unsplash\"}</DialogTitle>\n                                            <DialogContent>\n                                                <TextField\n                                                    name=\"searchString\"\n                                                    value={this.state.searchString}\n                                                    onChange={e => this.onChange(e)}\n                                                    id=\"standard-basic\" label=\"Type here\"\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\n                                                <br /><br />\n                                                <GridList id=\"gridList1\">\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl1.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\n                                                    </GridListTile>\n                                                </GridList>\n                                            </DialogContent>\n                                            <DialogActions>\n                                                <Button onClick={this.handleClose.bind(this, 1)} color=\"primary\">\n                                                    Close\n                                                </Button>\n                                            </DialogActions>\n                                        </Dialog>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <br />\n                        <img className=\"image\" src={this.state.image1Url} alt=\"Preview 1\" />\n                        <br />\n                        <Typography variant=\"caption\">\n                            or\n                        </Typography>\n                        <br />\n                        <br />\n                        <TextField\n                            className=\"option2\"\n                            label=\"Option 2\"\n                            variant=\"outlined\"\n                            name='text2'\n                            value={this.state.text2}\n                            onChange={e => this.onChange(e)}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position='end' >\n                                        <input name=\"image2\" onChange={this.image2SelectedHandler} accept=\"image/*\" className=\"fileInput\" id=\"image2Uploader\" type=\"file\" />\n                                        <label htmlFor=\"image2Uploader\">\n                                            <Tooltip title=\"Upload image\">\n                                                <IconButton aria-label=\"upload image\" component=\"span\">\n                                                    <ImageSearchIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </label>\n                                        <Tooltip title=\"Select image from Unsplash\">\n                                            <IconButton aria-label=\"select image from unsplash\" component=\"span\" onClick={this.handleClickOpen.bind(this, 2)}>\n                                                <PublicIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Dialog\n                                            open={this.state.open2}\n                                            onClose={this.handleClose}\n                                            aria-labelledby=\"alert-dialog-title\"\n                                            aria-describedby=\"alert-dialog-description\"\n                                        >\n                                            <DialogTitle id=\"alert-dialog-title\">{\"That: Search for an image on Unsplash\"}</DialogTitle>\n                                            <DialogContent>\n                                                <TextField\n                                                    name=\"searchString\"\n                                                    value={this.state.searchString}\n                                                    onChange={e => this.onChange(e)}\n                                                    id=\"standard-basic\" label=\"Type here\"\n                                                    onKeyDown={this.searchTextFieldKeyPressed} />\n                                                <Button onClick={this.search} color=\"primary\">Search</Button>\n                                                <br /><br />\n                                                <GridList id=\"gridList2\">\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption1)} src={this.state.urlOption1} alt=\"imageOption1\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption2)} src={this.state.urlOption2} alt=\"imageOption2\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption3)} src={this.state.urlOption3} alt=\"imageOption3\" />\n                                                    </GridListTile>\n                                                    <GridListTile>\n                                                        <img onClick={this.selectUnsplashUrl2.bind(this, this.state.urlOption4)} src={this.state.urlOption4} alt=\"imageOption4\" />\n                                                    </GridListTile>\n                                                </GridList>\n                                            </DialogContent>\n                                            <DialogActions>\n                                                <Button onClick={this.handleClose.bind(this, 2)} color=\"primary\">\n                                                    Close\n                                                </Button>\n                                            </DialogActions>\n                                        </Dialog>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <br />\n                        <img className=\"image\" src={this.state.image2Url} alt=\"Preview 2\" />\n                        <br /><br />\n                        <Button onClick={this.submit} value=\"Submit\" variant=\"contained\" color=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport localStorage from \"local-storage\";\n// import QuestionWrapper from \"./Components/Pages/QuestionWrapper\";\nimport Signup from \"./Components/Signup\";\nimport Login from \"./Components/Login\";\nimport Join from \"./Components/Join\";\nimport Profile from \"./Components/Profile\";\nimport ProfileToT from \"./Components/ProfileToT\";\nimport ToTSubmit from \"./Components/ToTSubmit\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Question from \"./Components/Question\";\nimport Creator from \"./Components/Creator\";\n\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1da1f2\",\n      light: \"#E8EEF8\",\n      dark: \"#0c90e1\"\n    },\n    secondary: {\n      main: \"#657786\",\n      light: \"#E8EEF8\",\n      dark: \"#2653A6\"\n    }\n  }\n});\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false\n  };\n\n  saveToLocalStorage = () => {\n    try {\n      localStorage.set(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\n    } catch (e) {}\n  };\n\n  loadFromLocalStorage = () => {\n    try {\n      var isLoggedInCopy = JSON.parse(localStorage.get(\"isLoggedIn\"));\n      this.setState({ isLoggedIn: isLoggedInCopy });\n    } catch (e) {}\n  };\n\n  changeIsLoggedIn = (newValue) => {\n    this.setState(\n      {\n        isLoggedIn: newValue\n      },\n      function() {\n        this.saveToLocalStorage();\n        console.log(\"This got called: \" + this.state.isLoggedIn);\n      }\n    );\n  };\n\n  UNSAFE_componentWillMount = () => {\n    this.loadFromLocalStorage();\n  };\n\n  UNSAFE_componentWillUnmount = () => {\n    this.saveToLocalStorage();\n  };\n\n  UNSAFE_componentWillUpdate = () => {\n    this.saveToLocalStorage();\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <Router>\n            <div>\n              <Header\n                isLoggedIn={this.state.isLoggedIn}\n                changeIsLoggedIn={this.changeIsLoggedIn}\n              />\n              <div className=\"screen\">\n                <div className=\"background\">\n                  {\" \"}\n                  <Switch>\n                    <Route\n                      path=\"/login\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Redirect to=\"/feed\" />\n                        ) : (\n                          <Login changeIsLoggedIn={this.changeIsLoggedIn} />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/signup\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Redirect to=\"/feed\" />\n                        ) : (\n                          <Signup />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/feed\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Question />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    {/* <Route\n                      path=\"/join\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Join />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    /> */}\n                    <Route\n                      path=\"/creator\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Creator />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/profile\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Profile />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/question\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Question />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/totsubmit\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <ToTSubmit />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"/profiletot\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <ProfileToT />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                    <Route\n                      path=\"*\"\n                      render={(props) =>\n                        this.state.isLoggedIn ? (\n                          <Question />\n                        ) : (\n                          <Redirect to=\"/login\" />\n                        )\n                      }\n                    />\n                  </Switch>\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>\n          </Router>\n        </StylesProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}